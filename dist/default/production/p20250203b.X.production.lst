

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 07 11:17:08 2025

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F84A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    25                           	dabs	1,0x4E,2
    26  0000                     
    27                           ; Version 2.10
    28                           ; Generated 31/07/2019 GMT
    29                           ; 
    30                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F84A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  0088                     	;# 
    76  0089                     	;# 
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  0006                     _PORTB	set	6
    94  0005                     _PORTA	set	5
    95  0006                     _PORTBbits	set	6
    96  000B                     _INTCON	set	11
    97  0001                     _TMR0	set	1
    98  0086                     _TRISB	set	134
    99  0085                     _TRISA	set	133
   100  0081                     _OPTION_REG	set	129
   101                           
   102                           ; #config settings
   103  0000                     
   104                           	psect	cinit
   105  000C                     start_initialization:	
   106  000C                     __initialization:	
   107                           
   108                           ; Clear objects allocated to BANK0
   109  000C  1283               	bcf	3,5	;RP0=0, select bank0
   110  000D  01AB               	clrf	__pbssBANK0& (0+127)
   111  000E  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   112  000F  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   113  0010  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   114  0011                     end_of_initialization:	
   115                           ;End of C runtime variable initialization code
   116                           
   117  0011                     __end_of__initialization:	
   118  0011  0183               	clrf	3
   119  0012  2A44               	ljmp	_main	;jump to C main() function
   120                           
   121                           	psect	bssBANK0
   122  002B                     __pbssBANK0:	
   123  002B                     _tenthSeconds:	
   124  002B                     	ds	2
   125  002D                     _overflowCount:	
   126  002D                     	ds	1
   127  002E                     _timerRunning:	
   128  002E                     	ds	1
   129                           
   130                           	psect	cstackBANK0
   131  000C                     __pcstackBANK0:	
   132  000C                     ?_out_inst_LCD:	
   133  000C                     ?_LCD_wr_char:	
   134                           ; 1 bytes @ 0x0
   135                           
   136  000C                     ?_out_str_LCD:	
   137                           ; 1 bytes @ 0x0
   138                           
   139  000C                     ?_out_LCD:	
   140                           ; 1 bytes @ 0x0
   141                           
   142  000C                     ?_startTimer:	
   143                           ; 1 bytes @ 0x0
   144                           
   145  000C                     ?_displayTime:	
   146                           ; 1 bytes @ 0x0
   147                           
   148  000C                     ?_ISR:	
   149                           ; 1 bytes @ 0x0
   150                           
   151  000C                     ?_init_LCD:	
   152                           ; 1 bytes @ 0x0
   153                           
   154  000C                     ?_main:	
   155                           ; 1 bytes @ 0x0
   156                           
   157  000C                     ?i1_LCD_wr_char:	
   158                           ; 1 bytes @ 0x0
   159                           
   160  000C                     ?i1_out_inst_LCD:	
   161                           ; 1 bytes @ 0x0
   162                           
   163  000C                     ?i1_out_str_LCD:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  000C                     ?i1_out_LCD:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  000C                     ??i1_out_LCD:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  000C                     ?___lwdiv:	
   173                           ; 1 bytes @ 0x0
   174                           
   175  000C                     ___lwdiv@divisor:	
   176                           ; 2 bytes @ 0x0
   177                           
   178                           
   179                           ; 2 bytes @ 0x0
   180  000C                     	ds	2
   181  000E                     i1out_LCD@data:	
   182  000E                     ___lwdiv@dividend:	
   183                           ; 1 bytes @ 0x2
   184                           
   185                           
   186                           ; 2 bytes @ 0x2
   187  000E                     	ds	1
   188  000F                     ??i1_out_inst_LCD:	
   189  000F                     ??i1_out_str_LCD:	
   190                           ; 1 bytes @ 0x3
   191                           
   192                           
   193                           ; 1 bytes @ 0x3
   194  000F                     	ds	1
   195  0010                     ??___lwdiv:	
   196  0010                     i1out_str_LCD@out_data:	
   197                           ; 1 bytes @ 0x4
   198                           
   199                           
   200                           ; 1 bytes @ 0x4
   201  0010                     	ds	1
   202  0011                     ??i1_LCD_wr_char:	
   203  0011                     i1out_inst_LCD@out_data:	
   204                           ; 1 bytes @ 0x5
   205                           
   206  0011                     ___lwdiv@quotient:	
   207                           ; 1 bytes @ 0x5
   208                           
   209                           
   210                           ; 2 bytes @ 0x5
   211  0011                     	ds	1
   212  0012                     ?i1_LCD_goto:	
   213  0012                     i1LCD_goto@y:	
   214                           ; 1 bytes @ 0x6
   215                           
   216                           
   217                           ; 1 bytes @ 0x6
   218  0012                     	ds	1
   219  0013                     ??i1_LCD_goto:	
   220  0013                     ___lwdiv@counter:	
   221                           ; 1 bytes @ 0x7
   222                           
   223  0013                     i1LCD_wr_char@str_L:	
   224                           ; 1 bytes @ 0x7
   225                           
   226                           
   227                           ; 1 bytes @ 0x7
   228  0013                     	ds	1
   229  0014                     ?___lwmod:	
   230  0014                     i1LCD_goto@x:	
   231                           ; 2 bytes @ 0x8
   232                           
   233  0014                     i1LCD_wr_char@c:	
   234                           ; 1 bytes @ 0x8
   235                           
   236  0014                     ___lwmod@divisor:	
   237                           ; 1 bytes @ 0x8
   238                           
   239                           
   240                           ; 2 bytes @ 0x8
   241  0014                     	ds	1
   242  0015                     i1LCD_wr_char@str_H:	
   243  0015                     i1_LCD_goto$85:	
   244                           ; 1 bytes @ 0x9
   245                           
   246                           
   247                           ; 2 bytes @ 0x9
   248  0015                     	ds	1
   249  0016                     ___lwmod@dividend:	
   250                           
   251                           ; 2 bytes @ 0xA
   252  0016                     	ds	1
   253  0017                     i1LCD_goto@pos:	
   254                           
   255                           ; 1 bytes @ 0xB
   256  0017                     	ds	1
   257  0018                     ??___lwmod:	
   258                           
   259                           ; 1 bytes @ 0xC
   260  0018                     	ds	1
   261  0019                     ___lwmod@counter:	
   262                           
   263                           ; 1 bytes @ 0xD
   264  0019                     	ds	1
   265  001A                     ??_displayTime:	
   266                           
   267                           ; 1 bytes @ 0xE
   268  001A                     	ds	1
   269  001B                     ??_ISR:	
   270                           
   271                           ; 1 bytes @ 0xF
   272  001B                     	ds	3
   273  001E                     ??_out_LCD:	
   274  001E                     ??_startTimer:	
   275                           ; 1 bytes @ 0x12
   276                           
   277                           
   278                           ; 1 bytes @ 0x12
   279  001E                     	ds	2
   280  0020                     out_LCD@data:	
   281                           
   282                           ; 1 bytes @ 0x14
   283  0020                     	ds	1
   284  0021                     ??_out_inst_LCD:	
   285  0021                     ??_out_str_LCD:	
   286                           ; 1 bytes @ 0x15
   287                           
   288                           
   289                           ; 1 bytes @ 0x15
   290  0021                     	ds	1
   291  0022                     out_str_LCD@out_data:	
   292                           
   293                           ; 1 bytes @ 0x16
   294  0022                     	ds	1
   295  0023                     ??_LCD_wr_char:	
   296  0023                     out_inst_LCD@out_data:	
   297                           ; 1 bytes @ 0x17
   298                           
   299                           
   300                           ; 1 bytes @ 0x17
   301  0023                     	ds	1
   302  0024                     ?_LCD_goto:	
   303  0024                     ??_init_LCD:	
   304                           ; 1 bytes @ 0x18
   305                           
   306  0024                     LCD_goto@y:	
   307                           ; 1 bytes @ 0x18
   308                           
   309                           
   310                           ; 1 bytes @ 0x18
   311  0024                     	ds	1
   312  0025                     ??_LCD_goto:	
   313  0025                     LCD_wr_char@str_L:	
   314                           ; 1 bytes @ 0x19
   315                           
   316                           
   317                           ; 1 bytes @ 0x19
   318  0025                     	ds	1
   319  0026                     LCD_goto@x:	
   320  0026                     LCD_wr_char@c:	
   321                           ; 1 bytes @ 0x1A
   322                           
   323  0026                     init_LCD@i:	
   324                           ; 1 bytes @ 0x1A
   325                           
   326                           
   327                           ; 2 bytes @ 0x1A
   328  0026                     	ds	1
   329  0027                     LCD_wr_char@str_H:	
   330  0027                     _LCD_goto$85:	
   331                           ; 1 bytes @ 0x1B
   332                           
   333                           
   334                           ; 2 bytes @ 0x1B
   335  0027                     	ds	2
   336  0029                     LCD_goto@pos:	
   337                           
   338                           ; 1 bytes @ 0x1D
   339  0029                     	ds	1
   340  002A                     ??_main:	
   341                           
   342                           ; 1 bytes @ 0x1E
   343  002A                     	ds	1
   344                           
   345                           	psect	maintext
   346  0244                     __pmaintext:	
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 145 in file "newfile.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : B00/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0
   366 ;;      Params:         0       0
   367 ;;      Locals:         0       0
   368 ;;      Temps:          0       1
   369 ;;      Totals:         0       1
   370 ;;Total ram usage:        1 bytes
   371 ;; Hardware stack levels required when called:    8
   372 ;; This function calls:
   373 ;;		_LCD_goto
   374 ;;		_LCD_wr_char
   375 ;;		_init_LCD
   376 ;;		_startTimer
   377 ;; This function is called by:
   378 ;;		Startup code after reset
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           
   383                           ;psect for function _main
   384  0244                     _main:	
   385  0244                     l1051:	
   386                           ;incstack = 0
   387                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   388                           
   389                           
   390                           ;newfile.c: 146:     TRISA = 0b00000000;
   391  0244  1683               	bsf	3,5	;RP0=1, select bank1
   392  0245  0185               	clrf	5	;volatile
   393                           
   394                           ;newfile.c: 147:     TRISB = 0b00000000;
   395  0246  0186               	clrf	6	;volatile
   396                           
   397                           ;newfile.c: 148:     PORTA = 0x00;
   398  0247  1283               	bcf	3,5	;RP0=0, select bank0
   399  0248  0185               	clrf	5	;volatile
   400                           
   401                           ;newfile.c: 149:     PORTB = 0x00;
   402  0249  0186               	clrf	6	;volatile
   403  024A                     l1053:	
   404                           
   405                           ;newfile.c: 151:     init_LCD();
   406  024A  2013               	fcall	_init_LCD
   407  024B                     l1055:	
   408                           
   409                           ;newfile.c: 154:     LCD_goto(1, 7);
   410  024B  3007               	movlw	7
   411  024C  1283               	bcf	3,5	;RP0=0, select bank0
   412  024D  00AA               	movwf	??_main
   413  024E  082A               	movf	??_main,w
   414  024F  00A4               	movwf	LCD_goto@y
   415  0250  3001               	movlw	1
   416  0251  21C2               	fcall	_LCD_goto
   417  0252                     l1057:	
   418                           
   419                           ;newfile.c: 155:     LCD_wr_char('0');
   420  0252  3030               	movlw	48
   421  0253  2208               	fcall	_LCD_wr_char
   422  0254                     l1059:	
   423                           
   424                           ;newfile.c: 156:     LCD_wr_char('0');
   425  0254  3030               	movlw	48
   426  0255  2208               	fcall	_LCD_wr_char
   427  0256                     l1061:	
   428                           
   429                           ;newfile.c: 157:     LCD_wr_char('.');
   430  0256  302E               	movlw	46
   431  0257  2208               	fcall	_LCD_wr_char
   432  0258                     l1063:	
   433                           
   434                           ;newfile.c: 158:     LCD_wr_char('0');
   435  0258  3030               	movlw	48
   436  0259  2208               	fcall	_LCD_wr_char
   437  025A                     l1065:	
   438                           
   439                           ;newfile.c: 159:     LCD_wr_char('s');
   440  025A  3073               	movlw	115
   441  025B  2208               	fcall	_LCD_wr_char
   442  025C                     l1067:	
   443                           
   444                           ;newfile.c: 161:     startTimer();
   445  025C  2283               	fcall	_startTimer
   446  025D                     l78:	
   447                           ;newfile.c: 163:     while(1) {
   448                           
   449  025D                     l79:	
   450                           ;newfile.c: 165:     }
   451                           
   452  025D  2A5D               	goto	l78
   453  025E  280B               	ljmp	start
   454  025F                     __end_of_main:	
   455                           
   456                           	psect	text1
   457  0283                     __ptext1:	
   458 ;; *************** function _startTimer *****************
   459 ;; Defined at:
   460 ;;		line 30 in file "newfile.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0
   474 ;;      Params:         0       0
   475 ;;      Locals:         0       0
   476 ;;      Temps:          0       1
   477 ;;      Totals:         0       1
   478 ;;Total ram usage:        1 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    5
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           
   489                           ;psect for function _startTimer
   490  0283                     _startTimer:	
   491  0283                     l987:	
   492                           ;incstack = 0
   493                           ; Regs used in _startTimer: [wreg]
   494                           
   495                           
   496                           ;newfile.c: 31:     TMR0 = 12;
   497  0283  300C               	movlw	12
   498  0284  1283               	bcf	3,5	;RP0=0, select bank0
   499  0285  0081               	movwf	1	;volatile
   500                           
   501                           ;newfile.c: 32:     OPTION_REG = 0b00000111;
   502  0286  3007               	movlw	7
   503  0287  1683               	bsf	3,5	;RP0=1, select bank1
   504  0288  0081               	movwf	1	;volatile
   505                           
   506                           ;newfile.c: 33:     INTCON = 0b10100000;
   507  0289  30A0               	movlw	160
   508  028A  008B               	movwf	11	;volatile
   509                           
   510                           ;newfile.c: 34:     timerRunning = 1;
   511  028B  3001               	movlw	1
   512  028C  1283               	bcf	3,5	;RP0=0, select bank0
   513  028D  009E               	movwf	??_startTimer
   514  028E  081E               	movf	??_startTimer,w
   515  028F  00AE               	movwf	_timerRunning	;volatile
   516  0290                     l35:	
   517  0290  0008               	return
   518  0291                     __end_of_startTimer:	
   519                           
   520                           	psect	text2
   521  0013                     __ptext2:	
   522 ;; *************** function _init_LCD *****************
   523 ;; Defined at:
   524 ;;		line 79 in file "newfile.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;  i               2   26[BANK0 ] int 
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0
   538 ;;      Params:         0       0
   539 ;;      Locals:         0       2
   540 ;;      Temps:          0       2
   541 ;;      Totals:         0       4
   542 ;;Total ram usage:        4 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; Hardware stack levels required when called:    7
   545 ;; This function calls:
   546 ;;		_out_inst_LCD
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           
   553                           ;psect for function _init_LCD
   554  0013                     _init_LCD:	
   555  0013                     l1013:	
   556                           ;incstack = 0
   557                           ; Regs used in _init_LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   558                           
   559                           
   560                           ;newfile.c: 81:     int i;;newfile.c: 83:     _delay((unsigned long)((20)*(10000000/4000
      +                          .0)));
   561  0013  3041               	movlw	65
   562  0014  1283               	bcf	3,5	;RP0=0, select bank0
   563  0015  00A5               	movwf	??_init_LCD+1
   564  0016  30EE               	movlw	238
   565  0017  00A4               	movwf	??_init_LCD
   566  0018                     u557:	
   567  0018  0BA4               	decfsz	??_init_LCD,f
   568  0019  2818               	goto	u557
   569  001A  0BA5               	decfsz	??_init_LCD+1,f
   570  001B  2818               	goto	u557
   571  001C  0000               	nop
   572  001D                     l1015:	
   573                           
   574                           ;newfile.c: 85:     for (i = 0; i < 3; i++) {
   575  001D  1283               	bcf	3,5	;RP0=0, select bank0
   576  001E  01A6               	clrf	init_LCD@i
   577  001F  01A7               	clrf	init_LCD@i+1
   578  0020                     l1021:	
   579                           
   580                           ;newfile.c: 86:         out_inst_LCD(0x03);
   581  0020  3003               	movlw	3
   582  0021  225F               	fcall	_out_inst_LCD
   583  0022                     l1023:	
   584                           
   585                           ;newfile.c: 87:         _delay((unsigned long)((5)*(10000000/4000.0)));
   586  0022  3011               	movlw	17
   587  0023  1283               	bcf	3,5	;RP0=0, select bank0
   588  0024  00A5               	movwf	??_init_LCD+1
   589  0025  303A               	movlw	58
   590  0026  00A4               	movwf	??_init_LCD
   591  0027                     u567:	
   592  0027  0BA4               	decfsz	??_init_LCD,f
   593  0028  2827               	goto	u567
   594  0029  0BA5               	decfsz	??_init_LCD+1,f
   595  002A  2827               	goto	u567
   596  002B  0000               	nop
   597  002C                     l1025:	
   598                           
   599                           ;newfile.c: 88:     }
   600  002C  3001               	movlw	1
   601  002D  1283               	bcf	3,5	;RP0=0, select bank0
   602  002E  07A6               	addwf	init_LCD@i,f
   603  002F  1803               	skipnc
   604  0030  0AA7               	incf	init_LCD@i+1,f
   605  0031  3000               	movlw	0
   606  0032  07A7               	addwf	init_LCD@i+1,f
   607  0033                     l1027:	
   608  0033  0827               	movf	init_LCD@i+1,w
   609  0034  3A80               	xorlw	128
   610  0035  00CF               	movwf	btemp+1
   611  0036  3080               	movlw	128
   612  0037  024F               	subwf	btemp+1,w
   613  0038  1D03               	skipz
   614  0039  283C               	goto	u515
   615  003A  3003               	movlw	3
   616  003B  0226               	subwf	init_LCD@i,w
   617  003C                     u515:	
   618  003C  1C03               	skipc
   619  003D  283F               	goto	u511
   620  003E  2840               	goto	u510
   621  003F                     u511:	
   622  003F  2820               	goto	l1021
   623  0040                     u510:	
   624  0040                     l1029:	
   625                           
   626                           ;newfile.c: 90:     out_inst_LCD(0x02);
   627  0040  3002               	movlw	2
   628  0041  225F               	fcall	_out_inst_LCD
   629                           
   630                           ;newfile.c: 91:     out_inst_LCD(0x02);
   631  0042  3002               	movlw	2
   632  0043  225F               	fcall	_out_inst_LCD
   633                           
   634                           ;newfile.c: 92:     out_inst_LCD(0x08);
   635  0044  3008               	movlw	8
   636  0045  225F               	fcall	_out_inst_LCD
   637                           
   638                           ;newfile.c: 93:     out_inst_LCD(0x00);
   639  0046  3000               	movlw	0
   640  0047  225F               	fcall	_out_inst_LCD
   641                           
   642                           ;newfile.c: 94:     out_inst_LCD(0x0c);
   643  0048  300C               	movlw	12
   644  0049  225F               	fcall	_out_inst_LCD
   645                           
   646                           ;newfile.c: 96:     out_inst_LCD(0x00);
   647  004A  3000               	movlw	0
   648  004B  225F               	fcall	_out_inst_LCD
   649                           
   650                           ;newfile.c: 97:     out_inst_LCD(0x01);
   651  004C  3001               	movlw	1
   652  004D  225F               	fcall	_out_inst_LCD
   653                           
   654                           ;newfile.c: 98:     out_inst_LCD(0x00);
   655  004E  3000               	movlw	0
   656  004F  225F               	fcall	_out_inst_LCD
   657                           
   658                           ;newfile.c: 99:     out_inst_LCD(0x06);
   659  0050  3006               	movlw	6
   660  0051  225F               	fcall	_out_inst_LCD
   661  0052                     l1031:	
   662                           
   663                           ;newfile.c: 101:     _delay((unsigned long)((20)*(10000000/4000.0)));
   664  0052  3041               	movlw	65
   665  0053  1283               	bcf	3,5	;RP0=0, select bank0
   666  0054  00A5               	movwf	??_init_LCD+1
   667  0055  30EE               	movlw	238
   668  0056  00A4               	movwf	??_init_LCD
   669  0057                     u577:	
   670  0057  0BA4               	decfsz	??_init_LCD,f
   671  0058  2857               	goto	u577
   672  0059  0BA5               	decfsz	??_init_LCD+1,f
   673  005A  2857               	goto	u577
   674  005B  0000               	nop
   675  005C                     l61:	
   676  005C  0008               	return
   677  005D                     __end_of_init_LCD:	
   678                           
   679                           	psect	text3
   680  0208                     __ptext3:	
   681 ;; *************** function _LCD_wr_char *****************
   682 ;; Defined at:
   683 ;;		line 105 in file "newfile.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  c               1    wreg     unsigned char 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  c               1   26[BANK0 ] unsigned char 
   688 ;;  str_H           1   27[BANK0 ] unsigned char 
   689 ;;  str_L           1   25[BANK0 ] unsigned char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0
   699 ;;      Params:         0       0
   700 ;;      Locals:         0       3
   701 ;;      Temps:          0       2
   702 ;;      Totals:         0       5
   703 ;;Total ram usage:        5 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    7
   706 ;; This function calls:
   707 ;;		_out_str_LCD
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           
   714                           ;psect for function _LCD_wr_char
   715  0208                     _LCD_wr_char:	
   716                           
   717                           ;incstack = 0
   718                           ; Regs used in _LCD_wr_char: [wreg+status,2+status,0+pclath+cstack]
   719                           ;LCD_wr_char@c stored from wreg
   720  0208  1283               	bcf	3,5	;RP0=0, select bank0
   721  0209  00A6               	movwf	LCD_wr_char@c
   722  020A                     l1003:	
   723                           
   724                           ;newfile.c: 105: void LCD_wr_char(char c);newfile.c: 106: {;newfile.c: 107:     char str
      +                          _H, str_L;;newfile.c: 109:     str_H = c & 0xf0;
   725  020A  0826               	movf	LCD_wr_char@c,w
   726  020B  39F0               	andlw	240
   727  020C  00A3               	movwf	??_LCD_wr_char
   728  020D  0823               	movf	??_LCD_wr_char,w
   729  020E  00A7               	movwf	LCD_wr_char@str_H
   730  020F                     l1005:	
   731                           
   732                           ;newfile.c: 110:     str_H = str_H >> 4;
   733  020F  0827               	movf	LCD_wr_char@str_H,w
   734  0210  00A3               	movwf	??_LCD_wr_char
   735  0211  3004               	movlw	4
   736  0212                     u505:	
   737  0212  1003               	clrc
   738  0213  0CA3               	rrf	??_LCD_wr_char,f
   739  0214  3EFF               	addlw	-1
   740  0215  1D03               	skipz
   741  0216  2A12               	goto	u505
   742  0217  0823               	movf	??_LCD_wr_char,w
   743  0218  00A4               	movwf	??_LCD_wr_char+1
   744  0219  0824               	movf	??_LCD_wr_char+1,w
   745  021A  00A7               	movwf	LCD_wr_char@str_H
   746  021B                     l1007:	
   747                           
   748                           ;newfile.c: 111:     str_L = c & 0x0f;
   749  021B  0826               	movf	LCD_wr_char@c,w
   750  021C  390F               	andlw	15
   751  021D  00A3               	movwf	??_LCD_wr_char
   752  021E  0823               	movf	??_LCD_wr_char,w
   753  021F  00A5               	movwf	LCD_wr_char@str_L
   754  0220                     l1009:	
   755                           
   756                           ;newfile.c: 113:     out_str_LCD(str_H);
   757  0220  0827               	movf	LCD_wr_char@str_H,w
   758  0221  2291               	fcall	_out_str_LCD
   759  0222                     l1011:	
   760                           
   761                           ;newfile.c: 114:     out_str_LCD(str_L);
   762  0222  1283               	bcf	3,5	;RP0=0, select bank0
   763  0223  0825               	movf	LCD_wr_char@str_L,w
   764  0224  2291               	fcall	_out_str_LCD
   765  0225                     l64:	
   766  0225  0008               	return
   767  0226                     __end_of_LCD_wr_char:	
   768                           
   769                           	psect	text4
   770  0291                     __ptext4:	
   771 ;; *************** function _out_str_LCD *****************
   772 ;; Defined at:
   773 ;;		line 127 in file "newfile.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  out_data        1    wreg     unsigned char 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  out_data        1   22[BANK0 ] unsigned char 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0, pclath, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0
   787 ;;      Params:         0       0
   788 ;;      Locals:         0       1
   789 ;;      Temps:          0       1
   790 ;;      Totals:         0       2
   791 ;;Total ram usage:        2 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    6
   794 ;; This function calls:
   795 ;;		_out_LCD
   796 ;; This function is called by:
   797 ;;		_LCD_wr_char
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _out_str_LCD
   803  0291                     _out_str_LCD:	
   804                           
   805                           ;incstack = 0
   806                           ; Regs used in _out_str_LCD: [wreg+status,2+status,0+pclath+cstack]
   807                           ;out_str_LCD@out_data stored from wreg
   808  0291  1283               	bcf	3,5	;RP0=0, select bank0
   809  0292  00A2               	movwf	out_str_LCD@out_data
   810  0293                     l907:	
   811                           
   812                           ;newfile.c: 127: void out_str_LCD(unsigned char out_data);newfile.c: 128: {;newfile.c: 1
      +                          29:     out_LCD(out_data);
   813  0293  0822               	movf	out_str_LCD@out_data,w
   814  0294  20E2               	fcall	_out_LCD
   815  0295                     l909:	
   816                           
   817                           ;newfile.c: 130:     PORTBbits.RB0 = 1; PORTBbits.RB1 = 1;
   818  0295  1283               	bcf	3,5	;RP0=0, select bank0
   819  0296  1406               	bsf	6,0	;volatile
   820  0297                     l911:	
   821  0297  1486               	bsf	6,1	;volatile
   822  0298                     l913:	
   823                           
   824                           ;newfile.c: 131:     PORTBbits.RB1 = 0;
   825  0298  1086               	bcf	6,1	;volatile
   826  0299                     l915:	
   827                           
   828                           ;newfile.c: 132:     _delay((unsigned long)((100)*(10000000/4000000.0)));
   829  0299  3053               	movlw	83
   830  029A  00A1               	movwf	??_out_str_LCD
   831  029B                     u587:	
   832  029B  0BA1               	decfsz	??_out_str_LCD,f
   833  029C  2A9B               	goto	u587
   834  029D                     l70:	
   835  029D  0008               	return
   836  029E                     __end_of_out_str_LCD:	
   837                           
   838                           	psect	text5
   839  01C2                     __ptext5:	
   840 ;; *************** function _LCD_goto *****************
   841 ;; Defined at:
   842 ;;		line 43 in file "newfile.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  x               1    wreg     unsigned char 
   845 ;;  y               1   24[BANK0 ] unsigned char 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  x               1   26[BANK0 ] unsigned char 
   848 ;;  pos             1   29[BANK0 ] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2, status,0, pclath, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0
   858 ;;      Params:         0       1
   859 ;;      Locals:         0       4
   860 ;;      Temps:          0       1
   861 ;;      Totals:         0       6
   862 ;;Total ram usage:        6 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    7
   865 ;; This function calls:
   866 ;;		_out_inst_LCD
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _LCD_goto
   874  01C2                     _LCD_goto:	
   875                           
   876                           ;incstack = 0
   877                           ; Regs used in _LCD_goto: [wreg+status,2+status,0+pclath+cstack]
   878                           ;LCD_goto@x stored from wreg
   879  01C2  1283               	bcf	3,5	;RP0=0, select bank0
   880  01C3  00A6               	movwf	LCD_goto@x
   881  01C4                     l989:	
   882                           
   883                           ;newfile.c: 44:     unsigned char pos = 0x80 | (x ? 0x40 : 0x00) | y;
   884  01C4  0826               	movf	LCD_goto@x,w
   885  01C5  1D03               	btfss	3,2
   886  01C6  29C8               	goto	u481
   887  01C7  29C9               	goto	u480
   888  01C8                     u481:	
   889  01C8  29CC               	goto	l993
   890  01C9                     u480:	
   891  01C9                     l991:	
   892  01C9  01A7               	clrf	_LCD_goto$85
   893  01CA  01A8               	clrf	_LCD_goto$85+1
   894  01CB  29D0               	goto	l995
   895  01CC                     l993:	
   896  01CC  3040               	movlw	64
   897  01CD  00A7               	movwf	_LCD_goto$85
   898  01CE  3000               	movlw	0
   899  01CF  00A8               	movwf	_LCD_goto$85+1
   900  01D0                     l995:	
   901  01D0  0827               	movf	_LCD_goto$85,w
   902  01D1  0424               	iorwf	LCD_goto@y,w
   903  01D2  3880               	iorlw	128
   904  01D3  00A5               	movwf	??_LCD_goto
   905  01D4  0825               	movf	??_LCD_goto,w
   906  01D5  00A9               	movwf	LCD_goto@pos
   907  01D6                     l997:	
   908                           
   909                           ;newfile.c: 45:     out_inst_LCD(pos >> 4);
   910  01D6  0829               	movf	LCD_goto@pos,w
   911  01D7  00A5               	movwf	??_LCD_goto
   912  01D8  3004               	movlw	4
   913  01D9                     u495:	
   914  01D9  1003               	clrc
   915  01DA  0CA5               	rrf	??_LCD_goto,f
   916  01DB  3EFF               	addlw	-1
   917  01DC  1D03               	skipz
   918  01DD  29D9               	goto	u495
   919  01DE  0825               	movf	??_LCD_goto,w
   920  01DF  225F               	fcall	_out_inst_LCD
   921  01E0                     l999:	
   922                           
   923                           ;newfile.c: 46:     out_inst_LCD(pos & 0x0F);
   924  01E0  1283               	bcf	3,5	;RP0=0, select bank0
   925  01E1  0829               	movf	LCD_goto@pos,w
   926  01E2  390F               	andlw	15
   927  01E3  225F               	fcall	_out_inst_LCD
   928  01E4                     l45:	
   929  01E4  0008               	return
   930  01E5                     __end_of_LCD_goto:	
   931                           
   932                           	psect	text6
   933  025F                     __ptext6:	
   934 ;; *************** function _out_inst_LCD *****************
   935 ;; Defined at:
   936 ;;		line 118 in file "newfile.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  out_data        1    wreg     unsigned char 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  out_data        1   23[BANK0 ] unsigned char 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, status,2, status,0, pclath, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0
   950 ;;      Params:         0       0
   951 ;;      Locals:         0       1
   952 ;;      Temps:          0       2
   953 ;;      Totals:         0       3
   954 ;;Total ram usage:        3 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    6
   957 ;; This function calls:
   958 ;;		_out_LCD
   959 ;; This function is called by:
   960 ;;		_LCD_goto
   961 ;;		_init_LCD
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function _out_inst_LCD
   967  025F                     _out_inst_LCD:	
   968                           
   969                           ;incstack = 0
   970                           ; Regs used in _out_inst_LCD: [wreg+status,2+status,0+pclath+cstack]
   971                           ;out_inst_LCD@out_data stored from wreg
   972  025F  1283               	bcf	3,5	;RP0=0, select bank0
   973  0260  00A3               	movwf	out_inst_LCD@out_data
   974  0261                     l897:	
   975                           
   976                           ;newfile.c: 118: void out_inst_LCD(unsigned char out_data);newfile.c: 119: {;newfile.c: 
      +                          120:     out_LCD(out_data);
   977  0261  0823               	movf	out_inst_LCD@out_data,w
   978  0262  20E2               	fcall	_out_LCD
   979  0263                     l899:	
   980                           
   981                           ;newfile.c: 121:     PORTBbits.RB0 = 0; PORTBbits.RB1 = 1;
   982  0263  1283               	bcf	3,5	;RP0=0, select bank0
   983  0264  1006               	bcf	6,0	;volatile
   984  0265                     l901:	
   985  0265  1486               	bsf	6,1	;volatile
   986  0266                     l903:	
   987                           
   988                           ;newfile.c: 122:     PORTBbits.RB1 = 0;
   989  0266  1086               	bcf	6,1	;volatile
   990  0267                     l905:	
   991                           
   992                           ;newfile.c: 123:     _delay((unsigned long)((5)*(10000000/4000.0)));
   993  0267  3011               	movlw	17
   994  0268  00A2               	movwf	??_out_inst_LCD+1
   995  0269  303A               	movlw	58
   996  026A  00A1               	movwf	??_out_inst_LCD
   997  026B                     u597:	
   998  026B  0BA1               	decfsz	??_out_inst_LCD,f
   999  026C  2A6B               	goto	u597
  1000  026D  0BA2               	decfsz	??_out_inst_LCD+1,f
  1001  026E  2A6B               	goto	u597
  1002  026F  0000               	nop
  1003  0270                     l67:	
  1004  0270  0008               	return
  1005  0271                     __end_of_out_inst_LCD:	
  1006                           
  1007                           	psect	text7
  1008  00E2                     __ptext7:	
  1009 ;; *************** function _out_LCD *****************
  1010 ;; Defined at:
  1011 ;;		line 136 in file "newfile.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  data            1    wreg     unsigned char 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  data            1   20[BANK0 ] unsigned char 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMMON   BANK0
  1025 ;;      Params:         0       0
  1026 ;;      Locals:         0       1
  1027 ;;      Temps:          0       2
  1028 ;;      Totals:         0       3
  1029 ;;Total ram usage:        3 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; Hardware stack levels required when called:    5
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		_out_inst_LCD
  1036 ;;		_out_str_LCD
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           
  1041                           ;psect for function _out_LCD
  1042  00E2                     _out_LCD:	
  1043                           
  1044                           ;incstack = 0
  1045                           ; Regs used in _out_LCD: [wreg+status,2+status,0]
  1046                           ;out_LCD@data stored from wreg
  1047  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1048  00E3  00A0               	movwf	out_LCD@data
  1049  00E4                     l875:	
  1050                           
  1051                           ;newfile.c: 136: void out_LCD(unsigned char data);newfile.c: 137: {;newfile.c: 139:     
      +                          PORTBbits.RB4 = (data & 0x01);
  1052  00E4  0820               	movf	out_LCD@data,w
  1053  00E5  3901               	andlw	1
  1054  00E6  009E               	movwf	??_out_LCD
  1055  00E7  0E9E               	swapf	??_out_LCD,f
  1056  00E8  0806               	movf	6,w	;volatile
  1057  00E9  061E               	xorwf	??_out_LCD,w
  1058  00EA  39EF               	andlw	-17
  1059  00EB  061E               	xorwf	??_out_LCD,w
  1060  00EC  0086               	movwf	6	;volatile
  1061                           
  1062                           ;newfile.c: 140:     PORTBbits.RB5 = (data & 0x02) >> 1;
  1063  00ED  0820               	movf	out_LCD@data,w
  1064  00EE  009E               	movwf	??_out_LCD
  1065  00EF  1003               	clrc
  1066  00F0  0C1E               	rrf	??_out_LCD,w
  1067  00F1  3901               	andlw	1
  1068  00F2  009F               	movwf	??_out_LCD+1
  1069  00F3  0E9F               	swapf	??_out_LCD+1,f
  1070  00F4  0D9F               	rlf	??_out_LCD+1,f
  1071  00F5  0806               	movf	6,w	;volatile
  1072  00F6  061F               	xorwf	??_out_LCD+1,w
  1073  00F7  39DF               	andlw	-33
  1074  00F8  061F               	xorwf	??_out_LCD+1,w
  1075  00F9  0086               	movwf	6	;volatile
  1076                           
  1077                           ;newfile.c: 141:     PORTBbits.RB6 = (data & 0x04) >> 2;
  1078  00FA  0820               	movf	out_LCD@data,w
  1079  00FB  009E               	movwf	??_out_LCD
  1080  00FC  3002               	movlw	2
  1081  00FD                     u305:	
  1082  00FD  1003               	clrc
  1083  00FE  0C9E               	rrf	??_out_LCD,f
  1084  00FF  3EFF               	addlw	-1
  1085  0100  1D03               	skipz
  1086  0101  28FD               	goto	u305
  1087  0102  081E               	movf	??_out_LCD,w
  1088  0103  3901               	andlw	1
  1089  0104  009F               	movwf	??_out_LCD+1
  1090  0105  0E9F               	swapf	??_out_LCD+1,f
  1091  0106  0D9F               	rlf	??_out_LCD+1,f
  1092  0107  0D9F               	rlf	??_out_LCD+1,f
  1093  0108  0806               	movf	6,w	;volatile
  1094  0109  061F               	xorwf	??_out_LCD+1,w
  1095  010A  39BF               	andlw	-65
  1096  010B  061F               	xorwf	??_out_LCD+1,w
  1097  010C  0086               	movwf	6	;volatile
  1098                           
  1099                           ;newfile.c: 142:     PORTBbits.RB7 = (data & 0x08) >> 3;
  1100  010D  0820               	movf	out_LCD@data,w
  1101  010E  009E               	movwf	??_out_LCD
  1102  010F  3003               	movlw	3
  1103  0110                     u315:	
  1104  0110  1003               	clrc
  1105  0111  0C9E               	rrf	??_out_LCD,f
  1106  0112  3EFF               	addlw	-1
  1107  0113  1D03               	skipz
  1108  0114  2910               	goto	u315
  1109  0115  081E               	movf	??_out_LCD,w
  1110  0116  3901               	andlw	1
  1111  0117  009F               	movwf	??_out_LCD+1
  1112  0118  0C9F               	rrf	??_out_LCD+1,f
  1113  0119  0C9F               	rrf	??_out_LCD+1,f
  1114  011A  0806               	movf	6,w	;volatile
  1115  011B  061F               	xorwf	??_out_LCD+1,w
  1116  011C  397F               	andlw	-129
  1117  011D  061F               	xorwf	??_out_LCD+1,w
  1118  011E  0086               	movwf	6	;volatile
  1119  011F                     l73:	
  1120  011F  0008               	return
  1121  0120                     __end_of_out_LCD:	
  1122                           
  1123                           	psect	text8
  1124  0199                     __ptext8:	
  1125 ;; *************** function _ISR *****************
  1126 ;; Defined at:
  1127 ;;		line 64 in file "newfile.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2, status,0, pclath, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0
  1141 ;;      Params:         0       0
  1142 ;;      Locals:         0       0
  1143 ;;      Temps:          0       3
  1144 ;;      Totals:         0       3
  1145 ;;Total ram usage:        3 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    4
  1148 ;; This function calls:
  1149 ;;		_displayTime
  1150 ;; This function is called by:
  1151 ;;		Interrupt level 1
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           
  1156                           ;psect for function _ISR
  1157  0199                     _ISR:	
  1158  0199                     i1l1033:	
  1159                           
  1160                           ;newfile.c: 65:     if (INTCON & 0b00000100) {
  1161  0199  1D0B               	btfss	11,2	;volatile
  1162  019A  299C               	goto	u52_21
  1163  019B  299D               	goto	u52_20
  1164  019C                     u52_21:	
  1165  019C  29BA               	goto	i1l56
  1166  019D                     u52_20:	
  1167  019D                     i1l1035:	
  1168                           
  1169                           ;newfile.c: 66:         INTCON &= ~0b00000100;
  1170  019D  30FB               	movlw	251
  1171  019E  009B               	movwf	??_ISR
  1172  019F  081B               	movf	??_ISR,w
  1173  01A0  058B               	andwf	11,f	;volatile
  1174  01A1                     i1l1037:	
  1175                           
  1176                           ;newfile.c: 67:         TMR0 = 12;
  1177  01A1  300C               	movlw	12
  1178  01A2  0081               	movwf	1	;volatile
  1179  01A3                     i1l1039:	
  1180                           
  1181                           ;newfile.c: 68:         if (timerRunning) {
  1182  01A3  082E               	movf	_timerRunning,w	;volatile
  1183  01A4  1903               	btfsc	3,2
  1184  01A5  29A7               	goto	u53_21
  1185  01A6  29A8               	goto	u53_20
  1186  01A7                     u53_21:	
  1187  01A7  29BA               	goto	i1l56
  1188  01A8                     u53_20:	
  1189  01A8                     i1l1041:	
  1190                           
  1191                           ;newfile.c: 69:             overflowCount++;
  1192  01A8  3001               	movlw	1
  1193  01A9  009B               	movwf	??_ISR
  1194  01AA  081B               	movf	??_ISR,w
  1195  01AB  07AD               	addwf	_overflowCount,f	;volatile
  1196  01AC                     i1l1043:	
  1197                           
  1198                           ;newfile.c: 70:             if (overflowCount >= 4) {
  1199  01AC  3004               	movlw	4
  1200  01AD  022D               	subwf	_overflowCount,w	;volatile
  1201  01AE  1C03               	skipc
  1202  01AF  29B1               	goto	u54_21
  1203  01B0  29B2               	goto	u54_20
  1204  01B1                     u54_21:	
  1205  01B1  29BA               	goto	i1l56
  1206  01B2                     u54_20:	
  1207  01B2                     i1l1045:	
  1208                           
  1209                           ;newfile.c: 71:                 overflowCount = 0;
  1210  01B2  01AD               	clrf	_overflowCount	;volatile
  1211  01B3                     i1l1047:	
  1212                           
  1213                           ;newfile.c: 72:                 tenthSeconds++;
  1214  01B3  3001               	movlw	1
  1215  01B4  07AB               	addwf	_tenthSeconds,f	;volatile
  1216  01B5  1803               	skipnc
  1217  01B6  0AAC               	incf	_tenthSeconds+1,f	;volatile
  1218  01B7  3000               	movlw	0
  1219  01B8  07AC               	addwf	_tenthSeconds+1,f	;volatile
  1220  01B9                     i1l1049:	
  1221                           
  1222                           ;newfile.c: 73:                 displayTime();
  1223  01B9  20A2               	fcall	_displayTime
  1224  01BA                     i1l56:	
  1225  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1226  01BB  081D               	movf	??_ISR+2,w
  1227  01BC  008A               	movwf	10
  1228  01BD  0E1C               	swapf	(??_ISR+1)^0,w
  1229  01BE  0083               	movwf	3
  1230  01BF  0ECE               	swapf	btemp,f
  1231  01C0  0E4E               	swapf	btemp,w
  1232  01C1  0009               	retfie
  1233  01C2                     __end_of_ISR:	
  1234                           
  1235                           	psect	intentry
  1236  0004                     __pintentry:	
  1237                           ;incstack = 0
  1238                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1239                           
  1240  0004                     interrupt_function:	
  1241  004E                     saved_w	set	btemp
  1242  0004  00CE               	movwf	btemp
  1243  0005  0E03               	swapf	3,w
  1244  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0007  009C               	movwf	??_ISR+1
  1246  0008  080A               	movf	10,w
  1247  0009  009D               	movwf	??_ISR+2
  1248  000A  2999               	ljmp	_ISR
  1249                           
  1250                           	psect	text9
  1251  00A2                     __ptext9:	
  1252 ;; *************** function _displayTime *****************
  1253 ;; Defined at:
  1254 ;;		line 49 in file "newfile.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2, status,0, pclath, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0
  1268 ;;      Params:         0       0
  1269 ;;      Locals:         0       0
  1270 ;;      Temps:          0       1
  1271 ;;      Totals:         0       1
  1272 ;;Total ram usage:        1 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    3
  1275 ;; This function calls:
  1276 ;;		___lwdiv
  1277 ;;		___lwmod
  1278 ;;		i1_LCD_goto
  1279 ;;		i1_LCD_wr_char
  1280 ;; This function is called by:
  1281 ;;		_ISR
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           
  1286                           ;psect for function _displayTime
  1287  00A2                     _displayTime:	
  1288  00A2                     i1l1001:	
  1289                           ;incstack = 0
  1290                           ; Regs used in _displayTime: [wreg+status,2+status,0+pclath+cstack]
  1291                           
  1292                           
  1293                           ;newfile.c: 50:     LCD_goto(1, 7);
  1294  00A2  3007               	movlw	7
  1295  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1296  00A4  009A               	movwf	??_displayTime
  1297  00A5  081A               	movf	??_displayTime,w
  1298  00A6  0092               	movwf	i1LCD_goto@y
  1299  00A7  3001               	movlw	1
  1300  00A8  21E5               	fcall	i1_LCD_goto
  1301                           
  1302                           ;newfile.c: 53:     LCD_wr_char('0' + (tenthSeconds / 100));
  1303  00A9  3064               	movlw	100
  1304  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1305  00AB  008C               	movwf	___lwdiv@divisor
  1306  00AC  3000               	movlw	0
  1307  00AD  008D               	movwf	___lwdiv@divisor+1
  1308  00AE  082C               	movf	_tenthSeconds+1,w	;volatile
  1309  00AF  008F               	movwf	___lwdiv@dividend+1
  1310  00B0  082B               	movf	_tenthSeconds,w	;volatile
  1311  00B1  008E               	movwf	___lwdiv@dividend
  1312  00B2  205D               	fcall	___lwdiv
  1313  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1314  00B4  080C               	movf	?___lwdiv,w
  1315  00B5  3E30               	addlw	48
  1316  00B6  2226               	fcall	i1_LCD_wr_char
  1317                           
  1318                           ;newfile.c: 55:     LCD_wr_char('0' + ((tenthSeconds / 10) % 10));
  1319  00B7  300A               	movlw	10
  1320  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1321  00B9  0094               	movwf	___lwmod@divisor
  1322  00BA  3000               	movlw	0
  1323  00BB  0095               	movwf	___lwmod@divisor+1
  1324  00BC  300A               	movlw	10
  1325  00BD  008C               	movwf	___lwdiv@divisor
  1326  00BE  3000               	movlw	0
  1327  00BF  008D               	movwf	___lwdiv@divisor+1
  1328  00C0  082C               	movf	_tenthSeconds+1,w	;volatile
  1329  00C1  008F               	movwf	___lwdiv@dividend+1
  1330  00C2  082B               	movf	_tenthSeconds,w	;volatile
  1331  00C3  008E               	movwf	___lwdiv@dividend
  1332  00C4  205D               	fcall	___lwdiv
  1333  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1334  00C6  080D               	movf	?___lwdiv+1,w
  1335  00C7  0097               	movwf	___lwmod@dividend+1
  1336  00C8  080C               	movf	?___lwdiv,w
  1337  00C9  0096               	movwf	___lwmod@dividend
  1338  00CA  215E               	fcall	___lwmod
  1339  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1340  00CC  0814               	movf	?___lwmod,w
  1341  00CD  3E30               	addlw	48
  1342  00CE  2226               	fcall	i1_LCD_wr_char
  1343                           
  1344                           ;newfile.c: 57:     LCD_wr_char('.');
  1345  00CF  302E               	movlw	46
  1346  00D0  2226               	fcall	i1_LCD_wr_char
  1347                           
  1348                           ;newfile.c: 59:     LCD_wr_char('0' + (tenthSeconds % 10));
  1349  00D1  300A               	movlw	10
  1350  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1351  00D3  0094               	movwf	___lwmod@divisor
  1352  00D4  3000               	movlw	0
  1353  00D5  0095               	movwf	___lwmod@divisor+1
  1354  00D6  082C               	movf	_tenthSeconds+1,w	;volatile
  1355  00D7  0097               	movwf	___lwmod@dividend+1
  1356  00D8  082B               	movf	_tenthSeconds,w	;volatile
  1357  00D9  0096               	movwf	___lwmod@dividend
  1358  00DA  215E               	fcall	___lwmod
  1359  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1360  00DC  0814               	movf	?___lwmod,w
  1361  00DD  3E30               	addlw	48
  1362  00DE  2226               	fcall	i1_LCD_wr_char
  1363                           
  1364                           ;newfile.c: 61:     LCD_wr_char('s');
  1365  00DF  3073               	movlw	115
  1366  00E0  2226               	fcall	i1_LCD_wr_char
  1367  00E1                     i1l48:	
  1368  00E1  0008               	return
  1369  00E2                     __end_of_displayTime:	
  1370                           
  1371                           	psect	text10
  1372  0226                     __ptext10:	
  1373 ;; *************** function i1_LCD_wr_char *****************
  1374 ;; Defined at:
  1375 ;;		line 105 in file "newfile.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  c               1    wreg     unsigned char 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  c               1    8[BANK0 ] unsigned char 
  1380 ;;  LCD_wr_char     1    9[BANK0 ] unsigned char 
  1381 ;;  LCD_wr_char     1    7[BANK0 ] unsigned char 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0, pclath, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0
  1391 ;;      Params:         0       0
  1392 ;;      Locals:         0       3
  1393 ;;      Temps:          0       2
  1394 ;;      Totals:         0       5
  1395 ;;Total ram usage:        5 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    2
  1398 ;; This function calls:
  1399 ;;		i1_out_str_LCD
  1400 ;; This function is called by:
  1401 ;;		_displayTime
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           
  1406                           ;psect for function i1_LCD_wr_char
  1407  0226                     i1_LCD_wr_char:	
  1408                           
  1409                           ;incstack = 0
  1410                           ; Regs used in i1_LCD_wr_char: [wreg+status,2+status,0+pclath+cstack]
  1411                           ;i1LCD_wr_char@c stored from wreg
  1412  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0227  0094               	movwf	i1LCD_wr_char@c
  1414  0228                     i1l977:	
  1415                           
  1416                           ;newfile.c: 105: void LCD_wr_char(char c);newfile.c: 106: {;newfile.c: 107:     char str
      +                          _H, str_L;;newfile.c: 109:     str_H = c & 0xf0;
  1417  0228  0814               	movf	i1LCD_wr_char@c,w
  1418  0229  39F0               	andlw	240
  1419  022A  0091               	movwf	??i1_LCD_wr_char
  1420  022B  0811               	movf	??i1_LCD_wr_char,w
  1421  022C  0095               	movwf	i1LCD_wr_char@str_H
  1422  022D                     i1l979:	
  1423                           
  1424                           ;newfile.c: 110:     str_H = str_H >> 4;
  1425  022D  0815               	movf	i1LCD_wr_char@str_H,w
  1426  022E  0091               	movwf	??i1_LCD_wr_char
  1427  022F  3004               	movlw	4
  1428  0230                     u47_25:	
  1429  0230  1003               	clrc
  1430  0231  0C91               	rrf	??i1_LCD_wr_char,f
  1431  0232  3EFF               	addlw	-1
  1432  0233  1D03               	skipz
  1433  0234  2A30               	goto	u47_25
  1434  0235  0811               	movf	??i1_LCD_wr_char,w
  1435  0236  0092               	movwf	??i1_LCD_wr_char+1
  1436  0237  0812               	movf	??i1_LCD_wr_char+1,w
  1437  0238  0095               	movwf	i1LCD_wr_char@str_H
  1438  0239                     i1l981:	
  1439                           
  1440                           ;newfile.c: 111:     str_L = c & 0x0f;
  1441  0239  0814               	movf	i1LCD_wr_char@c,w
  1442  023A  390F               	andlw	15
  1443  023B  0091               	movwf	??i1_LCD_wr_char
  1444  023C  0811               	movf	??i1_LCD_wr_char,w
  1445  023D  0093               	movwf	i1LCD_wr_char@str_L
  1446  023E                     i1l983:	
  1447                           
  1448                           ;newfile.c: 113:     out_str_LCD(str_H);
  1449  023E  0815               	movf	i1LCD_wr_char@str_H,w
  1450  023F  229E               	fcall	i1_out_str_LCD
  1451  0240                     i1l985:	
  1452                           
  1453                           ;newfile.c: 114:     out_str_LCD(str_L);
  1454  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1455  0241  0813               	movf	i1LCD_wr_char@str_L,w
  1456  0242  229E               	fcall	i1_out_str_LCD
  1457  0243                     i1l64:	
  1458  0243  0008               	return
  1459  0244                     __end_ofi1_LCD_wr_char:	
  1460                           
  1461                           	psect	text11
  1462  029E                     __ptext11:	
  1463 ;; *************** function i1_out_str_LCD *****************
  1464 ;; Defined at:
  1465 ;;		line 127 in file "newfile.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  out_data        1    wreg     unsigned char 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  out_data        1    4[BANK0 ] unsigned char 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0, pclath, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0
  1479 ;;      Params:         0       0
  1480 ;;      Locals:         0       1
  1481 ;;      Temps:          0       1
  1482 ;;      Totals:         0       2
  1483 ;;Total ram usage:        2 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    1
  1486 ;; This function calls:
  1487 ;;		i1_out_LCD
  1488 ;; This function is called by:
  1489 ;;		i1_LCD_wr_char
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           
  1494                           ;psect for function i1_out_str_LCD
  1495  029E                     i1_out_str_LCD:	
  1496                           
  1497                           ;incstack = 0
  1498                           ; Regs used in i1_out_str_LCD: [wreg+status,2+status,0+pclath+cstack]
  1499                           ;i1out_str_LCD@out_data stored from wreg
  1500  029E  1283               	bcf	3,5	;RP0=0, select bank0
  1501  029F  0090               	movwf	i1out_str_LCD@out_data
  1502  02A0                     i1l887:	
  1503                           
  1504                           ;newfile.c: 127: void out_str_LCD(unsigned char out_data);newfile.c: 128: {;newfile.c: 1
      +                          29:     out_LCD(out_data);
  1505  02A0  0810               	movf	i1out_str_LCD@out_data,w
  1506  02A1  2120               	fcall	i1_out_LCD
  1507  02A2                     i1l889:	
  1508                           
  1509                           ;newfile.c: 130:     PORTBbits.RB0 = 1; PORTBbits.RB1 = 1;
  1510  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1511  02A3  1406               	bsf	6,0	;volatile
  1512  02A4                     i1l891:	
  1513  02A4  1486               	bsf	6,1	;volatile
  1514  02A5                     i1l893:	
  1515                           
  1516                           ;newfile.c: 131:     PORTBbits.RB1 = 0;
  1517  02A5  1086               	bcf	6,1	;volatile
  1518  02A6                     i1l895:	
  1519                           
  1520                           ;newfile.c: 132:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  1521  02A6  3053               	movlw	83
  1522  02A7  008F               	movwf	??i1_out_str_LCD
  1523  02A8                     u60_27:	
  1524  02A8  0B8F               	decfsz	??i1_out_str_LCD,f
  1525  02A9  2AA8               	goto	u60_27
  1526  02AA                     i1l70:	
  1527  02AA  0008               	return
  1528  02AB                     __end_ofi1_out_str_LCD:	
  1529                           
  1530                           	psect	text12
  1531  01E5                     __ptext12:	
  1532 ;; *************** function i1_LCD_goto *****************
  1533 ;; Defined at:
  1534 ;;		line 43 in file "newfile.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  x               1    wreg     unsigned char 
  1537 ;;  y               1    6[BANK0 ] unsigned char 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  x               1    8[BANK0 ] unsigned char 
  1540 ;;  LCD_goto        1   11[BANK0 ] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, pclath, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0
  1550 ;;      Params:         0       1
  1551 ;;      Locals:         0       4
  1552 ;;      Temps:          0       1
  1553 ;;      Totals:         0       6
  1554 ;;Total ram usage:        6 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    2
  1557 ;; This function calls:
  1558 ;;		i1_out_inst_LCD
  1559 ;; This function is called by:
  1560 ;;		_displayTime
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function i1_LCD_goto
  1566  01E5                     i1_LCD_goto:	
  1567                           
  1568                           ;incstack = 0
  1569                           ; Regs used in i1_LCD_goto: [wreg+status,2+status,0+pclath+cstack]
  1570                           ;i1LCD_goto@x stored from wreg
  1571  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1572  01E6  0094               	movwf	i1LCD_goto@x
  1573  01E7                     i1l965:	
  1574                           
  1575                           ;newfile.c: 44:     unsigned char pos = 0x80 | (x ? 0x40 : 0x00) | y;
  1576  01E7  0814               	movf	i1LCD_goto@x,w
  1577  01E8  1D03               	btfss	3,2
  1578  01E9  29EB               	goto	u45_21
  1579  01EA  29EC               	goto	u45_20
  1580  01EB                     u45_21:	
  1581  01EB  29EF               	goto	i1l969
  1582  01EC                     u45_20:	
  1583  01EC                     i1l967:	
  1584  01EC  0195               	clrf	i1_LCD_goto$85
  1585  01ED  0196               	clrf	i1_LCD_goto$85+1
  1586  01EE  29F3               	goto	i1l971
  1587  01EF                     i1l969:	
  1588  01EF  3040               	movlw	64
  1589  01F0  0095               	movwf	i1_LCD_goto$85
  1590  01F1  3000               	movlw	0
  1591  01F2  0096               	movwf	i1_LCD_goto$85+1
  1592  01F3                     i1l971:	
  1593  01F3  0815               	movf	i1_LCD_goto$85,w
  1594  01F4  0412               	iorwf	i1LCD_goto@y,w
  1595  01F5  3880               	iorlw	128
  1596  01F6  0093               	movwf	??i1_LCD_goto
  1597  01F7  0813               	movf	??i1_LCD_goto,w
  1598  01F8  0097               	movwf	i1LCD_goto@pos
  1599  01F9                     i1l973:	
  1600                           
  1601                           ;newfile.c: 45:     out_inst_LCD(pos >> 4);
  1602  01F9  0817               	movf	i1LCD_goto@pos,w
  1603  01FA  0093               	movwf	??i1_LCD_goto
  1604  01FB  3004               	movlw	4
  1605  01FC                     u46_25:	
  1606  01FC  1003               	clrc
  1607  01FD  0C93               	rrf	??i1_LCD_goto,f
  1608  01FE  3EFF               	addlw	-1
  1609  01FF  1D03               	skipz
  1610  0200  29FC               	goto	u46_25
  1611  0201  0813               	movf	??i1_LCD_goto,w
  1612  0202  2271               	fcall	i1_out_inst_LCD
  1613  0203                     i1l975:	
  1614                           
  1615                           ;newfile.c: 46:     out_inst_LCD(pos & 0x0F);
  1616  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1617  0204  0817               	movf	i1LCD_goto@pos,w
  1618  0205  390F               	andlw	15
  1619  0206  2271               	fcall	i1_out_inst_LCD
  1620  0207                     i1l45:	
  1621  0207  0008               	return
  1622  0208                     __end_ofi1_LCD_goto:	
  1623                           
  1624                           	psect	text13
  1625  0271                     __ptext13:	
  1626 ;; *************** function i1_out_inst_LCD *****************
  1627 ;; Defined at:
  1628 ;;		line 118 in file "newfile.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  out_data        1    wreg     unsigned char 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  out_data        1    5[BANK0 ] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0, pclath, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0
  1642 ;;      Params:         0       0
  1643 ;;      Locals:         0       1
  1644 ;;      Temps:          0       2
  1645 ;;      Totals:         0       3
  1646 ;;Total ram usage:        3 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    1
  1649 ;; This function calls:
  1650 ;;		i1_out_LCD
  1651 ;; This function is called by:
  1652 ;;		i1_LCD_goto
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           
  1657                           ;psect for function i1_out_inst_LCD
  1658  0271                     i1_out_inst_LCD:	
  1659                           
  1660                           ;incstack = 0
  1661                           ; Regs used in i1_out_inst_LCD: [wreg+status,2+status,0+pclath+cstack]
  1662                           ;i1out_inst_LCD@out_data stored from wreg
  1663  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0272  0091               	movwf	i1out_inst_LCD@out_data
  1665  0273                     i1l877:	
  1666                           
  1667                           ;newfile.c: 118: void out_inst_LCD(unsigned char out_data);newfile.c: 119: {;newfile.c: 
      +                          120:     out_LCD(out_data);
  1668  0273  0811               	movf	i1out_inst_LCD@out_data,w
  1669  0274  2120               	fcall	i1_out_LCD
  1670  0275                     i1l879:	
  1671                           
  1672                           ;newfile.c: 121:     PORTBbits.RB0 = 0; PORTBbits.RB1 = 1;
  1673  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1674  0276  1006               	bcf	6,0	;volatile
  1675  0277                     i1l881:	
  1676  0277  1486               	bsf	6,1	;volatile
  1677  0278                     i1l883:	
  1678                           
  1679                           ;newfile.c: 122:     PORTBbits.RB1 = 0;
  1680  0278  1086               	bcf	6,1	;volatile
  1681  0279                     i1l885:	
  1682                           
  1683                           ;newfile.c: 123:     _delay((unsigned long)((5)*(10000000/4000.0)));
  1684  0279  3011               	movlw	17
  1685  027A  0090               	movwf	??i1_out_inst_LCD+1
  1686  027B  303A               	movlw	58
  1687  027C  008F               	movwf	??i1_out_inst_LCD
  1688  027D                     u61_27:	
  1689  027D  0B8F               	decfsz	??i1_out_inst_LCD,f
  1690  027E  2A7D               	goto	u61_27
  1691  027F  0B90               	decfsz	??i1_out_inst_LCD+1,f
  1692  0280  2A7D               	goto	u61_27
  1693  0281  0000               	nop
  1694  0282                     i1l67:	
  1695  0282  0008               	return
  1696  0283                     __end_ofi1_out_inst_LCD:	
  1697                           
  1698                           	psect	text14
  1699  0120                     __ptext14:	
  1700 ;; *************** function i1_out_LCD *****************
  1701 ;; Defined at:
  1702 ;;		line 136 in file "newfile.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  data            1    wreg     unsigned char 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  data            1    2[BANK0 ] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0
  1716 ;;      Params:         0       0
  1717 ;;      Locals:         0       1
  1718 ;;      Temps:          0       2
  1719 ;;      Totals:         0       3
  1720 ;;Total ram usage:        3 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		i1_out_inst_LCD
  1726 ;;		i1_out_str_LCD
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           
  1731                           ;psect for function i1_out_LCD
  1732  0120                     i1_out_LCD:	
  1733                           
  1734                           ;incstack = 0
  1735                           ; Regs used in i1_out_LCD: [wreg+status,2+status,0]
  1736                           ;i1out_LCD@data stored from wreg
  1737  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0121  008E               	movwf	i1out_LCD@data
  1739  0122                     i1l873:	
  1740                           
  1741                           ;newfile.c: 136: void out_LCD(unsigned char data);newfile.c: 137: {;newfile.c: 139:     
      +                          PORTBbits.RB4 = (data & 0x01);
  1742  0122  080E               	movf	i1out_LCD@data,w
  1743  0123  3901               	andlw	1
  1744  0124  008C               	movwf	??i1_out_LCD
  1745  0125  0E8C               	swapf	??i1_out_LCD,f
  1746  0126  0806               	movf	6,w	;volatile
  1747  0127  060C               	xorwf	??i1_out_LCD,w
  1748  0128  39EF               	andlw	-17
  1749  0129  060C               	xorwf	??i1_out_LCD,w
  1750  012A  0086               	movwf	6	;volatile
  1751                           
  1752                           ;newfile.c: 140:     PORTBbits.RB5 = (data & 0x02) >> 1;
  1753  012B  080E               	movf	i1out_LCD@data,w
  1754  012C  008C               	movwf	??i1_out_LCD
  1755  012D  1003               	clrc
  1756  012E  0C0C               	rrf	??i1_out_LCD,w
  1757  012F  3901               	andlw	1
  1758  0130  008D               	movwf	??i1_out_LCD+1
  1759  0131  0E8D               	swapf	??i1_out_LCD+1,f
  1760  0132  0D8D               	rlf	??i1_out_LCD+1,f
  1761  0133  0806               	movf	6,w	;volatile
  1762  0134  060D               	xorwf	??i1_out_LCD+1,w
  1763  0135  39DF               	andlw	-33
  1764  0136  060D               	xorwf	??i1_out_LCD+1,w
  1765  0137  0086               	movwf	6	;volatile
  1766                           
  1767                           ;newfile.c: 141:     PORTBbits.RB6 = (data & 0x04) >> 2;
  1768  0138  080E               	movf	i1out_LCD@data,w
  1769  0139  008C               	movwf	??i1_out_LCD
  1770  013A  3002               	movlw	2
  1771  013B                     u28_25:	
  1772  013B  1003               	clrc
  1773  013C  0C8C               	rrf	??i1_out_LCD,f
  1774  013D  3EFF               	addlw	-1
  1775  013E  1D03               	skipz
  1776  013F  293B               	goto	u28_25
  1777  0140  080C               	movf	??i1_out_LCD,w
  1778  0141  3901               	andlw	1
  1779  0142  008D               	movwf	??i1_out_LCD+1
  1780  0143  0E8D               	swapf	??i1_out_LCD+1,f
  1781  0144  0D8D               	rlf	??i1_out_LCD+1,f
  1782  0145  0D8D               	rlf	??i1_out_LCD+1,f
  1783  0146  0806               	movf	6,w	;volatile
  1784  0147  060D               	xorwf	??i1_out_LCD+1,w
  1785  0148  39BF               	andlw	-65
  1786  0149  060D               	xorwf	??i1_out_LCD+1,w
  1787  014A  0086               	movwf	6	;volatile
  1788                           
  1789                           ;newfile.c: 142:     PORTBbits.RB7 = (data & 0x08) >> 3;
  1790  014B  080E               	movf	i1out_LCD@data,w
  1791  014C  008C               	movwf	??i1_out_LCD
  1792  014D  3003               	movlw	3
  1793  014E                     u29_25:	
  1794  014E  1003               	clrc
  1795  014F  0C8C               	rrf	??i1_out_LCD,f
  1796  0150  3EFF               	addlw	-1
  1797  0151  1D03               	skipz
  1798  0152  294E               	goto	u29_25
  1799  0153  080C               	movf	??i1_out_LCD,w
  1800  0154  3901               	andlw	1
  1801  0155  008D               	movwf	??i1_out_LCD+1
  1802  0156  0C8D               	rrf	??i1_out_LCD+1,f
  1803  0157  0C8D               	rrf	??i1_out_LCD+1,f
  1804  0158  0806               	movf	6,w	;volatile
  1805  0159  060D               	xorwf	??i1_out_LCD+1,w
  1806  015A  397F               	andlw	-129
  1807  015B  060D               	xorwf	??i1_out_LCD+1,w
  1808  015C  0086               	movwf	6	;volatile
  1809  015D                     i1l73:	
  1810  015D  0008               	return
  1811  015E                     __end_ofi1_out_LCD:	
  1812                           
  1813                           	psect	text15
  1814  015E                     __ptext15:	
  1815 ;; *************** function ___lwmod *****************
  1816 ;; Defined at:
  1817 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  divisor         2    8[BANK0 ] unsigned int 
  1820 ;;  dividend        2   10[BANK0 ] unsigned int 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  counter         1   13[BANK0 ] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  2    8[BANK0 ] unsigned int 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMMON   BANK0
  1832 ;;      Params:         0       4
  1833 ;;      Locals:         0       1
  1834 ;;      Temps:          0       1
  1835 ;;      Totals:         0       6
  1836 ;;Total ram usage:        6 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_displayTime
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           
  1846                           ;psect for function ___lwmod
  1847  015E                     ___lwmod:	
  1848  015E                     i1l943:	
  1849                           ;incstack = 0
  1850                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1851                           
  1852  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1853  015F  0814               	movf	___lwmod@divisor,w
  1854  0160  0415               	iorwf	___lwmod@divisor+1,w
  1855  0161  1903               	btfsc	3,2
  1856  0162  2964               	goto	u39_21
  1857  0163  2965               	goto	u39_20
  1858  0164                     u39_21:	
  1859  0164  2994               	goto	i1l961
  1860  0165                     u39_20:	
  1861  0165                     i1l945:	
  1862  0165  0199               	clrf	___lwmod@counter
  1863  0166  0A99               	incf	___lwmod@counter,f
  1864  0167  2973               	goto	i1l951
  1865  0168                     i1l947:	
  1866  0168  3001               	movlw	1
  1867  0169                     u40_25:	
  1868  0169  1003               	clrc
  1869  016A  0D94               	rlf	___lwmod@divisor,f
  1870  016B  0D95               	rlf	___lwmod@divisor+1,f
  1871  016C  3EFF               	addlw	-1
  1872  016D  1D03               	skipz
  1873  016E  2969               	goto	u40_25
  1874  016F                     i1l949:	
  1875  016F  3001               	movlw	1
  1876  0170  0098               	movwf	??___lwmod
  1877  0171  0818               	movf	??___lwmod,w
  1878  0172  0799               	addwf	___lwmod@counter,f
  1879  0173                     i1l951:	
  1880  0173  1F95               	btfss	___lwmod@divisor+1,7
  1881  0174  2976               	goto	u41_21
  1882  0175  2977               	goto	u41_20
  1883  0176                     u41_21:	
  1884  0176  2968               	goto	i1l947
  1885  0177                     u41_20:	
  1886  0177                     i1l953:	
  1887  0177  0815               	movf	___lwmod@divisor+1,w
  1888  0178  0217               	subwf	___lwmod@dividend+1,w
  1889  0179  1D03               	skipz
  1890  017A  297D               	goto	u42_25
  1891  017B  0814               	movf	___lwmod@divisor,w
  1892  017C  0216               	subwf	___lwmod@dividend,w
  1893  017D                     u42_25:	
  1894  017D  1C03               	skipc
  1895  017E  2980               	goto	u42_21
  1896  017F  2981               	goto	u42_20
  1897  0180                     u42_21:	
  1898  0180  2987               	goto	i1l957
  1899  0181                     u42_20:	
  1900  0181                     i1l955:	
  1901  0181  0814               	movf	___lwmod@divisor,w
  1902  0182  0296               	subwf	___lwmod@dividend,f
  1903  0183  0815               	movf	___lwmod@divisor+1,w
  1904  0184  1C03               	skipc
  1905  0185  0397               	decf	___lwmod@dividend+1,f
  1906  0186  0297               	subwf	___lwmod@dividend+1,f
  1907  0187                     i1l957:	
  1908  0187  3001               	movlw	1
  1909  0188                     u43_25:	
  1910  0188  1003               	clrc
  1911  0189  0C95               	rrf	___lwmod@divisor+1,f
  1912  018A  0C94               	rrf	___lwmod@divisor,f
  1913  018B  3EFF               	addlw	-1
  1914  018C  1D03               	skipz
  1915  018D  2988               	goto	u43_25
  1916  018E                     i1l959:	
  1917  018E  3001               	movlw	1
  1918  018F  0299               	subwf	___lwmod@counter,f
  1919  0190  1D03               	btfss	3,2
  1920  0191  2993               	goto	u44_21
  1921  0192  2994               	goto	u44_20
  1922  0193                     u44_21:	
  1923  0193  2977               	goto	i1l953
  1924  0194                     u44_20:	
  1925  0194                     i1l961:	
  1926  0194  0817               	movf	___lwmod@dividend+1,w
  1927  0195  0095               	movwf	?___lwmod+1
  1928  0196  0816               	movf	___lwmod@dividend,w
  1929  0197  0094               	movwf	?___lwmod
  1930  0198                     i1l449:	
  1931  0198  0008               	return
  1932  0199                     __end_of___lwmod:	
  1933                           
  1934                           	psect	text16
  1935  005D                     __ptext16:	
  1936 ;; *************** function ___lwdiv *****************
  1937 ;; Defined at:
  1938 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  divisor         2    0[BANK0 ] unsigned int 
  1941 ;;  dividend        2    2[BANK0 ] unsigned int 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  quotient        2    5[BANK0 ] unsigned int 
  1944 ;;  counter         1    7[BANK0 ] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  2    0[BANK0 ] unsigned int 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0
  1954 ;;      Params:         0       4
  1955 ;;      Locals:         0       3
  1956 ;;      Temps:          0       1
  1957 ;;      Totals:         0       8
  1958 ;;Total ram usage:        8 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_displayTime
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           
  1968                           ;psect for function ___lwdiv
  1969  005D                     ___lwdiv:	
  1970  005D                     i1l917:	
  1971                           ;incstack = 0
  1972                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1973                           
  1974  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1975  005E  0191               	clrf	___lwdiv@quotient
  1976  005F  0192               	clrf	___lwdiv@quotient+1
  1977  0060                     i1l919:	
  1978  0060  080C               	movf	___lwdiv@divisor,w
  1979  0061  040D               	iorwf	___lwdiv@divisor+1,w
  1980  0062  1903               	btfsc	3,2
  1981  0063  2865               	goto	u32_21
  1982  0064  2866               	goto	u32_20
  1983  0065                     u32_21:	
  1984  0065  289D               	goto	i1l939
  1985  0066                     u32_20:	
  1986  0066                     i1l921:	
  1987  0066  0193               	clrf	___lwdiv@counter
  1988  0067  0A93               	incf	___lwdiv@counter,f
  1989  0068  2874               	goto	i1l927
  1990  0069                     i1l923:	
  1991  0069  3001               	movlw	1
  1992  006A                     u33_25:	
  1993  006A  1003               	clrc
  1994  006B  0D8C               	rlf	___lwdiv@divisor,f
  1995  006C  0D8D               	rlf	___lwdiv@divisor+1,f
  1996  006D  3EFF               	addlw	-1
  1997  006E  1D03               	skipz
  1998  006F  286A               	goto	u33_25
  1999  0070                     i1l925:	
  2000  0070  3001               	movlw	1
  2001  0071  0090               	movwf	??___lwdiv
  2002  0072  0810               	movf	??___lwdiv,w
  2003  0073  0793               	addwf	___lwdiv@counter,f
  2004  0074                     i1l927:	
  2005  0074  1F8D               	btfss	___lwdiv@divisor+1,7
  2006  0075  2877               	goto	u34_21
  2007  0076  2878               	goto	u34_20
  2008  0077                     u34_21:	
  2009  0077  2869               	goto	i1l923
  2010  0078                     u34_20:	
  2011  0078                     i1l929:	
  2012  0078  3001               	movlw	1
  2013  0079                     u35_25:	
  2014  0079  1003               	clrc
  2015  007A  0D91               	rlf	___lwdiv@quotient,f
  2016  007B  0D92               	rlf	___lwdiv@quotient+1,f
  2017  007C  3EFF               	addlw	-1
  2018  007D  1D03               	skipz
  2019  007E  2879               	goto	u35_25
  2020  007F  080D               	movf	___lwdiv@divisor+1,w
  2021  0080  020F               	subwf	___lwdiv@dividend+1,w
  2022  0081  1D03               	skipz
  2023  0082  2885               	goto	u36_25
  2024  0083  080C               	movf	___lwdiv@divisor,w
  2025  0084  020E               	subwf	___lwdiv@dividend,w
  2026  0085                     u36_25:	
  2027  0085  1C03               	skipc
  2028  0086  2888               	goto	u36_21
  2029  0087  2889               	goto	u36_20
  2030  0088                     u36_21:	
  2031  0088  2890               	goto	i1l935
  2032  0089                     u36_20:	
  2033  0089                     i1l931:	
  2034  0089  080C               	movf	___lwdiv@divisor,w
  2035  008A  028E               	subwf	___lwdiv@dividend,f
  2036  008B  080D               	movf	___lwdiv@divisor+1,w
  2037  008C  1C03               	skipc
  2038  008D  038F               	decf	___lwdiv@dividend+1,f
  2039  008E  028F               	subwf	___lwdiv@dividend+1,f
  2040  008F                     i1l933:	
  2041  008F  1411               	bsf	___lwdiv@quotient,0
  2042  0090                     i1l935:	
  2043  0090  3001               	movlw	1
  2044  0091                     u37_25:	
  2045  0091  1003               	clrc
  2046  0092  0C8D               	rrf	___lwdiv@divisor+1,f
  2047  0093  0C8C               	rrf	___lwdiv@divisor,f
  2048  0094  3EFF               	addlw	-1
  2049  0095  1D03               	skipz
  2050  0096  2891               	goto	u37_25
  2051  0097                     i1l937:	
  2052  0097  3001               	movlw	1
  2053  0098  0293               	subwf	___lwdiv@counter,f
  2054  0099  1D03               	btfss	3,2
  2055  009A  289C               	goto	u38_21
  2056  009B  289D               	goto	u38_20
  2057  009C                     u38_21:	
  2058  009C  2878               	goto	i1l929
  2059  009D                     u38_20:	
  2060  009D                     i1l939:	
  2061  009D  0812               	movf	___lwdiv@quotient+1,w
  2062  009E  008D               	movwf	?___lwdiv+1
  2063  009F  0811               	movf	___lwdiv@quotient,w
  2064  00A0  008C               	movwf	?___lwdiv
  2065  00A1                     i1l439:	
  2066  00A1  0008               	return
  2067  00A2                     __end_of___lwdiv:	
  2068  004E                     btemp	set	78	;btemp
  2069  004E                     wtemp0	set	78


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     31      35

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_goto
    _init_LCD->_out_inst_LCD
    _LCD_wr_char->_out_str_LCD
    _out_str_LCD->_out_LCD
    _LCD_goto->_out_inst_LCD
    _out_inst_LCD->_out_LCD

Critical Paths under _ISR in BANK0

    _ISR->_displayTime
    _displayTime->___lwmod
    i1_LCD_wr_char->i1_out_str_LCD
    i1_out_str_LCD->i1_out_LCD
    i1_LCD_goto->i1_out_inst_LCD
    i1_out_inst_LCD->i1_out_LCD
    ___lwmod->___lwdiv

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     728
                                             30 BANK0      1     1      0
                           _LCD_goto
                        _LCD_wr_char
                           _init_LCD
                         _startTimer
 ---------------------------------------------------------------------------------
 (1) _startTimer                                           1     1      0       0
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             4     4      0     156
                                             24 BANK0      4     4      0
                       _out_inst_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_wr_char                                          5     5      0     223
                                             23 BANK0      5     5      0
                        _out_str_LCD
 ---------------------------------------------------------------------------------
 (2) _out_str_LCD                                          2     2      0     110
                                             21 BANK0      2     2      0
                            _out_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_goto                                             6     5      1     349
                                             24 BANK0      6     5      1
                       _out_inst_LCD
 ---------------------------------------------------------------------------------
 (2) _out_inst_LCD                                         3     3      0     110
                                             21 BANK0      3     3      0
                            _out_LCD
 ---------------------------------------------------------------------------------
 (3) _out_LCD                                              3     3      0      88
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0    1401
                                             15 BANK0      3     3      0
                        _displayTime
 ---------------------------------------------------------------------------------
 (5) _displayTime                                          1     1      0    1401
                                             14 BANK0      1     1      0
                            ___lwdiv
                            ___lwmod
                         i1_LCD_goto
                      i1_LCD_wr_char
 ---------------------------------------------------------------------------------
 (6) i1_LCD_wr_char                                        5     5      0     223
                                              5 BANK0      5     5      0
                      i1_out_str_LCD
 ---------------------------------------------------------------------------------
 (7) i1_out_str_LCD                                        2     2      0     110
                                              3 BANK0      2     2      0
                          i1_out_LCD
 ---------------------------------------------------------------------------------
 (6) i1_LCD_goto                                           6     5      1     249
                                              6 BANK0      6     5      1
                     i1_out_inst_LCD
 ---------------------------------------------------------------------------------
 (7) i1_out_inst_LCD                                       3     3      0     110
                                              3 BANK0      3     3      0
                          i1_out_LCD
 ---------------------------------------------------------------------------------
 (8) i1_out_LCD                                            3     3      0      88
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     463
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_goto
     _out_inst_LCD
       _out_LCD
   _LCD_wr_char
     _out_str_LCD
       _out_LCD
   _init_LCD
     _out_inst_LCD
       _out_LCD
   _startTimer

 _ISR (ROOT)
   _displayTime
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     i1_LCD_goto
       i1_out_inst_LCD
         i1_out_LCD
     i1_LCD_wr_char
       i1_out_str_LCD
         i1_out_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42     1F      23       3       53.0%
ABS                  0      0      23       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0      23       6        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 07 11:17:08 2025

           _out_inst_LCD 025F             ?_displayTime 000C              __CFG_CP$OFF 0000  
                     l35 0290                       l45 01E4                       l61 005C  
                     l70 029D                       l64 0225                       l73 011F  
                     l67 0270                       l78 025D                       l79 025D  
            _out_str_LCD 0291                      l901 0265                      l903 0266  
                    l911 0297                      l905 0267                      l913 0298  
                    l915 0299                      l907 0293                      l909 0295  
                    l875 00E4                      l991 01C9                      l897 0261  
                    l993 01CC                      l899 0263                      l995 01D0  
                    l987 0283                      l997 01D6                      l989 01C4  
                    l999 01E0                      u305 00FD                      u315 0110  
                    u510 0040                      u511 003F                      u505 0212  
                    u515 003C                      _ISR 0199                      u480 01C9  
                    u481 01C8                      u557 0018                      u495 01D9  
                    u567 0027                      u577 0057                      u587 029B  
                    u597 026B             __CFG_FOSC$HS 0000                     ?_ISR 000C  
                   l1011 0222                     l1003 020A                     l1005 020F  
                   l1021 0020                     l1013 0013                     l1007 021B  
                   l1031 0052                     l1023 0022                     l1015 001D  
                   l1009 0220                     l1025 002C                     l1027 0033  
                   l1051 0244                     l1029 0040                     l1061 0256  
                   l1053 024A                     l1063 0258                     l1055 024B  
                   l1065 025A                     l1057 0252                     l1067 025C  
                   l1059 0254                     i1l45 0207                     i1l70 02AA  
                   i1l64 0243                     i1l48 00E1                     i1l56 01BA  
                   i1l73 015D                     i1l67 0282                     _TMR0 0001  
            ?i1_LCD_goto 0012                     _main 0244                     btemp 004E  
                   start 000B             ?_LCD_wr_char 000C                    ??_ISR 001B  
  __end_ofi1_out_str_LCD 02AB           i1_out_inst_LCD 0271         __end_of_LCD_goto 01E5  
                  ?_main 000C            __CFG_WDTE$OFF 0000          __end_of___lwdiv 00A2  
        __end_of___lwmod 0199                    i1l439 00A1                    i1l449 0198  
                  i1l921 0066                    i1l931 0089                    i1l923 0069  
                  i1l933 008F                    i1l925 0070                    i1l917 005D  
                  i1l935 0090                    i1l927 0074                    i1l919 0060  
                  i1l951 0173                    i1l943 015E                    i1l937 0097  
                  i1l929 0078                    i1l953 0177                    i1l945 0165  
                  i1l961 0194                    i1l873 0122                    i1l881 0277  
                  i1l939 009D                    i1l955 0181                    i1l947 0168  
                  i1l883 0278                    i1l971 01F3                    i1l891 02A4  
                  i1l957 0187                    i1l949 016F                    i1l885 0279  
                  i1l877 0273                    i1l973 01F9                    i1l965 01E7  
                  i1l893 02A5                    i1l981 0239                    i1l959 018E  
                  i1l879 0275                    i1l975 0203                    i1l967 01EC  
                  i1l895 02A6                    i1l887 02A0                    i1l983 023E  
                  i1l969 01EF                    i1l889 02A2                    i1l985 0240  
                  i1l977 0228                    i1l979 022D                    u32_20 0066  
                  u32_21 0065                    u40_25 0169                    u41_20 0177  
                  u41_21 0176                    u33_25 006A                    u34_20 0078  
                  u42_20 0181                    u34_21 0077                    u42_21 0180  
                  u42_25 017D                    _PORTA 0005                    _PORTB 0006  
                  u35_25 0079                    u43_25 0188                    u36_20 0089  
                  u44_20 0194                    u52_20 019D                    u36_21 0088  
                  u44_21 0193                    u52_21 019C                    u36_25 0085  
                  u28_25 013B                    u60_27 02A8                    u45_20 01EC  
                  u53_20 01A8                    u45_21 01EB                    u53_21 01A7  
                  u37_25 0091                    u29_25 014E                    u61_27 027D  
                  u38_20 009D                    u54_20 01B2                    u38_21 009C  
                  u54_21 01B1                    u46_25 01FC                    u39_20 0165  
                  u39_21 0164                    u47_25 0230                    _TRISA 0085  
                  _TRISB 0086                    pclath 000A          __end_of_out_LCD 0120  
                  status 0003                    wtemp0 004E         LCD_wr_char@str_H 0027  
       LCD_wr_char@str_L 0025          __initialization 000C              LCD_goto@pos 0029  
           __end_of_main 025F   __end_ofi1_out_inst_LCD 0283       __size_ofi1_out_LCD 003E  
                 ??_main 002A      __size_ofi1_LCD_goto 0023                   i1l1001 00A2  
                 i1l1041 01A8                   i1l1033 0199                   i1l1043 01AC  
                 i1l1035 019D                   i1l1045 01B2                   i1l1037 01A1  
                 i1l1047 01B3                   i1l1039 01A3                   i1l1049 01B9  
                 _INTCON 000B   i1out_inst_LCD@out_data 0011           __CFG_PWRTE$OFF 0000  
        ?i1_out_inst_LCD 000C                ??___lwdiv 0010         __end_of_init_LCD 005D  
              ??___lwmod 0018     __size_of_displayTime 0040                   saved_w 004E  
              ??_out_LCD 001E   __size_ofi1_LCD_wr_char 001E        __end_ofi1_out_LCD 015E  
__end_of__initialization 0011                ?_LCD_goto 0024     out_inst_LCD@out_data 0023  
   __size_of_LCD_wr_char 001E             ?_out_str_LCD 000C                LCD_goto@x 0026  
              LCD_goto@y 0024               __pbssBANK0 002B             ??i1_LCD_goto 0013  
          i1_LCD_goto$85 0015       i1LCD_wr_char@str_H 0015       i1LCD_wr_char@str_L 0013  
           LCD_wr_char@c 0026               ??_LCD_goto 0025               __pmaintext 0244  
          i1_LCD_wr_char 0226               __pintentry 0004       __end_ofi1_LCD_goto 0208  
  i1out_str_LCD@out_data 0010                ?_init_LCD 000C           i1LCD_wr_char@c 0014  
         ?i1_LCD_wr_char 000C                  ___lwdiv 005D                  ___lwmod 015E  
                __ptext1 0283                  __ptext2 0013                  __ptext3 0208  
                __ptext4 0291                  __ptext5 01C2                  __ptext6 025F  
                __ptext7 00E2                  __ptext8 0199                  __ptext9 00A2  
           __size_of_ISR 0029              out_LCD@data 0020                  _out_LCD 00E2  
   end_of_initialization 0011               ??_init_LCD 0024   __size_ofi1_out_str_LCD 000D  
       ??i1_out_inst_LCD 000F                _PORTBbits 0006     __size_of_out_str_LCD 000D  
             _startTimer 0283          ??i1_LCD_wr_char 0011                i1_out_LCD 0120  
      __size_of_LCD_goto 0023            ?_out_inst_LCD 000C            ??_displayTime 001A  
          i1_out_str_LCD 029E      start_initialization 000C              __end_of_ISR 01C2  
          ??_LCD_wr_char 0023               ?i1_out_LCD 000C           ??_out_inst_LCD 0021  
         ?i1_out_str_LCD 000C      __end_of_displayTime 00E2                ___latbits 0000  
          __pcstackBANK0 000C              ?_startTimer 000C        __size_of_init_LCD 004A  
       ___lwdiv@dividend 000E              i1LCD_goto@x 0014              i1LCD_goto@y 0012  
          i1LCD_goto@pos 0017                 ?___lwdiv 000C                 ?___lwmod 0014  
    __end_of_LCD_wr_char 0226                 ?_out_LCD 000C         ___lwdiv@quotient 0011  
      interrupt_function 0004                 _LCD_goto 01C2              ??i1_out_LCD 000C  
        ??i1_out_str_LCD 000F              _displayTime 00A2      __size_of_startTimer 000E  
   __end_of_out_inst_LCD 0271              _LCD_goto$85 0027                init_LCD@i 0026  
            _LCD_wr_char 0208            ??_out_str_LCD 0021         __size_of___lwdiv 0045  
       __size_of___lwmod 003B          ___lwdiv@divisor 000C          ___lwdiv@counter 0013  
               __ptext10 0226                 __ptext11 029E                 __ptext12 01E5  
               __ptext13 0271                 __ptext14 0120                 __ptext15 015E  
               __ptext16 005D         __size_of_out_LCD 003E                 _init_LCD 0013  
          __size_of_main 001B    __end_ofi1_LCD_wr_char 0244  __size_ofi1_out_inst_LCD 0012  
    __end_of_out_str_LCD 029E             _tenthSeconds 002B             ??_startTimer 001E  
    out_str_LCD@out_data 0022                 intlevel1 0000               i1_LCD_goto 01E5  
       ___lwmod@dividend 0016             _timerRunning 002E            _overflowCount 002D  
     __end_of_startTimer 0291               _OPTION_REG 0081    __size_of_out_inst_LCD 0012  
        ___lwmod@divisor 0014          ___lwmod@counter 0019            i1out_LCD@data 000E  
