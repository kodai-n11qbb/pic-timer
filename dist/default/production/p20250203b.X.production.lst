

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 07 11:34:06 2025

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F84A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    26                           	dabs	1,0x4E,2
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F84A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  0088                     	;# 
    77  0089                     	;# 
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  0006                     _PORTB	set	6
    95  0005                     _PORTA	set	5
    96  0006                     _PORTBbits	set	6
    97  000B                     _INTCON	set	11
    98  0001                     _TMR0	set	1
    99  0086                     _TRISB	set	134
   100  0085                     _TRISA	set	133
   101  0081                     _OPTION_REG	set	129
   102                           
   103                           ; #config settings
   104  0000                     
   105                           	psect	cinit
   106  000C                     start_initialization:	
   107  000C                     __initialization:	
   108                           
   109                           ; Clear objects allocated to BANK0
   110  000C  1283               	bcf	3,5	;RP0=0, select bank0
   111  000D  01AB               	clrf	__pbssBANK0& (0+127)
   112  000E  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   113  000F  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   114  0010  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   115  0011                     end_of_initialization:	
   116                           ;End of C runtime variable initialization code
   117                           
   118  0011                     __end_of__initialization:	
   119  0011  0183               	clrf	3
   120  0012  29C2               	ljmp	_main	;jump to C main() function
   121                           
   122                           	psect	bssBANK0
   123  002B                     __pbssBANK0:	
   124  002B                     _tenthSeconds:	
   125  002B                     	ds	2
   126  002D                     _overflowCount:	
   127  002D                     	ds	1
   128  002E                     _timerRunning:	
   129  002E                     	ds	1
   130                           
   131                           	psect	cstackBANK0
   132  000C                     __pcstackBANK0:	
   133  000C                     ?_out_inst_LCD:	
   134  000C                     ?_LCD_wr_char:	
   135                           ; 1 bytes @ 0x0
   136                           
   137  000C                     ?_out_str_LCD:	
   138                           ; 1 bytes @ 0x0
   139                           
   140  000C                     ?_out_LCD:	
   141                           ; 1 bytes @ 0x0
   142                           
   143  000C                     ?_startTimer:	
   144                           ; 1 bytes @ 0x0
   145                           
   146  000C                     ?_stopTimer:	
   147                           ; 1 bytes @ 0x0
   148                           
   149  000C                     ?_displayTime:	
   150                           ; 1 bytes @ 0x0
   151                           
   152  000C                     ?_ISR:	
   153                           ; 1 bytes @ 0x0
   154                           
   155  000C                     ?_init_LCD:	
   156                           ; 1 bytes @ 0x0
   157                           
   158  000C                     ?_main:	
   159                           ; 1 bytes @ 0x0
   160                           
   161  000C                     ?i1_LCD_wr_char:	
   162                           ; 1 bytes @ 0x0
   163                           
   164  000C                     ?i1_out_inst_LCD:	
   165                           ; 1 bytes @ 0x0
   166                           
   167  000C                     ?i1_out_str_LCD:	
   168                           ; 1 bytes @ 0x0
   169                           
   170  000C                     ?i1_out_LCD:	
   171                           ; 1 bytes @ 0x0
   172                           
   173  000C                     ??i1_out_LCD:	
   174                           ; 1 bytes @ 0x0
   175                           
   176  000C                     ?___lwdiv:	
   177                           ; 1 bytes @ 0x0
   178                           
   179  000C                     ___lwdiv@divisor:	
   180                           ; 2 bytes @ 0x0
   181                           
   182                           
   183                           ; 2 bytes @ 0x0
   184  000C                     	ds	2
   185  000E                     i1out_LCD@data:	
   186  000E                     ___lwdiv@dividend:	
   187                           ; 1 bytes @ 0x2
   188                           
   189                           
   190                           ; 2 bytes @ 0x2
   191  000E                     	ds	1
   192  000F                     ??i1_out_inst_LCD:	
   193  000F                     ??i1_out_str_LCD:	
   194                           ; 1 bytes @ 0x3
   195                           
   196                           
   197                           ; 1 bytes @ 0x3
   198  000F                     	ds	1
   199  0010                     ??___lwdiv:	
   200  0010                     i1out_str_LCD@out_data:	
   201                           ; 1 bytes @ 0x4
   202                           
   203                           
   204                           ; 1 bytes @ 0x4
   205  0010                     	ds	1
   206  0011                     ??i1_LCD_wr_char:	
   207  0011                     i1out_inst_LCD@out_data:	
   208                           ; 1 bytes @ 0x5
   209                           
   210  0011                     ___lwdiv@quotient:	
   211                           ; 1 bytes @ 0x5
   212                           
   213                           
   214                           ; 2 bytes @ 0x5
   215  0011                     	ds	1
   216  0012                     ?i1_LCD_goto:	
   217  0012                     i1LCD_goto@y:	
   218                           ; 1 bytes @ 0x6
   219                           
   220                           
   221                           ; 1 bytes @ 0x6
   222  0012                     	ds	1
   223  0013                     ??i1_LCD_goto:	
   224  0013                     ___lwdiv@counter:	
   225                           ; 1 bytes @ 0x7
   226                           
   227  0013                     i1LCD_wr_char@str_L:	
   228                           ; 1 bytes @ 0x7
   229                           
   230                           
   231                           ; 1 bytes @ 0x7
   232  0013                     	ds	1
   233  0014                     ?___lwmod:	
   234  0014                     i1LCD_goto@x:	
   235                           ; 2 bytes @ 0x8
   236                           
   237  0014                     i1LCD_wr_char@c:	
   238                           ; 1 bytes @ 0x8
   239                           
   240  0014                     ___lwmod@divisor:	
   241                           ; 1 bytes @ 0x8
   242                           
   243                           
   244                           ; 2 bytes @ 0x8
   245  0014                     	ds	1
   246  0015                     i1LCD_wr_char@str_H:	
   247  0015                     i1_LCD_goto$85:	
   248                           ; 1 bytes @ 0x9
   249                           
   250                           
   251                           ; 2 bytes @ 0x9
   252  0015                     	ds	1
   253  0016                     ___lwmod@dividend:	
   254                           
   255                           ; 2 bytes @ 0xA
   256  0016                     	ds	1
   257  0017                     i1LCD_goto@pos:	
   258                           
   259                           ; 1 bytes @ 0xB
   260  0017                     	ds	1
   261  0018                     ??___lwmod:	
   262                           
   263                           ; 1 bytes @ 0xC
   264  0018                     	ds	1
   265  0019                     ___lwmod@counter:	
   266                           
   267                           ; 1 bytes @ 0xD
   268  0019                     	ds	1
   269  001A                     ??_displayTime:	
   270                           
   271                           ; 1 bytes @ 0xE
   272  001A                     	ds	1
   273  001B                     ??_ISR:	
   274                           
   275                           ; 1 bytes @ 0xF
   276  001B                     	ds	3
   277  001E                     ??_out_LCD:	
   278  001E                     ??_startTimer:	
   279                           ; 1 bytes @ 0x12
   280                           
   281  001E                     ??_stopTimer:	
   282                           ; 1 bytes @ 0x12
   283                           
   284                           
   285                           ; 1 bytes @ 0x12
   286  001E                     	ds	2
   287  0020                     out_LCD@data:	
   288                           
   289                           ; 1 bytes @ 0x14
   290  0020                     	ds	1
   291  0021                     ??_out_inst_LCD:	
   292  0021                     ??_out_str_LCD:	
   293                           ; 1 bytes @ 0x15
   294                           
   295                           
   296                           ; 1 bytes @ 0x15
   297  0021                     	ds	1
   298  0022                     out_str_LCD@out_data:	
   299                           
   300                           ; 1 bytes @ 0x16
   301  0022                     	ds	1
   302  0023                     ??_LCD_wr_char:	
   303  0023                     out_inst_LCD@out_data:	
   304                           ; 1 bytes @ 0x17
   305                           
   306                           
   307                           ; 1 bytes @ 0x17
   308  0023                     	ds	1
   309  0024                     ?_LCD_goto:	
   310  0024                     ??_init_LCD:	
   311                           ; 1 bytes @ 0x18
   312                           
   313  0024                     LCD_goto@y:	
   314                           ; 1 bytes @ 0x18
   315                           
   316                           
   317                           ; 1 bytes @ 0x18
   318  0024                     	ds	1
   319  0025                     ??_LCD_goto:	
   320  0025                     LCD_wr_char@str_L:	
   321                           ; 1 bytes @ 0x19
   322                           
   323                           
   324                           ; 1 bytes @ 0x19
   325  0025                     	ds	1
   326  0026                     LCD_goto@x:	
   327  0026                     LCD_wr_char@c:	
   328                           ; 1 bytes @ 0x1A
   329                           
   330  0026                     init_LCD@i:	
   331                           ; 1 bytes @ 0x1A
   332                           
   333                           
   334                           ; 2 bytes @ 0x1A
   335  0026                     	ds	1
   336  0027                     LCD_wr_char@str_H:	
   337  0027                     _LCD_goto$85:	
   338                           ; 1 bytes @ 0x1B
   339                           
   340                           
   341                           ; 2 bytes @ 0x1B
   342  0027                     	ds	2
   343  0029                     LCD_goto@pos:	
   344                           
   345                           ; 1 bytes @ 0x1D
   346  0029                     	ds	1
   347  002A                     ??_main:	
   348                           
   349                           ; 1 bytes @ 0x1E
   350  002A                     	ds	1
   351                           
   352                           	psect	maintext
   353  01C2                     __pmaintext:	
   354 ;;
   355 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   356 ;;
   357 ;; *************** function _main *****************
   358 ;; Defined at:
   359 ;;		line 145 in file "newfile.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;		None
   364 ;; Return value:  Size  Location     Type
   365 ;;                  1    wreg      void 
   366 ;; Registers used:
   367 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   368 ;; Tracked objects:
   369 ;;		On entry : B00/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMMON   BANK0
   373 ;;      Params:         0       0
   374 ;;      Locals:         0       0
   375 ;;      Temps:          0       1
   376 ;;      Totals:         0       1
   377 ;;Total ram usage:        1 bytes
   378 ;; Hardware stack levels required when called:    8
   379 ;; This function calls:
   380 ;;		_LCD_goto
   381 ;;		_LCD_wr_char
   382 ;;		_init_LCD
   383 ;;		_startTimer
   384 ;;		_stopTimer
   385 ;; This function is called by:
   386 ;;		Startup code after reset
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           
   391                           ;psect for function _main
   392  01C2                     _main:	
   393  01C2                     l1065:	
   394                           ;incstack = 0
   395                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   396                           
   397                           
   398                           ;newfile.c: 146:     TRISA = 0b00000000;
   399  01C2  1683               	bsf	3,5	;RP0=1, select bank1
   400  01C3  0185               	clrf	5	;volatile
   401                           
   402                           ;newfile.c: 147:     TRISB = 0b00000000;
   403  01C4  0186               	clrf	6	;volatile
   404                           
   405                           ;newfile.c: 148:     PORTA = 0x00;
   406  01C5  1283               	bcf	3,5	;RP0=0, select bank0
   407  01C6  0185               	clrf	5	;volatile
   408                           
   409                           ;newfile.c: 149:     PORTB = 0x00;
   410  01C7  0186               	clrf	6	;volatile
   411  01C8                     l1067:	
   412                           
   413                           ;newfile.c: 151:     init_LCD();
   414  01C8  2013               	fcall	_init_LCD
   415  01C9                     l1069:	
   416                           
   417                           ;newfile.c: 154:     LCD_goto(1, 7);
   418  01C9  3007               	movlw	7
   419  01CA  1283               	bcf	3,5	;RP0=0, select bank0
   420  01CB  00AA               	movwf	??_main
   421  01CC  082A               	movf	??_main,w
   422  01CD  00A4               	movwf	LCD_goto@y
   423  01CE  3001               	movlw	1
   424  01CF  21E8               	fcall	_LCD_goto
   425  01D0                     l1071:	
   426                           
   427                           ;newfile.c: 155:     LCD_wr_char('0');
   428  01D0  3030               	movlw	48
   429  01D1  222E               	fcall	_LCD_wr_char
   430  01D2                     l1073:	
   431                           
   432                           ;newfile.c: 156:     LCD_wr_char('0');
   433  01D2  3030               	movlw	48
   434  01D3  222E               	fcall	_LCD_wr_char
   435  01D4                     l1075:	
   436                           
   437                           ;newfile.c: 157:     LCD_wr_char('.');
   438  01D4  302E               	movlw	46
   439  01D5  222E               	fcall	_LCD_wr_char
   440  01D6                     l1077:	
   441                           
   442                           ;newfile.c: 158:     LCD_wr_char('0');
   443  01D6  3030               	movlw	48
   444  01D7  222E               	fcall	_LCD_wr_char
   445  01D8                     l1079:	
   446                           
   447                           ;newfile.c: 159:     LCD_wr_char('s');
   448  01D8  3073               	movlw	115
   449  01D9  222E               	fcall	_LCD_wr_char
   450  01DA                     l1081:	
   451                           
   452                           ;newfile.c: 161:     startTimer();
   453  01DA  228E               	fcall	_startTimer
   454  01DB                     l1083:	
   455                           
   456                           ;newfile.c: 165:   if(PORTBbits.RB3 == 1) {
   457  01DB  1283               	bcf	3,5	;RP0=0, select bank0
   458  01DC  1D86               	btfss	6,3	;volatile
   459  01DD  29DF               	goto	u571
   460  01DE  29E0               	goto	u570
   461  01DF                     u571:	
   462  01DF  29E1               	goto	l1087
   463  01E0                     u570:	
   464  01E0                     l1085:	
   465                           
   466                           ;newfile.c: 166:    stopTimer();
   467  01E0  22B6               	fcall	_stopTimer
   468  01E1                     l1087:	
   469                           
   470                           ;newfile.c: 169:         if(PORTBbits.RB2 == 1) {
   471  01E1  1283               	bcf	3,5	;RP0=0, select bank0
   472  01E2  1D06               	btfss	6,2	;volatile
   473  01E3  29E5               	goto	u581
   474  01E4  29E6               	goto	u580
   475  01E5                     u581:	
   476  01E5  29DB               	goto	l1083
   477  01E6                     u580:	
   478  01E6  29DA               	goto	l1081
   479  01E7  280B               	ljmp	start
   480  01E8                     __end_of_main:	
   481                           
   482                           	psect	text1
   483  02B6                     __ptext1:	
   484 ;; *************** function _stopTimer *****************
   485 ;; Defined at:
   486 ;;		line 37 in file "newfile.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0
   500 ;;      Params:         0       0
   501 ;;      Locals:         0       0
   502 ;;      Temps:          0       1
   503 ;;      Totals:         0       1
   504 ;;Total ram usage:        1 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    5
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _stopTimer
   516  02B6                     _stopTimer:	
   517  02B6                     l999:	
   518                           ;incstack = 0
   519                           ; Regs used in _stopTimer: [wreg+status,2+status,0]
   520                           
   521                           
   522                           ;newfile.c: 38:     INTCON &= ~0b00100000;
   523  02B6  30DF               	movlw	223
   524  02B7  1283               	bcf	3,5	;RP0=0, select bank0
   525  02B8  009E               	movwf	??_stopTimer
   526  02B9  081E               	movf	??_stopTimer,w
   527  02BA  058B               	andwf	11,f	;volatile
   528  02BB                     l1001:	
   529                           
   530                           ;newfile.c: 39:     timerRunning = 0;
   531  02BB  01AE               	clrf	_timerRunning	;volatile
   532  02BC                     l38:	
   533  02BC  0008               	return
   534  02BD                     __end_of_stopTimer:	
   535                           
   536                           	psect	text2
   537  028E                     __ptext2:	
   538 ;; *************** function _startTimer *****************
   539 ;; Defined at:
   540 ;;		line 30 in file "newfile.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0
   554 ;;      Params:         0       0
   555 ;;      Locals:         0       0
   556 ;;      Temps:          0       1
   557 ;;      Totals:         0       1
   558 ;;Total ram usage:        1 bytes
   559 ;; Hardware stack levels used:    1
   560 ;; Hardware stack levels required when called:    5
   561 ;; This function calls:
   562 ;;		Nothing
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           
   569                           ;psect for function _startTimer
   570  028E                     _startTimer:	
   571  028E                     l997:	
   572                           ;incstack = 0
   573                           ; Regs used in _startTimer: [wreg]
   574                           
   575                           
   576                           ;newfile.c: 31:     TMR0 = 12;
   577  028E  300C               	movlw	12
   578  028F  1283               	bcf	3,5	;RP0=0, select bank0
   579  0290  0081               	movwf	1	;volatile
   580                           
   581                           ;newfile.c: 32:     OPTION_REG = 0b00000111;
   582  0291  3007               	movlw	7
   583  0292  1683               	bsf	3,5	;RP0=1, select bank1
   584  0293  0081               	movwf	1	;volatile
   585                           
   586                           ;newfile.c: 33:     INTCON = 0b10100000;
   587  0294  30A0               	movlw	160
   588  0295  008B               	movwf	11	;volatile
   589                           
   590                           ;newfile.c: 34:     timerRunning = 1;
   591  0296  3001               	movlw	1
   592  0297  1283               	bcf	3,5	;RP0=0, select bank0
   593  0298  009E               	movwf	??_startTimer
   594  0299  081E               	movf	??_startTimer,w
   595  029A  00AE               	movwf	_timerRunning	;volatile
   596  029B                     l35:	
   597  029B  0008               	return
   598  029C                     __end_of_startTimer:	
   599                           
   600                           	psect	text3
   601  0013                     __ptext3:	
   602 ;; *************** function _init_LCD *****************
   603 ;; Defined at:
   604 ;;		line 79 in file "newfile.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  i               2   26[BANK0 ] int 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0
   618 ;;      Params:         0       0
   619 ;;      Locals:         0       2
   620 ;;      Temps:          0       2
   621 ;;      Totals:         0       4
   622 ;;Total ram usage:        4 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    7
   625 ;; This function calls:
   626 ;;		_out_inst_LCD
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _init_LCD
   634  0013                     _init_LCD:	
   635  0013                     l1027:	
   636                           ;incstack = 0
   637                           ; Regs used in _init_LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   638                           
   639                           
   640                           ;newfile.c: 81:     int i;;newfile.c: 83:     _delay((unsigned long)((20)*(10000000/4000
      +                          .0)));
   641  0013  3041               	movlw	65
   642  0014  1283               	bcf	3,5	;RP0=0, select bank0
   643  0015  00A5               	movwf	??_init_LCD+1
   644  0016  30EE               	movlw	238
   645  0017  00A4               	movwf	??_init_LCD
   646  0018                     u597:	
   647  0018  0BA4               	decfsz	??_init_LCD,f
   648  0019  2818               	goto	u597
   649  001A  0BA5               	decfsz	??_init_LCD+1,f
   650  001B  2818               	goto	u597
   651  001C  0000               	nop
   652  001D                     l1029:	
   653                           
   654                           ;newfile.c: 85:     for (i = 0; i < 3; i++) {
   655  001D  1283               	bcf	3,5	;RP0=0, select bank0
   656  001E  01A6               	clrf	init_LCD@i
   657  001F  01A7               	clrf	init_LCD@i+1
   658  0020                     l1035:	
   659                           
   660                           ;newfile.c: 86:         out_inst_LCD(0x03);
   661  0020  3003               	movlw	3
   662  0021  226A               	fcall	_out_inst_LCD
   663  0022                     l1037:	
   664                           
   665                           ;newfile.c: 87:         _delay((unsigned long)((5)*(10000000/4000.0)));
   666  0022  3011               	movlw	17
   667  0023  1283               	bcf	3,5	;RP0=0, select bank0
   668  0024  00A5               	movwf	??_init_LCD+1
   669  0025  303A               	movlw	58
   670  0026  00A4               	movwf	??_init_LCD
   671  0027                     u607:	
   672  0027  0BA4               	decfsz	??_init_LCD,f
   673  0028  2827               	goto	u607
   674  0029  0BA5               	decfsz	??_init_LCD+1,f
   675  002A  2827               	goto	u607
   676  002B  0000               	nop
   677  002C                     l1039:	
   678                           
   679                           ;newfile.c: 88:     }
   680  002C  3001               	movlw	1
   681  002D  1283               	bcf	3,5	;RP0=0, select bank0
   682  002E  07A6               	addwf	init_LCD@i,f
   683  002F  1803               	skipnc
   684  0030  0AA7               	incf	init_LCD@i+1,f
   685  0031  3000               	movlw	0
   686  0032  07A7               	addwf	init_LCD@i+1,f
   687  0033                     l1041:	
   688  0033  0827               	movf	init_LCD@i+1,w
   689  0034  3A80               	xorlw	128
   690  0035  00CF               	movwf	btemp+1
   691  0036  3080               	movlw	128
   692  0037  024F               	subwf	btemp+1,w
   693  0038  1D03               	skipz
   694  0039  283C               	goto	u535
   695  003A  3003               	movlw	3
   696  003B  0226               	subwf	init_LCD@i,w
   697  003C                     u535:	
   698  003C  1C03               	skipc
   699  003D  283F               	goto	u531
   700  003E  2840               	goto	u530
   701  003F                     u531:	
   702  003F  2820               	goto	l1035
   703  0040                     u530:	
   704  0040                     l1043:	
   705                           
   706                           ;newfile.c: 90:     out_inst_LCD(0x02);
   707  0040  3002               	movlw	2
   708  0041  226A               	fcall	_out_inst_LCD
   709                           
   710                           ;newfile.c: 91:     out_inst_LCD(0x02);
   711  0042  3002               	movlw	2
   712  0043  226A               	fcall	_out_inst_LCD
   713                           
   714                           ;newfile.c: 92:     out_inst_LCD(0x08);
   715  0044  3008               	movlw	8
   716  0045  226A               	fcall	_out_inst_LCD
   717                           
   718                           ;newfile.c: 93:     out_inst_LCD(0x00);
   719  0046  3000               	movlw	0
   720  0047  226A               	fcall	_out_inst_LCD
   721                           
   722                           ;newfile.c: 94:     out_inst_LCD(0x0c);
   723  0048  300C               	movlw	12
   724  0049  226A               	fcall	_out_inst_LCD
   725                           
   726                           ;newfile.c: 96:     out_inst_LCD(0x00);
   727  004A  3000               	movlw	0
   728  004B  226A               	fcall	_out_inst_LCD
   729                           
   730                           ;newfile.c: 97:     out_inst_LCD(0x01);
   731  004C  3001               	movlw	1
   732  004D  226A               	fcall	_out_inst_LCD
   733                           
   734                           ;newfile.c: 98:     out_inst_LCD(0x00);
   735  004E  3000               	movlw	0
   736  004F  226A               	fcall	_out_inst_LCD
   737                           
   738                           ;newfile.c: 99:     out_inst_LCD(0x06);
   739  0050  3006               	movlw	6
   740  0051  226A               	fcall	_out_inst_LCD
   741  0052                     l1045:	
   742                           
   743                           ;newfile.c: 101:     _delay((unsigned long)((20)*(10000000/4000.0)));
   744  0052  3041               	movlw	65
   745  0053  1283               	bcf	3,5	;RP0=0, select bank0
   746  0054  00A5               	movwf	??_init_LCD+1
   747  0055  30EE               	movlw	238
   748  0056  00A4               	movwf	??_init_LCD
   749  0057                     u617:	
   750  0057  0BA4               	decfsz	??_init_LCD,f
   751  0058  2857               	goto	u617
   752  0059  0BA5               	decfsz	??_init_LCD+1,f
   753  005A  2857               	goto	u617
   754  005B  0000               	nop
   755  005C                     l61:	
   756  005C  0008               	return
   757  005D                     __end_of_init_LCD:	
   758                           
   759                           	psect	text4
   760  022E                     __ptext4:	
   761 ;; *************** function _LCD_wr_char *****************
   762 ;; Defined at:
   763 ;;		line 105 in file "newfile.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  c               1    wreg     unsigned char 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  c               1   26[BANK0 ] unsigned char 
   768 ;;  str_H           1   27[BANK0 ] unsigned char 
   769 ;;  str_L           1   25[BANK0 ] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0, pclath, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0
   779 ;;      Params:         0       0
   780 ;;      Locals:         0       3
   781 ;;      Temps:          0       2
   782 ;;      Totals:         0       5
   783 ;;Total ram usage:        5 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    7
   786 ;; This function calls:
   787 ;;		_out_str_LCD
   788 ;; This function is called by:
   789 ;;		_main
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function _LCD_wr_char
   795  022E                     _LCD_wr_char:	
   796                           
   797                           ;incstack = 0
   798                           ; Regs used in _LCD_wr_char: [wreg+status,2+status,0+pclath+cstack]
   799                           ;LCD_wr_char@c stored from wreg
   800  022E  1283               	bcf	3,5	;RP0=0, select bank0
   801  022F  00A6               	movwf	LCD_wr_char@c
   802  0230                     l1017:	
   803                           
   804                           ;newfile.c: 105: void LCD_wr_char(char c);newfile.c: 106: {;newfile.c: 107:     char str
      +                          _H, str_L;;newfile.c: 109:     str_H = c & 0xf0;
   805  0230  0826               	movf	LCD_wr_char@c,w
   806  0231  39F0               	andlw	240
   807  0232  00A3               	movwf	??_LCD_wr_char
   808  0233  0823               	movf	??_LCD_wr_char,w
   809  0234  00A7               	movwf	LCD_wr_char@str_H
   810  0235                     l1019:	
   811                           
   812                           ;newfile.c: 110:     str_H = str_H >> 4;
   813  0235  0827               	movf	LCD_wr_char@str_H,w
   814  0236  00A3               	movwf	??_LCD_wr_char
   815  0237  3004               	movlw	4
   816  0238                     u525:	
   817  0238  1003               	clrc
   818  0239  0CA3               	rrf	??_LCD_wr_char,f
   819  023A  3EFF               	addlw	-1
   820  023B  1D03               	skipz
   821  023C  2A38               	goto	u525
   822  023D  0823               	movf	??_LCD_wr_char,w
   823  023E  00A4               	movwf	??_LCD_wr_char+1
   824  023F  0824               	movf	??_LCD_wr_char+1,w
   825  0240  00A7               	movwf	LCD_wr_char@str_H
   826  0241                     l1021:	
   827                           
   828                           ;newfile.c: 111:     str_L = c & 0x0f;
   829  0241  0826               	movf	LCD_wr_char@c,w
   830  0242  390F               	andlw	15
   831  0243  00A3               	movwf	??_LCD_wr_char
   832  0244  0823               	movf	??_LCD_wr_char,w
   833  0245  00A5               	movwf	LCD_wr_char@str_L
   834  0246                     l1023:	
   835                           
   836                           ;newfile.c: 113:     out_str_LCD(str_H);
   837  0246  0827               	movf	LCD_wr_char@str_H,w
   838  0247  229C               	fcall	_out_str_LCD
   839  0248                     l1025:	
   840                           
   841                           ;newfile.c: 114:     out_str_LCD(str_L);
   842  0248  1283               	bcf	3,5	;RP0=0, select bank0
   843  0249  0825               	movf	LCD_wr_char@str_L,w
   844  024A  229C               	fcall	_out_str_LCD
   845  024B                     l64:	
   846  024B  0008               	return
   847  024C                     __end_of_LCD_wr_char:	
   848                           
   849                           	psect	text5
   850  029C                     __ptext5:	
   851 ;; *************** function _out_str_LCD *****************
   852 ;; Defined at:
   853 ;;		line 127 in file "newfile.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  out_data        1    wreg     unsigned char 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;  out_data        1   22[BANK0 ] unsigned char 
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2, status,0, pclath, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0
   867 ;;      Params:         0       0
   868 ;;      Locals:         0       1
   869 ;;      Temps:          0       1
   870 ;;      Totals:         0       2
   871 ;;Total ram usage:        2 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    6
   874 ;; This function calls:
   875 ;;		_out_LCD
   876 ;; This function is called by:
   877 ;;		_LCD_wr_char
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           
   882                           ;psect for function _out_str_LCD
   883  029C                     _out_str_LCD:	
   884                           
   885                           ;incstack = 0
   886                           ; Regs used in _out_str_LCD: [wreg+status,2+status,0+pclath+cstack]
   887                           ;out_str_LCD@out_data stored from wreg
   888  029C  1283               	bcf	3,5	;RP0=0, select bank0
   889  029D  00A2               	movwf	out_str_LCD@out_data
   890  029E                     l917:	
   891                           
   892                           ;newfile.c: 127: void out_str_LCD(unsigned char out_data);newfile.c: 128: {;newfile.c: 1
      +                          29:     out_LCD(out_data);
   893  029E  0822               	movf	out_str_LCD@out_data,w
   894  029F  20E2               	fcall	_out_LCD
   895  02A0                     l919:	
   896                           
   897                           ;newfile.c: 130:     PORTBbits.RB0 = 1; PORTBbits.RB1 = 1;
   898  02A0  1283               	bcf	3,5	;RP0=0, select bank0
   899  02A1  1406               	bsf	6,0	;volatile
   900  02A2                     l921:	
   901  02A2  1486               	bsf	6,1	;volatile
   902  02A3                     l923:	
   903                           
   904                           ;newfile.c: 131:     PORTBbits.RB1 = 0;
   905  02A3  1086               	bcf	6,1	;volatile
   906  02A4                     l925:	
   907                           
   908                           ;newfile.c: 132:     _delay((unsigned long)((100)*(10000000/4000000.0)));
   909  02A4  3053               	movlw	83
   910  02A5  00A1               	movwf	??_out_str_LCD
   911  02A6                     u627:	
   912  02A6  0BA1               	decfsz	??_out_str_LCD,f
   913  02A7  2AA6               	goto	u627
   914  02A8                     l70:	
   915  02A8  0008               	return
   916  02A9                     __end_of_out_str_LCD:	
   917                           
   918                           	psect	text6
   919  01E8                     __ptext6:	
   920 ;; *************** function _LCD_goto *****************
   921 ;; Defined at:
   922 ;;		line 43 in file "newfile.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  x               1    wreg     unsigned char 
   925 ;;  y               1   24[BANK0 ] unsigned char 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  x               1   26[BANK0 ] unsigned char 
   928 ;;  pos             1   29[BANK0 ] unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0, pclath, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMMON   BANK0
   938 ;;      Params:         0       1
   939 ;;      Locals:         0       4
   940 ;;      Temps:          0       1
   941 ;;      Totals:         0       6
   942 ;;Total ram usage:        6 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    7
   945 ;; This function calls:
   946 ;;		_out_inst_LCD
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           
   953                           ;psect for function _LCD_goto
   954  01E8                     _LCD_goto:	
   955                           
   956                           ;incstack = 0
   957                           ; Regs used in _LCD_goto: [wreg+status,2+status,0+pclath+cstack]
   958                           ;LCD_goto@x stored from wreg
   959  01E8  1283               	bcf	3,5	;RP0=0, select bank0
   960  01E9  00A6               	movwf	LCD_goto@x
   961  01EA                     l1003:	
   962                           
   963                           ;newfile.c: 44:     unsigned char pos = 0x80 | (x ? 0x40 : 0x00) | y;
   964  01EA  0826               	movf	LCD_goto@x,w
   965  01EB  1D03               	btfss	3,2
   966  01EC  29EE               	goto	u501
   967  01ED  29EF               	goto	u500
   968  01EE                     u501:	
   969  01EE  29F2               	goto	l1007
   970  01EF                     u500:	
   971  01EF                     l1005:	
   972  01EF  01A7               	clrf	_LCD_goto$85
   973  01F0  01A8               	clrf	_LCD_goto$85+1
   974  01F1  29F6               	goto	l1009
   975  01F2                     l1007:	
   976  01F2  3040               	movlw	64
   977  01F3  00A7               	movwf	_LCD_goto$85
   978  01F4  3000               	movlw	0
   979  01F5  00A8               	movwf	_LCD_goto$85+1
   980  01F6                     l1009:	
   981  01F6  0827               	movf	_LCD_goto$85,w
   982  01F7  0424               	iorwf	LCD_goto@y,w
   983  01F8  3880               	iorlw	128
   984  01F9  00A5               	movwf	??_LCD_goto
   985  01FA  0825               	movf	??_LCD_goto,w
   986  01FB  00A9               	movwf	LCD_goto@pos
   987  01FC                     l1011:	
   988                           
   989                           ;newfile.c: 45:     out_inst_LCD(pos >> 4);
   990  01FC  0829               	movf	LCD_goto@pos,w
   991  01FD  00A5               	movwf	??_LCD_goto
   992  01FE  3004               	movlw	4
   993  01FF                     u515:	
   994  01FF  1003               	clrc
   995  0200  0CA5               	rrf	??_LCD_goto,f
   996  0201  3EFF               	addlw	-1
   997  0202  1D03               	skipz
   998  0203  29FF               	goto	u515
   999  0204  0825               	movf	??_LCD_goto,w
  1000  0205  226A               	fcall	_out_inst_LCD
  1001  0206                     l1013:	
  1002                           
  1003                           ;newfile.c: 46:     out_inst_LCD(pos & 0x0F);
  1004  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1005  0207  0829               	movf	LCD_goto@pos,w
  1006  0208  390F               	andlw	15
  1007  0209  226A               	fcall	_out_inst_LCD
  1008  020A                     l45:	
  1009  020A  0008               	return
  1010  020B                     __end_of_LCD_goto:	
  1011                           
  1012                           	psect	text7
  1013  026A                     __ptext7:	
  1014 ;; *************** function _out_inst_LCD *****************
  1015 ;; Defined at:
  1016 ;;		line 118 in file "newfile.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  out_data        1    wreg     unsigned char 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  out_data        1   23[BANK0 ] unsigned char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, status,2, status,0, pclath, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMMON   BANK0
  1030 ;;      Params:         0       0
  1031 ;;      Locals:         0       1
  1032 ;;      Temps:          0       2
  1033 ;;      Totals:         0       3
  1034 ;;Total ram usage:        3 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    6
  1037 ;; This function calls:
  1038 ;;		_out_LCD
  1039 ;; This function is called by:
  1040 ;;		_LCD_goto
  1041 ;;		_init_LCD
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           
  1046                           ;psect for function _out_inst_LCD
  1047  026A                     _out_inst_LCD:	
  1048                           
  1049                           ;incstack = 0
  1050                           ; Regs used in _out_inst_LCD: [wreg+status,2+status,0+pclath+cstack]
  1051                           ;out_inst_LCD@out_data stored from wreg
  1052  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1053  026B  00A3               	movwf	out_inst_LCD@out_data
  1054  026C                     l907:	
  1055                           
  1056                           ;newfile.c: 118: void out_inst_LCD(unsigned char out_data);newfile.c: 119: {;newfile.c: 
      +                          120:     out_LCD(out_data);
  1057  026C  0823               	movf	out_inst_LCD@out_data,w
  1058  026D  20E2               	fcall	_out_LCD
  1059  026E                     l909:	
  1060                           
  1061                           ;newfile.c: 121:     PORTBbits.RB0 = 0; PORTBbits.RB1 = 1;
  1062  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1063  026F  1006               	bcf	6,0	;volatile
  1064  0270                     l911:	
  1065  0270  1486               	bsf	6,1	;volatile
  1066  0271                     l913:	
  1067                           
  1068                           ;newfile.c: 122:     PORTBbits.RB1 = 0;
  1069  0271  1086               	bcf	6,1	;volatile
  1070  0272                     l915:	
  1071                           
  1072                           ;newfile.c: 123:     _delay((unsigned long)((5)*(10000000/4000.0)));
  1073  0272  3011               	movlw	17
  1074  0273  00A2               	movwf	??_out_inst_LCD+1
  1075  0274  303A               	movlw	58
  1076  0275  00A1               	movwf	??_out_inst_LCD
  1077  0276                     u637:	
  1078  0276  0BA1               	decfsz	??_out_inst_LCD,f
  1079  0277  2A76               	goto	u637
  1080  0278  0BA2               	decfsz	??_out_inst_LCD+1,f
  1081  0279  2A76               	goto	u637
  1082  027A  0000               	nop
  1083  027B                     l67:	
  1084  027B  0008               	return
  1085  027C                     __end_of_out_inst_LCD:	
  1086                           
  1087                           	psect	text8
  1088  00E2                     __ptext8:	
  1089 ;; *************** function _out_LCD *****************
  1090 ;; Defined at:
  1091 ;;		line 136 in file "newfile.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  data            1    wreg     unsigned char 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  data            1   20[BANK0 ] unsigned char 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2, status,0
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0
  1105 ;;      Params:         0       0
  1106 ;;      Locals:         0       1
  1107 ;;      Temps:          0       2
  1108 ;;      Totals:         0       3
  1109 ;;Total ram usage:        3 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    5
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		_out_inst_LCD
  1116 ;;		_out_str_LCD
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           
  1121                           ;psect for function _out_LCD
  1122  00E2                     _out_LCD:	
  1123                           
  1124                           ;incstack = 0
  1125                           ; Regs used in _out_LCD: [wreg+status,2+status,0]
  1126                           ;out_LCD@data stored from wreg
  1127  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1128  00E3  00A0               	movwf	out_LCD@data
  1129  00E4                     l885:	
  1130                           
  1131                           ;newfile.c: 136: void out_LCD(unsigned char data);newfile.c: 137: {;newfile.c: 139:     
      +                          PORTBbits.RB4 = (data & 0x01);
  1132  00E4  0820               	movf	out_LCD@data,w
  1133  00E5  3901               	andlw	1
  1134  00E6  009E               	movwf	??_out_LCD
  1135  00E7  0E9E               	swapf	??_out_LCD,f
  1136  00E8  0806               	movf	6,w	;volatile
  1137  00E9  061E               	xorwf	??_out_LCD,w
  1138  00EA  39EF               	andlw	-17
  1139  00EB  061E               	xorwf	??_out_LCD,w
  1140  00EC  0086               	movwf	6	;volatile
  1141                           
  1142                           ;newfile.c: 140:     PORTBbits.RB5 = (data & 0x02) >> 1;
  1143  00ED  0820               	movf	out_LCD@data,w
  1144  00EE  009E               	movwf	??_out_LCD
  1145  00EF  1003               	clrc
  1146  00F0  0C1E               	rrf	??_out_LCD,w
  1147  00F1  3901               	andlw	1
  1148  00F2  009F               	movwf	??_out_LCD+1
  1149  00F3  0E9F               	swapf	??_out_LCD+1,f
  1150  00F4  0D9F               	rlf	??_out_LCD+1,f
  1151  00F5  0806               	movf	6,w	;volatile
  1152  00F6  061F               	xorwf	??_out_LCD+1,w
  1153  00F7  39DF               	andlw	-33
  1154  00F8  061F               	xorwf	??_out_LCD+1,w
  1155  00F9  0086               	movwf	6	;volatile
  1156                           
  1157                           ;newfile.c: 141:     PORTBbits.RB6 = (data & 0x04) >> 2;
  1158  00FA  0820               	movf	out_LCD@data,w
  1159  00FB  009E               	movwf	??_out_LCD
  1160  00FC  3002               	movlw	2
  1161  00FD                     u325:	
  1162  00FD  1003               	clrc
  1163  00FE  0C9E               	rrf	??_out_LCD,f
  1164  00FF  3EFF               	addlw	-1
  1165  0100  1D03               	skipz
  1166  0101  28FD               	goto	u325
  1167  0102  081E               	movf	??_out_LCD,w
  1168  0103  3901               	andlw	1
  1169  0104  009F               	movwf	??_out_LCD+1
  1170  0105  0E9F               	swapf	??_out_LCD+1,f
  1171  0106  0D9F               	rlf	??_out_LCD+1,f
  1172  0107  0D9F               	rlf	??_out_LCD+1,f
  1173  0108  0806               	movf	6,w	;volatile
  1174  0109  061F               	xorwf	??_out_LCD+1,w
  1175  010A  39BF               	andlw	-65
  1176  010B  061F               	xorwf	??_out_LCD+1,w
  1177  010C  0086               	movwf	6	;volatile
  1178                           
  1179                           ;newfile.c: 142:     PORTBbits.RB7 = (data & 0x08) >> 3;
  1180  010D  0820               	movf	out_LCD@data,w
  1181  010E  009E               	movwf	??_out_LCD
  1182  010F  3003               	movlw	3
  1183  0110                     u335:	
  1184  0110  1003               	clrc
  1185  0111  0C9E               	rrf	??_out_LCD,f
  1186  0112  3EFF               	addlw	-1
  1187  0113  1D03               	skipz
  1188  0114  2910               	goto	u335
  1189  0115  081E               	movf	??_out_LCD,w
  1190  0116  3901               	andlw	1
  1191  0117  009F               	movwf	??_out_LCD+1
  1192  0118  0C9F               	rrf	??_out_LCD+1,f
  1193  0119  0C9F               	rrf	??_out_LCD+1,f
  1194  011A  0806               	movf	6,w	;volatile
  1195  011B  061F               	xorwf	??_out_LCD+1,w
  1196  011C  397F               	andlw	-129
  1197  011D  061F               	xorwf	??_out_LCD+1,w
  1198  011E  0086               	movwf	6	;volatile
  1199  011F                     l73:	
  1200  011F  0008               	return
  1201  0120                     __end_of_out_LCD:	
  1202                           
  1203                           	psect	text9
  1204  0199                     __ptext9:	
  1205 ;; *************** function _ISR *****************
  1206 ;; Defined at:
  1207 ;;		line 64 in file "newfile.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0, pclath, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0
  1221 ;;      Params:         0       0
  1222 ;;      Locals:         0       0
  1223 ;;      Temps:          0       3
  1224 ;;      Totals:         0       3
  1225 ;;Total ram usage:        3 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    4
  1228 ;; This function calls:
  1229 ;;		_displayTime
  1230 ;; This function is called by:
  1231 ;;		Interrupt level 1
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           
  1236                           ;psect for function _ISR
  1237  0199                     _ISR:	
  1238  0199                     i1l1047:	
  1239                           
  1240                           ;newfile.c: 65:     if (INTCON & 0b00000100) {
  1241  0199  1D0B               	btfss	11,2	;volatile
  1242  019A  299C               	goto	u54_21
  1243  019B  299D               	goto	u54_20
  1244  019C                     u54_21:	
  1245  019C  29BA               	goto	i1l56
  1246  019D                     u54_20:	
  1247  019D                     i1l1049:	
  1248                           
  1249                           ;newfile.c: 66:         INTCON &= ~0b00000100;
  1250  019D  30FB               	movlw	251
  1251  019E  009B               	movwf	??_ISR
  1252  019F  081B               	movf	??_ISR,w
  1253  01A0  058B               	andwf	11,f	;volatile
  1254  01A1                     i1l1051:	
  1255                           
  1256                           ;newfile.c: 67:         TMR0 = 12;
  1257  01A1  300C               	movlw	12
  1258  01A2  0081               	movwf	1	;volatile
  1259  01A3                     i1l1053:	
  1260                           
  1261                           ;newfile.c: 68:         if (timerRunning) {
  1262  01A3  082E               	movf	_timerRunning,w	;volatile
  1263  01A4  1903               	btfsc	3,2
  1264  01A5  29A7               	goto	u55_21
  1265  01A6  29A8               	goto	u55_20
  1266  01A7                     u55_21:	
  1267  01A7  29BA               	goto	i1l56
  1268  01A8                     u55_20:	
  1269  01A8                     i1l1055:	
  1270                           
  1271                           ;newfile.c: 69:             overflowCount++;
  1272  01A8  3001               	movlw	1
  1273  01A9  009B               	movwf	??_ISR
  1274  01AA  081B               	movf	??_ISR,w
  1275  01AB  07AD               	addwf	_overflowCount,f	;volatile
  1276  01AC                     i1l1057:	
  1277                           
  1278                           ;newfile.c: 70:             if (overflowCount >= 4) {
  1279  01AC  3004               	movlw	4
  1280  01AD  022D               	subwf	_overflowCount,w	;volatile
  1281  01AE  1C03               	skipc
  1282  01AF  29B1               	goto	u56_21
  1283  01B0  29B2               	goto	u56_20
  1284  01B1                     u56_21:	
  1285  01B1  29BA               	goto	i1l56
  1286  01B2                     u56_20:	
  1287  01B2                     i1l1059:	
  1288                           
  1289                           ;newfile.c: 71:                 overflowCount = 0;
  1290  01B2  01AD               	clrf	_overflowCount	;volatile
  1291  01B3                     i1l1061:	
  1292                           
  1293                           ;newfile.c: 72:                 tenthSeconds++;
  1294  01B3  3001               	movlw	1
  1295  01B4  07AB               	addwf	_tenthSeconds,f	;volatile
  1296  01B5  1803               	skipnc
  1297  01B6  0AAC               	incf	_tenthSeconds+1,f	;volatile
  1298  01B7  3000               	movlw	0
  1299  01B8  07AC               	addwf	_tenthSeconds+1,f	;volatile
  1300  01B9                     i1l1063:	
  1301                           
  1302                           ;newfile.c: 73:                 displayTime();
  1303  01B9  20A2               	fcall	_displayTime
  1304  01BA                     i1l56:	
  1305  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1306  01BB  081D               	movf	??_ISR+2,w
  1307  01BC  008A               	movwf	10
  1308  01BD  0E1C               	swapf	(??_ISR+1)^0,w
  1309  01BE  0083               	movwf	3
  1310  01BF  0ECE               	swapf	btemp,f
  1311  01C0  0E4E               	swapf	btemp,w
  1312  01C1  0009               	retfie
  1313  01C2                     __end_of_ISR:	
  1314                           
  1315                           	psect	intentry
  1316  0004                     __pintentry:	
  1317                           ;incstack = 0
  1318                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1319                           
  1320  0004                     interrupt_function:	
  1321  004E                     saved_w	set	btemp
  1322  0004  00CE               	movwf	btemp
  1323  0005  0E03               	swapf	3,w
  1324  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0007  009C               	movwf	??_ISR+1
  1326  0008  080A               	movf	10,w
  1327  0009  009D               	movwf	??_ISR+2
  1328  000A  2999               	ljmp	_ISR
  1329                           
  1330                           	psect	text10
  1331  00A2                     __ptext10:	
  1332 ;; *************** function _displayTime *****************
  1333 ;; Defined at:
  1334 ;;		line 49 in file "newfile.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0, pclath, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0
  1348 ;;      Params:         0       0
  1349 ;;      Locals:         0       0
  1350 ;;      Temps:          0       1
  1351 ;;      Totals:         0       1
  1352 ;;Total ram usage:        1 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    3
  1355 ;; This function calls:
  1356 ;;		___lwdiv
  1357 ;;		___lwmod
  1358 ;;		i1_LCD_goto
  1359 ;;		i1_LCD_wr_char
  1360 ;; This function is called by:
  1361 ;;		_ISR
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           
  1366                           ;psect for function _displayTime
  1367  00A2                     _displayTime:	
  1368  00A2                     i1l1015:	
  1369                           ;incstack = 0
  1370                           ; Regs used in _displayTime: [wreg+status,2+status,0+pclath+cstack]
  1371                           
  1372                           
  1373                           ;newfile.c: 50:     LCD_goto(1, 7);
  1374  00A2  3007               	movlw	7
  1375  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1376  00A4  009A               	movwf	??_displayTime
  1377  00A5  081A               	movf	??_displayTime,w
  1378  00A6  0092               	movwf	i1LCD_goto@y
  1379  00A7  3001               	movlw	1
  1380  00A8  220B               	fcall	i1_LCD_goto
  1381                           
  1382                           ;newfile.c: 53:     LCD_wr_char('0' + (tenthSeconds / 100));
  1383  00A9  3064               	movlw	100
  1384  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1385  00AB  008C               	movwf	___lwdiv@divisor
  1386  00AC  3000               	movlw	0
  1387  00AD  008D               	movwf	___lwdiv@divisor+1
  1388  00AE  082C               	movf	_tenthSeconds+1,w	;volatile
  1389  00AF  008F               	movwf	___lwdiv@dividend+1
  1390  00B0  082B               	movf	_tenthSeconds,w	;volatile
  1391  00B1  008E               	movwf	___lwdiv@dividend
  1392  00B2  205D               	fcall	___lwdiv
  1393  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1394  00B4  080C               	movf	?___lwdiv,w
  1395  00B5  3E30               	addlw	48
  1396  00B6  224C               	fcall	i1_LCD_wr_char
  1397                           
  1398                           ;newfile.c: 55:     LCD_wr_char('0' + ((tenthSeconds / 10) % 10));
  1399  00B7  300A               	movlw	10
  1400  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1401  00B9  0094               	movwf	___lwmod@divisor
  1402  00BA  3000               	movlw	0
  1403  00BB  0095               	movwf	___lwmod@divisor+1
  1404  00BC  300A               	movlw	10
  1405  00BD  008C               	movwf	___lwdiv@divisor
  1406  00BE  3000               	movlw	0
  1407  00BF  008D               	movwf	___lwdiv@divisor+1
  1408  00C0  082C               	movf	_tenthSeconds+1,w	;volatile
  1409  00C1  008F               	movwf	___lwdiv@dividend+1
  1410  00C2  082B               	movf	_tenthSeconds,w	;volatile
  1411  00C3  008E               	movwf	___lwdiv@dividend
  1412  00C4  205D               	fcall	___lwdiv
  1413  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1414  00C6  080D               	movf	?___lwdiv+1,w
  1415  00C7  0097               	movwf	___lwmod@dividend+1
  1416  00C8  080C               	movf	?___lwdiv,w
  1417  00C9  0096               	movwf	___lwmod@dividend
  1418  00CA  215E               	fcall	___lwmod
  1419  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1420  00CC  0814               	movf	?___lwmod,w
  1421  00CD  3E30               	addlw	48
  1422  00CE  224C               	fcall	i1_LCD_wr_char
  1423                           
  1424                           ;newfile.c: 57:     LCD_wr_char('.');
  1425  00CF  302E               	movlw	46
  1426  00D0  224C               	fcall	i1_LCD_wr_char
  1427                           
  1428                           ;newfile.c: 59:     LCD_wr_char('0' + (tenthSeconds % 10));
  1429  00D1  300A               	movlw	10
  1430  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1431  00D3  0094               	movwf	___lwmod@divisor
  1432  00D4  3000               	movlw	0
  1433  00D5  0095               	movwf	___lwmod@divisor+1
  1434  00D6  082C               	movf	_tenthSeconds+1,w	;volatile
  1435  00D7  0097               	movwf	___lwmod@dividend+1
  1436  00D8  082B               	movf	_tenthSeconds,w	;volatile
  1437  00D9  0096               	movwf	___lwmod@dividend
  1438  00DA  215E               	fcall	___lwmod
  1439  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1440  00DC  0814               	movf	?___lwmod,w
  1441  00DD  3E30               	addlw	48
  1442  00DE  224C               	fcall	i1_LCD_wr_char
  1443                           
  1444                           ;newfile.c: 61:     LCD_wr_char('s');
  1445  00DF  3073               	movlw	115
  1446  00E0  224C               	fcall	i1_LCD_wr_char
  1447  00E1                     i1l48:	
  1448  00E1  0008               	return
  1449  00E2                     __end_of_displayTime:	
  1450                           
  1451                           	psect	text11
  1452  024C                     __ptext11:	
  1453 ;; *************** function i1_LCD_wr_char *****************
  1454 ;; Defined at:
  1455 ;;		line 105 in file "newfile.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  c               1    wreg     unsigned char 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  c               1    8[BANK0 ] unsigned char 
  1460 ;;  LCD_wr_char     1    9[BANK0 ] unsigned char 
  1461 ;;  LCD_wr_char     1    7[BANK0 ] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0
  1471 ;;      Params:         0       0
  1472 ;;      Locals:         0       3
  1473 ;;      Temps:          0       2
  1474 ;;      Totals:         0       5
  1475 ;;Total ram usage:        5 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    2
  1478 ;; This function calls:
  1479 ;;		i1_out_str_LCD
  1480 ;; This function is called by:
  1481 ;;		_displayTime
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           
  1486                           ;psect for function i1_LCD_wr_char
  1487  024C                     i1_LCD_wr_char:	
  1488                           
  1489                           ;incstack = 0
  1490                           ; Regs used in i1_LCD_wr_char: [wreg+status,2+status,0+pclath+cstack]
  1491                           ;i1LCD_wr_char@c stored from wreg
  1492  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1493  024D  0094               	movwf	i1LCD_wr_char@c
  1494  024E                     i1l987:	
  1495                           
  1496                           ;newfile.c: 105: void LCD_wr_char(char c);newfile.c: 106: {;newfile.c: 107:     char str
      +                          _H, str_L;;newfile.c: 109:     str_H = c & 0xf0;
  1497  024E  0814               	movf	i1LCD_wr_char@c,w
  1498  024F  39F0               	andlw	240
  1499  0250  0091               	movwf	??i1_LCD_wr_char
  1500  0251  0811               	movf	??i1_LCD_wr_char,w
  1501  0252  0095               	movwf	i1LCD_wr_char@str_H
  1502  0253                     i1l989:	
  1503                           
  1504                           ;newfile.c: 110:     str_H = str_H >> 4;
  1505  0253  0815               	movf	i1LCD_wr_char@str_H,w
  1506  0254  0091               	movwf	??i1_LCD_wr_char
  1507  0255  3004               	movlw	4
  1508  0256                     u49_25:	
  1509  0256  1003               	clrc
  1510  0257  0C91               	rrf	??i1_LCD_wr_char,f
  1511  0258  3EFF               	addlw	-1
  1512  0259  1D03               	skipz
  1513  025A  2A56               	goto	u49_25
  1514  025B  0811               	movf	??i1_LCD_wr_char,w
  1515  025C  0092               	movwf	??i1_LCD_wr_char+1
  1516  025D  0812               	movf	??i1_LCD_wr_char+1,w
  1517  025E  0095               	movwf	i1LCD_wr_char@str_H
  1518  025F                     i1l991:	
  1519                           
  1520                           ;newfile.c: 111:     str_L = c & 0x0f;
  1521  025F  0814               	movf	i1LCD_wr_char@c,w
  1522  0260  390F               	andlw	15
  1523  0261  0091               	movwf	??i1_LCD_wr_char
  1524  0262  0811               	movf	??i1_LCD_wr_char,w
  1525  0263  0093               	movwf	i1LCD_wr_char@str_L
  1526  0264                     i1l993:	
  1527                           
  1528                           ;newfile.c: 113:     out_str_LCD(str_H);
  1529  0264  0815               	movf	i1LCD_wr_char@str_H,w
  1530  0265  22A9               	fcall	i1_out_str_LCD
  1531  0266                     i1l995:	
  1532                           
  1533                           ;newfile.c: 114:     out_str_LCD(str_L);
  1534  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0267  0813               	movf	i1LCD_wr_char@str_L,w
  1536  0268  22A9               	fcall	i1_out_str_LCD
  1537  0269                     i1l64:	
  1538  0269  0008               	return
  1539  026A                     __end_ofi1_LCD_wr_char:	
  1540                           
  1541                           	psect	text12
  1542  02A9                     __ptext12:	
  1543 ;; *************** function i1_out_str_LCD *****************
  1544 ;; Defined at:
  1545 ;;		line 127 in file "newfile.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  out_data        1    wreg     unsigned char 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  out_data        1    4[BANK0 ] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0, pclath, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0
  1559 ;;      Params:         0       0
  1560 ;;      Locals:         0       1
  1561 ;;      Temps:          0       1
  1562 ;;      Totals:         0       2
  1563 ;;Total ram usage:        2 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    1
  1566 ;; This function calls:
  1567 ;;		i1_out_LCD
  1568 ;; This function is called by:
  1569 ;;		i1_LCD_wr_char
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function i1_out_str_LCD
  1575  02A9                     i1_out_str_LCD:	
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in i1_out_str_LCD: [wreg+status,2+status,0+pclath+cstack]
  1579                           ;i1out_str_LCD@out_data stored from wreg
  1580  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1581  02AA  0090               	movwf	i1out_str_LCD@out_data
  1582  02AB                     i1l897:	
  1583                           
  1584                           ;newfile.c: 127: void out_str_LCD(unsigned char out_data);newfile.c: 128: {;newfile.c: 1
      +                          29:     out_LCD(out_data);
  1585  02AB  0810               	movf	i1out_str_LCD@out_data,w
  1586  02AC  2120               	fcall	i1_out_LCD
  1587  02AD                     i1l899:	
  1588                           
  1589                           ;newfile.c: 130:     PORTBbits.RB0 = 1; PORTBbits.RB1 = 1;
  1590  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1591  02AE  1406               	bsf	6,0	;volatile
  1592  02AF                     i1l901:	
  1593  02AF  1486               	bsf	6,1	;volatile
  1594  02B0                     i1l903:	
  1595                           
  1596                           ;newfile.c: 131:     PORTBbits.RB1 = 0;
  1597  02B0  1086               	bcf	6,1	;volatile
  1598  02B1                     i1l905:	
  1599                           
  1600                           ;newfile.c: 132:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  1601  02B1  3053               	movlw	83
  1602  02B2  008F               	movwf	??i1_out_str_LCD
  1603  02B3                     u64_27:	
  1604  02B3  0B8F               	decfsz	??i1_out_str_LCD,f
  1605  02B4  2AB3               	goto	u64_27
  1606  02B5                     i1l70:	
  1607  02B5  0008               	return
  1608  02B6                     __end_ofi1_out_str_LCD:	
  1609                           
  1610                           	psect	text13
  1611  020B                     __ptext13:	
  1612 ;; *************** function i1_LCD_goto *****************
  1613 ;; Defined at:
  1614 ;;		line 43 in file "newfile.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  x               1    wreg     unsigned char 
  1617 ;;  y               1    6[BANK0 ] unsigned char 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  x               1    8[BANK0 ] unsigned char 
  1620 ;;  LCD_goto        1   11[BANK0 ] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0, pclath, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0
  1630 ;;      Params:         0       1
  1631 ;;      Locals:         0       4
  1632 ;;      Temps:          0       1
  1633 ;;      Totals:         0       6
  1634 ;;Total ram usage:        6 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    2
  1637 ;; This function calls:
  1638 ;;		i1_out_inst_LCD
  1639 ;; This function is called by:
  1640 ;;		_displayTime
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function i1_LCD_goto
  1646  020B                     i1_LCD_goto:	
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in i1_LCD_goto: [wreg+status,2+status,0+pclath+cstack]
  1650                           ;i1LCD_goto@x stored from wreg
  1651  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1652  020C  0094               	movwf	i1LCD_goto@x
  1653  020D                     i1l975:	
  1654                           
  1655                           ;newfile.c: 44:     unsigned char pos = 0x80 | (x ? 0x40 : 0x00) | y;
  1656  020D  0814               	movf	i1LCD_goto@x,w
  1657  020E  1D03               	btfss	3,2
  1658  020F  2A11               	goto	u47_21
  1659  0210  2A12               	goto	u47_20
  1660  0211                     u47_21:	
  1661  0211  2A15               	goto	i1l979
  1662  0212                     u47_20:	
  1663  0212                     i1l977:	
  1664  0212  0195               	clrf	i1_LCD_goto$85
  1665  0213  0196               	clrf	i1_LCD_goto$85+1
  1666  0214  2A19               	goto	i1l981
  1667  0215                     i1l979:	
  1668  0215  3040               	movlw	64
  1669  0216  0095               	movwf	i1_LCD_goto$85
  1670  0217  3000               	movlw	0
  1671  0218  0096               	movwf	i1_LCD_goto$85+1
  1672  0219                     i1l981:	
  1673  0219  0815               	movf	i1_LCD_goto$85,w
  1674  021A  0412               	iorwf	i1LCD_goto@y,w
  1675  021B  3880               	iorlw	128
  1676  021C  0093               	movwf	??i1_LCD_goto
  1677  021D  0813               	movf	??i1_LCD_goto,w
  1678  021E  0097               	movwf	i1LCD_goto@pos
  1679  021F                     i1l983:	
  1680                           
  1681                           ;newfile.c: 45:     out_inst_LCD(pos >> 4);
  1682  021F  0817               	movf	i1LCD_goto@pos,w
  1683  0220  0093               	movwf	??i1_LCD_goto
  1684  0221  3004               	movlw	4
  1685  0222                     u48_25:	
  1686  0222  1003               	clrc
  1687  0223  0C93               	rrf	??i1_LCD_goto,f
  1688  0224  3EFF               	addlw	-1
  1689  0225  1D03               	skipz
  1690  0226  2A22               	goto	u48_25
  1691  0227  0813               	movf	??i1_LCD_goto,w
  1692  0228  227C               	fcall	i1_out_inst_LCD
  1693  0229                     i1l985:	
  1694                           
  1695                           ;newfile.c: 46:     out_inst_LCD(pos & 0x0F);
  1696  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1697  022A  0817               	movf	i1LCD_goto@pos,w
  1698  022B  390F               	andlw	15
  1699  022C  227C               	fcall	i1_out_inst_LCD
  1700  022D                     i1l45:	
  1701  022D  0008               	return
  1702  022E                     __end_ofi1_LCD_goto:	
  1703                           
  1704                           	psect	text14
  1705  027C                     __ptext14:	
  1706 ;; *************** function i1_out_inst_LCD *****************
  1707 ;; Defined at:
  1708 ;;		line 118 in file "newfile.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  out_data        1    wreg     unsigned char 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  out_data        1    5[BANK0 ] unsigned char 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0, pclath, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMMON   BANK0
  1722 ;;      Params:         0       0
  1723 ;;      Locals:         0       1
  1724 ;;      Temps:          0       2
  1725 ;;      Totals:         0       3
  1726 ;;Total ram usage:        3 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    1
  1729 ;; This function calls:
  1730 ;;		i1_out_LCD
  1731 ;; This function is called by:
  1732 ;;		i1_LCD_goto
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           
  1737                           ;psect for function i1_out_inst_LCD
  1738  027C                     i1_out_inst_LCD:	
  1739                           
  1740                           ;incstack = 0
  1741                           ; Regs used in i1_out_inst_LCD: [wreg+status,2+status,0+pclath+cstack]
  1742                           ;i1out_inst_LCD@out_data stored from wreg
  1743  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1744  027D  0091               	movwf	i1out_inst_LCD@out_data
  1745  027E                     i1l887:	
  1746                           
  1747                           ;newfile.c: 118: void out_inst_LCD(unsigned char out_data);newfile.c: 119: {;newfile.c: 
      +                          120:     out_LCD(out_data);
  1748  027E  0811               	movf	i1out_inst_LCD@out_data,w
  1749  027F  2120               	fcall	i1_out_LCD
  1750  0280                     i1l889:	
  1751                           
  1752                           ;newfile.c: 121:     PORTBbits.RB0 = 0; PORTBbits.RB1 = 1;
  1753  0280  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0281  1006               	bcf	6,0	;volatile
  1755  0282                     i1l891:	
  1756  0282  1486               	bsf	6,1	;volatile
  1757  0283                     i1l893:	
  1758                           
  1759                           ;newfile.c: 122:     PORTBbits.RB1 = 0;
  1760  0283  1086               	bcf	6,1	;volatile
  1761  0284                     i1l895:	
  1762                           
  1763                           ;newfile.c: 123:     _delay((unsigned long)((5)*(10000000/4000.0)));
  1764  0284  3011               	movlw	17
  1765  0285  0090               	movwf	??i1_out_inst_LCD+1
  1766  0286  303A               	movlw	58
  1767  0287  008F               	movwf	??i1_out_inst_LCD
  1768  0288                     u65_27:	
  1769  0288  0B8F               	decfsz	??i1_out_inst_LCD,f
  1770  0289  2A88               	goto	u65_27
  1771  028A  0B90               	decfsz	??i1_out_inst_LCD+1,f
  1772  028B  2A88               	goto	u65_27
  1773  028C  0000               	nop
  1774  028D                     i1l67:	
  1775  028D  0008               	return
  1776  028E                     __end_ofi1_out_inst_LCD:	
  1777                           
  1778                           	psect	text15
  1779  0120                     __ptext15:	
  1780 ;; *************** function i1_out_LCD *****************
  1781 ;; Defined at:
  1782 ;;		line 136 in file "newfile.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  data            1    wreg     unsigned char 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  data            1    2[BANK0 ] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0
  1796 ;;      Params:         0       0
  1797 ;;      Locals:         0       1
  1798 ;;      Temps:          0       2
  1799 ;;      Totals:         0       3
  1800 ;;Total ram usage:        3 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		i1_out_inst_LCD
  1806 ;;		i1_out_str_LCD
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           
  1811                           ;psect for function i1_out_LCD
  1812  0120                     i1_out_LCD:	
  1813                           
  1814                           ;incstack = 0
  1815                           ; Regs used in i1_out_LCD: [wreg+status,2+status,0]
  1816                           ;i1out_LCD@data stored from wreg
  1817  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0121  008E               	movwf	i1out_LCD@data
  1819  0122                     i1l883:	
  1820                           
  1821                           ;newfile.c: 136: void out_LCD(unsigned char data);newfile.c: 137: {;newfile.c: 139:     
      +                          PORTBbits.RB4 = (data & 0x01);
  1822  0122  080E               	movf	i1out_LCD@data,w
  1823  0123  3901               	andlw	1
  1824  0124  008C               	movwf	??i1_out_LCD
  1825  0125  0E8C               	swapf	??i1_out_LCD,f
  1826  0126  0806               	movf	6,w	;volatile
  1827  0127  060C               	xorwf	??i1_out_LCD,w
  1828  0128  39EF               	andlw	-17
  1829  0129  060C               	xorwf	??i1_out_LCD,w
  1830  012A  0086               	movwf	6	;volatile
  1831                           
  1832                           ;newfile.c: 140:     PORTBbits.RB5 = (data & 0x02) >> 1;
  1833  012B  080E               	movf	i1out_LCD@data,w
  1834  012C  008C               	movwf	??i1_out_LCD
  1835  012D  1003               	clrc
  1836  012E  0C0C               	rrf	??i1_out_LCD,w
  1837  012F  3901               	andlw	1
  1838  0130  008D               	movwf	??i1_out_LCD+1
  1839  0131  0E8D               	swapf	??i1_out_LCD+1,f
  1840  0132  0D8D               	rlf	??i1_out_LCD+1,f
  1841  0133  0806               	movf	6,w	;volatile
  1842  0134  060D               	xorwf	??i1_out_LCD+1,w
  1843  0135  39DF               	andlw	-33
  1844  0136  060D               	xorwf	??i1_out_LCD+1,w
  1845  0137  0086               	movwf	6	;volatile
  1846                           
  1847                           ;newfile.c: 141:     PORTBbits.RB6 = (data & 0x04) >> 2;
  1848  0138  080E               	movf	i1out_LCD@data,w
  1849  0139  008C               	movwf	??i1_out_LCD
  1850  013A  3002               	movlw	2
  1851  013B                     u30_25:	
  1852  013B  1003               	clrc
  1853  013C  0C8C               	rrf	??i1_out_LCD,f
  1854  013D  3EFF               	addlw	-1
  1855  013E  1D03               	skipz
  1856  013F  293B               	goto	u30_25
  1857  0140  080C               	movf	??i1_out_LCD,w
  1858  0141  3901               	andlw	1
  1859  0142  008D               	movwf	??i1_out_LCD+1
  1860  0143  0E8D               	swapf	??i1_out_LCD+1,f
  1861  0144  0D8D               	rlf	??i1_out_LCD+1,f
  1862  0145  0D8D               	rlf	??i1_out_LCD+1,f
  1863  0146  0806               	movf	6,w	;volatile
  1864  0147  060D               	xorwf	??i1_out_LCD+1,w
  1865  0148  39BF               	andlw	-65
  1866  0149  060D               	xorwf	??i1_out_LCD+1,w
  1867  014A  0086               	movwf	6	;volatile
  1868                           
  1869                           ;newfile.c: 142:     PORTBbits.RB7 = (data & 0x08) >> 3;
  1870  014B  080E               	movf	i1out_LCD@data,w
  1871  014C  008C               	movwf	??i1_out_LCD
  1872  014D  3003               	movlw	3
  1873  014E                     u31_25:	
  1874  014E  1003               	clrc
  1875  014F  0C8C               	rrf	??i1_out_LCD,f
  1876  0150  3EFF               	addlw	-1
  1877  0151  1D03               	skipz
  1878  0152  294E               	goto	u31_25
  1879  0153  080C               	movf	??i1_out_LCD,w
  1880  0154  3901               	andlw	1
  1881  0155  008D               	movwf	??i1_out_LCD+1
  1882  0156  0C8D               	rrf	??i1_out_LCD+1,f
  1883  0157  0C8D               	rrf	??i1_out_LCD+1,f
  1884  0158  0806               	movf	6,w	;volatile
  1885  0159  060D               	xorwf	??i1_out_LCD+1,w
  1886  015A  397F               	andlw	-129
  1887  015B  060D               	xorwf	??i1_out_LCD+1,w
  1888  015C  0086               	movwf	6	;volatile
  1889  015D                     i1l73:	
  1890  015D  0008               	return
  1891  015E                     __end_ofi1_out_LCD:	
  1892                           
  1893                           	psect	text16
  1894  015E                     __ptext16:	
  1895 ;; *************** function ___lwmod *****************
  1896 ;; Defined at:
  1897 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  divisor         2    8[BANK0 ] unsigned int 
  1900 ;;  dividend        2   10[BANK0 ] unsigned int 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  counter         1   13[BANK0 ] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  2    8[BANK0 ] unsigned int 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0
  1912 ;;      Params:         0       4
  1913 ;;      Locals:         0       1
  1914 ;;      Temps:          0       1
  1915 ;;      Totals:         0       6
  1916 ;;Total ram usage:        6 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_displayTime
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function ___lwmod
  1927  015E                     ___lwmod:	
  1928  015E                     i1l953:	
  1929                           ;incstack = 0
  1930                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1931                           
  1932  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1933  015F  0814               	movf	___lwmod@divisor,w
  1934  0160  0415               	iorwf	___lwmod@divisor+1,w
  1935  0161  1903               	btfsc	3,2
  1936  0162  2964               	goto	u41_21
  1937  0163  2965               	goto	u41_20
  1938  0164                     u41_21:	
  1939  0164  2994               	goto	i1l971
  1940  0165                     u41_20:	
  1941  0165                     i1l955:	
  1942  0165  0199               	clrf	___lwmod@counter
  1943  0166  0A99               	incf	___lwmod@counter,f
  1944  0167  2973               	goto	i1l961
  1945  0168                     i1l957:	
  1946  0168  3001               	movlw	1
  1947  0169                     u42_25:	
  1948  0169  1003               	clrc
  1949  016A  0D94               	rlf	___lwmod@divisor,f
  1950  016B  0D95               	rlf	___lwmod@divisor+1,f
  1951  016C  3EFF               	addlw	-1
  1952  016D  1D03               	skipz
  1953  016E  2969               	goto	u42_25
  1954  016F                     i1l959:	
  1955  016F  3001               	movlw	1
  1956  0170  0098               	movwf	??___lwmod
  1957  0171  0818               	movf	??___lwmod,w
  1958  0172  0799               	addwf	___lwmod@counter,f
  1959  0173                     i1l961:	
  1960  0173  1F95               	btfss	___lwmod@divisor+1,7
  1961  0174  2976               	goto	u43_21
  1962  0175  2977               	goto	u43_20
  1963  0176                     u43_21:	
  1964  0176  2968               	goto	i1l957
  1965  0177                     u43_20:	
  1966  0177                     i1l963:	
  1967  0177  0815               	movf	___lwmod@divisor+1,w
  1968  0178  0217               	subwf	___lwmod@dividend+1,w
  1969  0179  1D03               	skipz
  1970  017A  297D               	goto	u44_25
  1971  017B  0814               	movf	___lwmod@divisor,w
  1972  017C  0216               	subwf	___lwmod@dividend,w
  1973  017D                     u44_25:	
  1974  017D  1C03               	skipc
  1975  017E  2980               	goto	u44_21
  1976  017F  2981               	goto	u44_20
  1977  0180                     u44_21:	
  1978  0180  2987               	goto	i1l967
  1979  0181                     u44_20:	
  1980  0181                     i1l965:	
  1981  0181  0814               	movf	___lwmod@divisor,w
  1982  0182  0296               	subwf	___lwmod@dividend,f
  1983  0183  0815               	movf	___lwmod@divisor+1,w
  1984  0184  1C03               	skipc
  1985  0185  0397               	decf	___lwmod@dividend+1,f
  1986  0186  0297               	subwf	___lwmod@dividend+1,f
  1987  0187                     i1l967:	
  1988  0187  3001               	movlw	1
  1989  0188                     u45_25:	
  1990  0188  1003               	clrc
  1991  0189  0C95               	rrf	___lwmod@divisor+1,f
  1992  018A  0C94               	rrf	___lwmod@divisor,f
  1993  018B  3EFF               	addlw	-1
  1994  018C  1D03               	skipz
  1995  018D  2988               	goto	u45_25
  1996  018E                     i1l969:	
  1997  018E  3001               	movlw	1
  1998  018F  0299               	subwf	___lwmod@counter,f
  1999  0190  1D03               	btfss	3,2
  2000  0191  2993               	goto	u46_21
  2001  0192  2994               	goto	u46_20
  2002  0193                     u46_21:	
  2003  0193  2977               	goto	i1l963
  2004  0194                     u46_20:	
  2005  0194                     i1l971:	
  2006  0194  0817               	movf	___lwmod@dividend+1,w
  2007  0195  0095               	movwf	?___lwmod+1
  2008  0196  0816               	movf	___lwmod@dividend,w
  2009  0197  0094               	movwf	?___lwmod
  2010  0198                     i1l451:	
  2011  0198  0008               	return
  2012  0199                     __end_of___lwmod:	
  2013                           
  2014                           	psect	text17
  2015  005D                     __ptext17:	
  2016 ;; *************** function ___lwdiv *****************
  2017 ;; Defined at:
  2018 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  divisor         2    0[BANK0 ] unsigned int 
  2021 ;;  dividend        2    2[BANK0 ] unsigned int 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  quotient        2    5[BANK0 ] unsigned int 
  2024 ;;  counter         1    7[BANK0 ] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  2    0[BANK0 ] unsigned int 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0
  2034 ;;      Params:         0       4
  2035 ;;      Locals:         0       3
  2036 ;;      Temps:          0       1
  2037 ;;      Totals:         0       8
  2038 ;;Total ram usage:        8 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_displayTime
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function ___lwdiv
  2049  005D                     ___lwdiv:	
  2050  005D                     i1l927:	
  2051                           ;incstack = 0
  2052                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2053                           
  2054  005D  1283               	bcf	3,5	;RP0=0, select bank0
  2055  005E  0191               	clrf	___lwdiv@quotient
  2056  005F  0192               	clrf	___lwdiv@quotient+1
  2057  0060                     i1l929:	
  2058  0060  080C               	movf	___lwdiv@divisor,w
  2059  0061  040D               	iorwf	___lwdiv@divisor+1,w
  2060  0062  1903               	btfsc	3,2
  2061  0063  2865               	goto	u34_21
  2062  0064  2866               	goto	u34_20
  2063  0065                     u34_21:	
  2064  0065  289D               	goto	i1l949
  2065  0066                     u34_20:	
  2066  0066                     i1l931:	
  2067  0066  0193               	clrf	___lwdiv@counter
  2068  0067  0A93               	incf	___lwdiv@counter,f
  2069  0068  2874               	goto	i1l937
  2070  0069                     i1l933:	
  2071  0069  3001               	movlw	1
  2072  006A                     u35_25:	
  2073  006A  1003               	clrc
  2074  006B  0D8C               	rlf	___lwdiv@divisor,f
  2075  006C  0D8D               	rlf	___lwdiv@divisor+1,f
  2076  006D  3EFF               	addlw	-1
  2077  006E  1D03               	skipz
  2078  006F  286A               	goto	u35_25
  2079  0070                     i1l935:	
  2080  0070  3001               	movlw	1
  2081  0071  0090               	movwf	??___lwdiv
  2082  0072  0810               	movf	??___lwdiv,w
  2083  0073  0793               	addwf	___lwdiv@counter,f
  2084  0074                     i1l937:	
  2085  0074  1F8D               	btfss	___lwdiv@divisor+1,7
  2086  0075  2877               	goto	u36_21
  2087  0076  2878               	goto	u36_20
  2088  0077                     u36_21:	
  2089  0077  2869               	goto	i1l933
  2090  0078                     u36_20:	
  2091  0078                     i1l939:	
  2092  0078  3001               	movlw	1
  2093  0079                     u37_25:	
  2094  0079  1003               	clrc
  2095  007A  0D91               	rlf	___lwdiv@quotient,f
  2096  007B  0D92               	rlf	___lwdiv@quotient+1,f
  2097  007C  3EFF               	addlw	-1
  2098  007D  1D03               	skipz
  2099  007E  2879               	goto	u37_25
  2100  007F  080D               	movf	___lwdiv@divisor+1,w
  2101  0080  020F               	subwf	___lwdiv@dividend+1,w
  2102  0081  1D03               	skipz
  2103  0082  2885               	goto	u38_25
  2104  0083  080C               	movf	___lwdiv@divisor,w
  2105  0084  020E               	subwf	___lwdiv@dividend,w
  2106  0085                     u38_25:	
  2107  0085  1C03               	skipc
  2108  0086  2888               	goto	u38_21
  2109  0087  2889               	goto	u38_20
  2110  0088                     u38_21:	
  2111  0088  2890               	goto	i1l945
  2112  0089                     u38_20:	
  2113  0089                     i1l941:	
  2114  0089  080C               	movf	___lwdiv@divisor,w
  2115  008A  028E               	subwf	___lwdiv@dividend,f
  2116  008B  080D               	movf	___lwdiv@divisor+1,w
  2117  008C  1C03               	skipc
  2118  008D  038F               	decf	___lwdiv@dividend+1,f
  2119  008E  028F               	subwf	___lwdiv@dividend+1,f
  2120  008F                     i1l943:	
  2121  008F  1411               	bsf	___lwdiv@quotient,0
  2122  0090                     i1l945:	
  2123  0090  3001               	movlw	1
  2124  0091                     u39_25:	
  2125  0091  1003               	clrc
  2126  0092  0C8D               	rrf	___lwdiv@divisor+1,f
  2127  0093  0C8C               	rrf	___lwdiv@divisor,f
  2128  0094  3EFF               	addlw	-1
  2129  0095  1D03               	skipz
  2130  0096  2891               	goto	u39_25
  2131  0097                     i1l947:	
  2132  0097  3001               	movlw	1
  2133  0098  0293               	subwf	___lwdiv@counter,f
  2134  0099  1D03               	btfss	3,2
  2135  009A  289C               	goto	u40_21
  2136  009B  289D               	goto	u40_20
  2137  009C                     u40_21:	
  2138  009C  2878               	goto	i1l939
  2139  009D                     u40_20:	
  2140  009D                     i1l949:	
  2141  009D  0812               	movf	___lwdiv@quotient+1,w
  2142  009E  008D               	movwf	?___lwdiv+1
  2143  009F  0811               	movf	___lwdiv@quotient,w
  2144  00A0  008C               	movwf	?___lwdiv
  2145  00A1                     i1l441:	
  2146  00A1  0008               	return
  2147  00A2                     __end_of___lwdiv:	
  2148  004E                     btemp	set	78	;btemp
  2149  004E                     wtemp0	set	78


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     31      35

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_goto
    _init_LCD->_out_inst_LCD
    _LCD_wr_char->_out_str_LCD
    _out_str_LCD->_out_LCD
    _LCD_goto->_out_inst_LCD
    _out_inst_LCD->_out_LCD

Critical Paths under _ISR in BANK0

    _ISR->_displayTime
    _displayTime->___lwmod
    i1_LCD_wr_char->i1_out_str_LCD
    i1_out_str_LCD->i1_out_LCD
    i1_LCD_goto->i1_out_inst_LCD
    i1_out_inst_LCD->i1_out_LCD
    ___lwmod->___lwdiv

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     728
                                             30 BANK0      1     1      0
                           _LCD_goto
                        _LCD_wr_char
                           _init_LCD
                         _startTimer
                          _stopTimer
 ---------------------------------------------------------------------------------
 (1) _stopTimer                                            1     1      0       0
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _startTimer                                           1     1      0       0
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             4     4      0     156
                                             24 BANK0      4     4      0
                       _out_inst_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_wr_char                                          5     5      0     223
                                             23 BANK0      5     5      0
                        _out_str_LCD
 ---------------------------------------------------------------------------------
 (2) _out_str_LCD                                          2     2      0     110
                                             21 BANK0      2     2      0
                            _out_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_goto                                             6     5      1     349
                                             24 BANK0      6     5      1
                       _out_inst_LCD
 ---------------------------------------------------------------------------------
 (2) _out_inst_LCD                                         3     3      0     110
                                             21 BANK0      3     3      0
                            _out_LCD
 ---------------------------------------------------------------------------------
 (3) _out_LCD                                              3     3      0      88
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0    1401
                                             15 BANK0      3     3      0
                        _displayTime
 ---------------------------------------------------------------------------------
 (5) _displayTime                                          1     1      0    1401
                                             14 BANK0      1     1      0
                            ___lwdiv
                            ___lwmod
                         i1_LCD_goto
                      i1_LCD_wr_char
 ---------------------------------------------------------------------------------
 (6) i1_LCD_wr_char                                        5     5      0     223
                                              5 BANK0      5     5      0
                      i1_out_str_LCD
 ---------------------------------------------------------------------------------
 (7) i1_out_str_LCD                                        2     2      0     110
                                              3 BANK0      2     2      0
                          i1_out_LCD
 ---------------------------------------------------------------------------------
 (6) i1_LCD_goto                                           6     5      1     249
                                              6 BANK0      6     5      1
                     i1_out_inst_LCD
 ---------------------------------------------------------------------------------
 (7) i1_out_inst_LCD                                       3     3      0     110
                                              3 BANK0      3     3      0
                          i1_out_LCD
 ---------------------------------------------------------------------------------
 (8) i1_out_LCD                                            3     3      0      88
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     463
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_goto
     _out_inst_LCD
       _out_LCD
   _LCD_wr_char
     _out_str_LCD
       _out_LCD
   _init_LCD
     _out_inst_LCD
       _out_LCD
   _startTimer
   _stopTimer

 _ISR (ROOT)
   _displayTime
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     i1_LCD_goto
       i1_out_inst_LCD
         i1_out_LCD
     i1_LCD_wr_char
       i1_out_str_LCD
         i1_out_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42     1F      23       3       53.0%
ABS                  0      0      23       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0      23       6        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 07 11:34:06 2025

           _out_inst_LCD 026A             ?_displayTime 000C              __CFG_CP$OFF 0000  
                     l35 029B                       l45 020A                       l61 005C  
                     l70 02A8                       l38 02BC                       l64 024B  
                     l73 011F                       l67 027B              _out_str_LCD 029C  
                    l911 0270                      l913 0271                      l921 02A2  
                    l915 0272                      l907 026C                      l923 02A3  
                    l909 026E                      l925 02A4                      l917 029E  
                    l919 02A0                      l885 00E4                      l997 028E  
                    l999 02B6                      u500 01EF                      u325 00FD  
                    u501 01EE                      u335 0110                      u530 0040  
                    u515 01FF                      u531 003F                      _ISR 0199  
                    u525 0238                      u535 003C                      u607 0027  
                    u617 0057                      u570 01E0                      u627 02A6  
                    u571 01DF                      u580 01E6                      u637 0276  
                    u581 01E5                      u597 0018             __CFG_FOSC$HS 0000  
                   ?_ISR 000C                     l1001 02BB                     l1011 01FC  
                   l1003 01EA                     l1013 0206                     l1005 01EF  
                   l1021 0241                     l1007 01F2                     l1023 0246  
                   l1009 01F6                     l1025 0248                     l1017 0230  
                   l1041 0033                     l1019 0235                     l1043 0040  
                   l1035 0020                     l1027 0013                     l1045 0052  
                   l1037 0022                     l1029 001D                     l1039 002C  
                   l1071 01D0                     l1081 01DA                     l1073 01D2  
                   l1065 01C2                     l1083 01DB                     l1075 01D4  
                   l1067 01C8                     l1085 01E0                     l1077 01D6  
                   l1069 01C9                     l1087 01E1                     l1079 01D8  
                   i1l45 022D                     i1l70 02B5                     i1l64 0269  
                   i1l48 00E1                     i1l56 01BA                     i1l73 015D  
                   i1l67 028D                     _TMR0 0001              ?i1_LCD_goto 0012  
                   _main 01C2                     btemp 004E                     start 000B  
           ?_LCD_wr_char 000C                    ??_ISR 001B    __end_ofi1_out_str_LCD 02B6  
         i1_out_inst_LCD 027C         __end_of_LCD_goto 020B                    ?_main 000C  
          __CFG_WDTE$OFF 0000          __end_of___lwdiv 00A2                    i1l441 00A1  
        __end_of___lwmod 0199                    i1l451 0198                    i1l901 02AF  
                  i1l903 02B0                    i1l905 02B1                    i1l931 0066  
                  i1l941 0089                    i1l933 0069                    i1l943 008F  
                  i1l935 0070                    i1l927 005D                    i1l945 0090  
                  i1l937 0074                    i1l929 0060                    i1l961 0173  
                  i1l953 015E                    i1l947 0097                    i1l939 0078  
                  i1l963 0177                    i1l955 0165                    i1l971 0194  
                  i1l883 0122                    i1l891 0282                    i1l949 009D  
                  i1l965 0181                    i1l957 0168                    i1l893 0283  
                  i1l981 0219                    i1l967 0187                    i1l959 016F  
                  i1l895 0284                    i1l887 027E                    i1l983 021F  
                  i1l975 020D                    i1l991 025F                    i1l969 018E  
                  i1l889 0280                    i1l985 0229                    i1l977 0212  
                  i1l897 02AB                    i1l993 0264                    i1l979 0215  
                  i1l899 02AD                    i1l995 0266                    i1l987 024E  
                  i1l989 0253                    u30_25 013B                    u31_25 014E  
                  u40_20 009D                    u40_21 009C                    u41_20 0165  
                  u41_21 0164                    u34_20 0066                    u34_21 0065  
                  u42_25 0169                    u43_20 0177                    u43_21 0176  
                  _PORTA 0005                    _PORTB 0006                    u35_25 006A  
                  u36_20 0078                    u44_20 0181                    u36_21 0077  
                  u44_21 0180                    u44_25 017D                    u37_25 0079  
                  u45_25 0188                    u38_20 0089                    u46_20 0194  
                  u54_20 019D                    u38_21 0088                    u46_21 0193  
                  u54_21 019C                    u38_25 0085                    u47_20 0212  
                  u55_20 01A8                    u47_21 0211                    u55_21 01A7  
                  u39_25 0091                    u56_20 01B2                    u56_21 01B1  
                  u48_25 0222                    u64_27 02B3                    _TRISA 0085  
                  _TRISB 0086                    u49_25 0256                    u65_27 0288  
                  pclath 000A          __end_of_out_LCD 0120                    status 0003  
                  wtemp0 004E         LCD_wr_char@str_H 0027         LCD_wr_char@str_L 0025  
        __initialization 000C              LCD_goto@pos 0029             __end_of_main 01E8  
 __end_ofi1_out_inst_LCD 028E       __size_ofi1_out_LCD 003E                   ??_main 002A  
    __size_ofi1_LCD_goto 0023                   i1l1015 00A2                   i1l1051 01A1  
                 i1l1061 01B3                   i1l1053 01A3                   i1l1063 01B9  
                 i1l1055 01A8                   i1l1047 0199                   i1l1057 01AC  
                 i1l1049 019D                   i1l1059 01B2                   _INTCON 000B  
 i1out_inst_LCD@out_data 0011           __CFG_PWRTE$OFF 0000          ?i1_out_inst_LCD 000C  
              ??___lwdiv 0010         __end_of_init_LCD 005D                ??___lwmod 0018  
   __size_of_displayTime 0040                   saved_w 004E                ??_out_LCD 001E  
 __size_ofi1_LCD_wr_char 001E        __end_ofi1_out_LCD 015E  __end_of__initialization 0011  
              ?_LCD_goto 0024     out_inst_LCD@out_data 0023     __size_of_LCD_wr_char 001E  
           ?_out_str_LCD 000C                LCD_goto@x 0026                LCD_goto@y 0024  
             __pbssBANK0 002B             ??i1_LCD_goto 0013            i1_LCD_goto$85 0015  
     i1LCD_wr_char@str_H 0015       i1LCD_wr_char@str_L 0013             LCD_wr_char@c 0026  
             ??_LCD_goto 0025               __pmaintext 01C2            i1_LCD_wr_char 024C  
             __pintentry 0004       __end_ofi1_LCD_goto 022E    i1out_str_LCD@out_data 0010  
     __size_of_stopTimer 0007                ?_init_LCD 000C           i1LCD_wr_char@c 0014  
         ?i1_LCD_wr_char 000C                  ___lwdiv 005D                  ___lwmod 015E  
                __ptext1 02B6                  __ptext2 028E                  __ptext3 0013  
                __ptext4 022E                  __ptext5 029C                  __ptext6 01E8  
                __ptext7 026A                  __ptext8 00E2                  __ptext9 0199  
           __size_of_ISR 0029              out_LCD@data 0020                  _out_LCD 00E2  
   end_of_initialization 0011               ??_init_LCD 0024   __size_ofi1_out_str_LCD 000D  
       ??i1_out_inst_LCD 000F        __end_of_stopTimer 02BD                _PORTBbits 0006  
   __size_of_out_str_LCD 000D               _startTimer 028E          ??i1_LCD_wr_char 0011  
              i1_out_LCD 0120        __size_of_LCD_goto 0023            ?_out_inst_LCD 000C  
          ??_displayTime 001A            i1_out_str_LCD 02A9      start_initialization 000C  
            __end_of_ISR 01C2            ??_LCD_wr_char 0023               ?i1_out_LCD 000C  
         ??_out_inst_LCD 0021           ?i1_out_str_LCD 000C      __end_of_displayTime 00E2  
              ___latbits 0000            __pcstackBANK0 000C              ?_startTimer 000C  
      __size_of_init_LCD 004A         ___lwdiv@dividend 000E              i1LCD_goto@x 0014  
            i1LCD_goto@y 0012            i1LCD_goto@pos 0017                 ?___lwdiv 000C  
               ?___lwmod 0014      __end_of_LCD_wr_char 024C                 ?_out_LCD 000C  
       ___lwdiv@quotient 0011        interrupt_function 0004                 _LCD_goto 01E8  
            ??i1_out_LCD 000C          ??i1_out_str_LCD 000F              _displayTime 00A2  
    __size_of_startTimer 000E                _stopTimer 02B6     __end_of_out_inst_LCD 027C  
            _LCD_goto$85 0027                init_LCD@i 0026              _LCD_wr_char 022E  
          ??_out_str_LCD 0021         __size_of___lwdiv 0045         __size_of___lwmod 003B  
             ?_stopTimer 000C          ___lwdiv@divisor 000C          ___lwdiv@counter 0013  
               __ptext10 00A2                 __ptext11 024C                 __ptext12 02A9  
               __ptext13 020B                 __ptext14 027C                 __ptext15 0120  
               __ptext16 015E                 __ptext17 005D         __size_of_out_LCD 003E  
               _init_LCD 0013            __size_of_main 0026    __end_ofi1_LCD_wr_char 026A  
__size_ofi1_out_inst_LCD 0012      __end_of_out_str_LCD 02A9             _tenthSeconds 002B  
           ??_startTimer 001E      out_str_LCD@out_data 0022                 intlevel1 0000  
             i1_LCD_goto 020B         ___lwmod@dividend 0016             _timerRunning 002E  
          _overflowCount 002D       __end_of_startTimer 029C               _OPTION_REG 0081  
  __size_of_out_inst_LCD 0012          ___lwmod@divisor 0014              ??_stopTimer 001E  
        ___lwmod@counter 0019            i1out_LCD@data 000E  
