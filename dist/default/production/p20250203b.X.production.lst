

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 05 14:24:03 2025

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F84A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x4E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F84A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  0081                     	;# 
    63  0085                     	;# 
    64  0086                     	;# 
    65  0088                     	;# 
    66  0089                     	;# 
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  0088                     	;# 
    82  0089                     	;# 
    83  0006                     _PORTB	set	6
    84  0005                     _PORTA	set	5
    85  0006                     _PORTBbits	set	6
    86  0086                     _TRISB	set	134
    87  0085                     _TRISA	set	133
    88                           
    89                           	psect	strings
    90  0001                     __pstrings:	
    91  0001                     stringtab:	
    92  0001                     __stringtab:	
    93  0001                     stringcode:	
    94                           ;	String table - string pointers are 1 byte each
    95                           
    96  0001                     stringdir:	
    97  0001  3000               	movlw	high stringdir
    98  0002  008A               	movwf	10
    99  0003  0804               	movf	4,w
   100  0004  0A84               	incf	4,f
   101  0005  0782               	addwf	2,f
   102  0006                     __stringbase:	
   103  0006  3400               	retlw	0
   104  0007                     __end_of__stringtab:	
   105  0007                     STR_1:	
   106  0007  3454               	retlw	84	;'T'
   107  0008  3469               	retlw	105	;'i'
   108  0009  346D               	retlw	109	;'m'
   109  000A  3465               	retlw	101	;'e'
   110  000B  3472               	retlw	114	;'r'
   111  000C  3420               	retlw	32	;' '
   112  000D  3453               	retlw	83	;'S'
   113  000E  3474               	retlw	116	;'t'
   114  000F  3461               	retlw	97	;'a'
   115  0010  3472               	retlw	114	;'r'
   116  0011  3474               	retlw	116	;'t'
   117  0012  3421               	retlw	33	;'!'
   118  0013  3400               	retlw	0
   119  0014                     STR_2:	
   120  0014  3454               	retlw	84	;'T'
   121  0015  3469               	retlw	105	;'i'
   122  0016  346D               	retlw	109	;'m'
   123  0017  3465               	retlw	101	;'e'
   124  0018  343A               	retlw	58	;':'
   125  0019  3420               	retlw	32	;' '
   126  001A  3430               	retlw	48	;'0'
   127  001B  3420               	retlw	32	;' '
   128  001C  3473               	retlw	115	;'s'
   129  001D  3465               	retlw	101	;'e'
   130  001E  3463               	retlw	99	;'c'
   131  001F  3400               	retlw	0
   132                           
   133                           ; #config settings
   134  0000                     
   135                           	psect	cinit
   136  03FE                     start_initialization:	
   137  03FE                     __initialization:	
   138  03FE                     end_of_initialization:	
   139                           ;End of C runtime variable initialization code
   140                           
   141  03FE                     __end_of__initialization:	
   142  03FE  0183               	clrf	3
   143  03FF  2B08               	ljmp	_main	;jump to C main() function
   144                           
   145                           	psect	cstackCOMMON
   146  0000                     __pcstackCOMMON:	
   147  0000                     ??_main:	
   148                           
   149                           	psect	cstackBANK0
   150  000C                     __pcstackBANK0:	
   151                           ; 1 bytes @ 0x0
   152                           
   153  000C                     ?_out_inst_LCD:	
   154  000C                     ?_LCD_wr_char:	
   155                           ; 1 bytes @ 0x0
   156                           
   157  000C                     ?_out_str_LCD:	
   158                           ; 1 bytes @ 0x0
   159                           
   160  000C                     ?_out_LCD:	
   161                           ; 1 bytes @ 0x0
   162                           
   163  000C                     ??_out_LCD:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  000C                     ?_init_LCD:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  000C                     ?_main:	
   170                           ; 1 bytes @ 0x0
   171                           
   172                           
   173                           ; 1 bytes @ 0x0
   174  000C                     	ds	1
   175  000D                     out_LCD@d:	
   176                           
   177                           ; 4 bytes @ 0x1
   178  000D                     	ds	4
   179  0011                     out_LCD@data:	
   180                           
   181                           ; 1 bytes @ 0x5
   182  0011                     	ds	1
   183  0012                     out_LCD@i:	
   184                           
   185                           ; 1 bytes @ 0x6
   186  0012                     	ds	1
   187  0013                     ??_out_inst_LCD:	
   188  0013                     ??_out_str_LCD:	
   189                           ; 1 bytes @ 0x7
   190                           
   191                           
   192                           ; 1 bytes @ 0x7
   193  0013                     	ds	1
   194  0014                     out_str_LCD@out_data:	
   195                           
   196                           ; 1 bytes @ 0x8
   197  0014                     	ds	1
   198  0015                     ??_LCD_wr_char:	
   199  0015                     out_inst_LCD@out_data:	
   200                           ; 1 bytes @ 0x9
   201                           
   202                           
   203                           ; 1 bytes @ 0x9
   204  0015                     	ds	1
   205  0016                     ??_init_LCD:	
   206                           
   207                           ; 1 bytes @ 0xA
   208  0016                     	ds	1
   209  0017                     LCD_wr_char@str_L:	
   210                           
   211                           ; 1 bytes @ 0xB
   212  0017                     	ds	1
   213  0018                     LCD_wr_char@c:	
   214  0018                     init_LCD@i:	
   215                           ; 1 bytes @ 0xC
   216                           
   217                           
   218                           ; 2 bytes @ 0xC
   219  0018                     	ds	1
   220  0019                     LCD_wr_char@str_H:	
   221                           
   222                           ; 1 bytes @ 0xD
   223  0019                     	ds	1
   224  001A                     ?_LCD_wr:	
   225  001A                     LCD_wr@x:	
   226                           ; 1 bytes @ 0xE
   227                           
   228                           
   229                           ; 1 bytes @ 0xE
   230  001A                     	ds	1
   231  001B                     LCD_wr@y:	
   232                           
   233                           ; 1 bytes @ 0xF
   234  001B                     	ds	1
   235  001C                     ??_LCD_wr:	
   236                           
   237                           ; 1 bytes @ 0x10
   238  001C                     	ds	2
   239  001E                     _LCD_wr$82:	
   240                           
   241                           ; 2 bytes @ 0x12
   242  001E                     	ds	2
   243  0020                     LCD_wr@posiL:	
   244                           
   245                           ; 1 bytes @ 0x14
   246  0020                     	ds	1
   247  0021                     LCD_wr@posi:	
   248                           
   249                           ; 1 bytes @ 0x15
   250  0021                     	ds	1
   251  0022                     LCD_wr@posiH:	
   252                           
   253                           ; 1 bytes @ 0x16
   254  0022                     	ds	1
   255  0023                     LCD_wr@str_p:	
   256                           
   257                           ; 1 bytes @ 0x17
   258  0023                     	ds	1
   259                           
   260                           	psect	maintext
   261  0308                     __pmaintext:	
   262 ;;
   263 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   264 ;;
   265 ;; *************** function _main *****************
   266 ;; Defined at:
   267 ;;		line 131 in file "newfile.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;		None
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   276 ;; Tracked objects:
   277 ;;		On entry : B00/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMMON   BANK0
   281 ;;      Params:         0       0
   282 ;;      Locals:         0       0
   283 ;;      Temps:          0       0
   284 ;;      Totals:         0       0
   285 ;;Total ram usage:        0 bytes
   286 ;; Hardware stack levels required when called:    4
   287 ;; This function calls:
   288 ;;		_LCD_wr
   289 ;;		_init_LCD
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           
   296                           ;psect for function _main
   297  0308                     _main:	
   298  0308                     l841:	
   299                           ;incstack = 0
   300                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   301                           
   302                           
   303                           ;newfile.c: 132:     TRISA = 0b00000000;
   304  0308  1683               	bsf	3,5	;RP0=1, select bank1
   305  0309  0185               	clrf	5	;volatile
   306                           
   307                           ;newfile.c: 133:     TRISB = 0b00000000;
   308  030A  0186               	clrf	6	;volatile
   309                           
   310                           ;newfile.c: 134:     PORTA = 0x00;
   311  030B  1283               	bcf	3,5	;RP0=0, select bank0
   312  030C  0185               	clrf	5	;volatile
   313                           
   314                           ;newfile.c: 135:     PORTB = 0x00;
   315  030D  0186               	clrf	6	;volatile
   316  030E                     l843:	
   317                           
   318                           ;newfile.c: 137:     init_LCD();
   319  030E  2367               	fcall	_init_LCD
   320  030F                     l845:	
   321                           
   322                           ;newfile.c: 139:     LCD_wr("Timer Start!",0,0);
   323  030F  1283               	bcf	3,5	;RP0=0, select bank0
   324  0310  019A               	clrf	LCD_wr@x
   325  0311  019B               	clrf	LCD_wr@y
   326  0312  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   327  0313  23B1               	fcall	_LCD_wr
   328  0314                     l847:	
   329                           
   330                           ;newfile.c: 140:     LCD_wr("Time: 0 sec",1,0);
   331  0314  1283               	bcf	3,5	;RP0=0, select bank0
   332  0315  019A               	clrf	LCD_wr@x
   333  0316  0A9A               	incf	LCD_wr@x,f
   334  0317  019B               	clrf	LCD_wr@y
   335  0318  300E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   336  0319  23B1               	fcall	_LCD_wr
   337  031A                     l54:	
   338                           ;newfile.c: 142:     while(1) {
   339                           
   340  031A                     l55:	
   341                           ;newfile.c: 144:     }
   342                           
   343  031A  2B1A               	goto	l54
   344  031B  2800               	ljmp	start
   345  031C                     __end_of_main:	
   346                           
   347                           	psect	text1
   348  0367                     __ptext1:	
   349 ;; *************** function _init_LCD *****************
   350 ;; Defined at:
   351 ;;		line 33 in file "newfile.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;  i               2   12[BANK0 ] int 
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0
   365 ;;      Params:         0       0
   366 ;;      Locals:         0       2
   367 ;;      Temps:          0       2
   368 ;;      Totals:         0       4
   369 ;;Total ram usage:        4 bytes
   370 ;; Hardware stack levels used:    1
   371 ;; Hardware stack levels required when called:    2
   372 ;; This function calls:
   373 ;;		_out_inst_LCD
   374 ;; This function is called by:
   375 ;;		_main
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           
   380                           ;psect for function _init_LCD
   381  0367                     _init_LCD:	
   382  0367                     l795:	
   383                           ;incstack = 0
   384                           ; Regs used in _init_LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   385                           
   386                           
   387                           ;newfile.c: 35:  int i;;newfile.c: 37:     _delay((unsigned long)((20)*(10000000/4000.0)
      +                          ));
   388  0367  3041               	movlw	65
   389  0368  1283               	bcf	3,5	;RP0=0, select bank0
   390  0369  0097               	movwf	??_init_LCD+1
   391  036A  30EE               	movlw	238
   392  036B  0096               	movwf	??_init_LCD
   393  036C                     u137:	
   394  036C  0B96               	decfsz	??_init_LCD,f
   395  036D  2B6C               	goto	u137
   396  036E  0B97               	decfsz	??_init_LCD+1,f
   397  036F  2B6C               	goto	u137
   398  0370  0000               	nop
   399  0371                     l797:	
   400                           
   401                           ;newfile.c: 39:  for (i = 0; i < 3; i++) {
   402  0371  1283               	bcf	3,5	;RP0=0, select bank0
   403  0372  0198               	clrf	init_LCD@i
   404  0373  0199               	clrf	init_LCD@i+1
   405  0374                     l803:	
   406                           
   407                           ;newfile.c: 40:   out_inst_LCD(0x03);
   408  0374  3003               	movlw	3
   409  0375  22F6               	fcall	_out_inst_LCD
   410  0376                     l805:	
   411                           
   412                           ;newfile.c: 41:   _delay((unsigned long)((5)*(10000000/4000.0)));
   413  0376  3011               	movlw	17
   414  0377  1283               	bcf	3,5	;RP0=0, select bank0
   415  0378  0097               	movwf	??_init_LCD+1
   416  0379  303A               	movlw	58
   417  037A  0096               	movwf	??_init_LCD
   418  037B                     u147:	
   419  037B  0B96               	decfsz	??_init_LCD,f
   420  037C  2B7B               	goto	u147
   421  037D  0B97               	decfsz	??_init_LCD+1,f
   422  037E  2B7B               	goto	u147
   423  037F  0000               	nop
   424  0380                     l807:	
   425                           
   426                           ;newfile.c: 42:  }
   427  0380  3001               	movlw	1
   428  0381  1283               	bcf	3,5	;RP0=0, select bank0
   429  0382  0798               	addwf	init_LCD@i,f
   430  0383  1803               	skipnc
   431  0384  0A99               	incf	init_LCD@i+1,f
   432  0385  3000               	movlw	0
   433  0386  0799               	addwf	init_LCD@i+1,f
   434  0387                     l809:	
   435  0387  0819               	movf	init_LCD@i+1,w
   436  0388  3A80               	xorlw	128
   437  0389  00CF               	movwf	btemp+1
   438  038A  3080               	movlw	128
   439  038B  024F               	subwf	btemp+1,w
   440  038C  1D03               	skipz
   441  038D  2B90               	goto	u95
   442  038E  3003               	movlw	3
   443  038F  0218               	subwf	init_LCD@i,w
   444  0390                     u95:	
   445  0390  1C03               	skipc
   446  0391  2B93               	goto	u91
   447  0392  2B94               	goto	u90
   448  0393                     u91:	
   449  0393  2B74               	goto	l803
   450  0394                     u90:	
   451  0394                     l811:	
   452                           
   453                           ;newfile.c: 44:  out_inst_LCD(0x02);
   454  0394  3002               	movlw	2
   455  0395  22F6               	fcall	_out_inst_LCD
   456                           
   457                           ;newfile.c: 45:  out_inst_LCD(0x02);
   458  0396  3002               	movlw	2
   459  0397  22F6               	fcall	_out_inst_LCD
   460                           
   461                           ;newfile.c: 46:  out_inst_LCD(0x08);
   462  0398  3008               	movlw	8
   463  0399  22F6               	fcall	_out_inst_LCD
   464                           
   465                           ;newfile.c: 47:  out_inst_LCD(0x00);
   466  039A  3000               	movlw	0
   467  039B  22F6               	fcall	_out_inst_LCD
   468                           
   469                           ;newfile.c: 48:  out_inst_LCD(0x0c);
   470  039C  300C               	movlw	12
   471  039D  22F6               	fcall	_out_inst_LCD
   472                           
   473                           ;newfile.c: 50:  out_inst_LCD(0x00);
   474  039E  3000               	movlw	0
   475  039F  22F6               	fcall	_out_inst_LCD
   476                           
   477                           ;newfile.c: 51:  out_inst_LCD(0x01);
   478  03A0  3001               	movlw	1
   479  03A1  22F6               	fcall	_out_inst_LCD
   480                           
   481                           ;newfile.c: 52:  out_inst_LCD(0x00);
   482  03A2  3000               	movlw	0
   483  03A3  22F6               	fcall	_out_inst_LCD
   484                           
   485                           ;newfile.c: 53:  out_inst_LCD(0x06);
   486  03A4  3006               	movlw	6
   487  03A5  22F6               	fcall	_out_inst_LCD
   488  03A6                     l813:	
   489                           
   490                           ;newfile.c: 55:     _delay((unsigned long)((20)*(10000000/4000.0)));
   491  03A6  3041               	movlw	65
   492  03A7  1283               	bcf	3,5	;RP0=0, select bank0
   493  03A8  0097               	movwf	??_init_LCD+1
   494  03A9  30EE               	movlw	238
   495  03AA  0096               	movwf	??_init_LCD
   496  03AB                     u157:	
   497  03AB  0B96               	decfsz	??_init_LCD,f
   498  03AC  2BAB               	goto	u157
   499  03AD  0B97               	decfsz	??_init_LCD+1,f
   500  03AE  2BAB               	goto	u157
   501  03AF  0000               	nop
   502  03B0                     l25:	
   503  03B0  0008               	return
   504  03B1                     __end_of_init_LCD:	
   505                           
   506                           	psect	text2
   507  03B1                     __ptext2:	
   508 ;; *************** function _LCD_wr *****************
   509 ;; Defined at:
   510 ;;		line 59 in file "newfile.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;  str_p           1    wreg     PTR unsigned char 
   513 ;;		 -> STR_2(12), STR_1(13), 
   514 ;;  x               1   14[BANK0 ] unsigned char 
   515 ;;  y               1   15[BANK0 ] unsigned char 
   516 ;; Auto vars:     Size  Location     Type
   517 ;;  str_p           1   23[BANK0 ] PTR unsigned char 
   518 ;;		 -> STR_2(12), STR_1(13), 
   519 ;;  posiH           1   22[BANK0 ] unsigned char 
   520 ;;  posi            1   21[BANK0 ] unsigned char 
   521 ;;  posiL           1   20[BANK0 ] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0
   531 ;;      Params:         0       2
   532 ;;      Locals:         0       6
   533 ;;      Temps:          0       2
   534 ;;      Totals:         0      10
   535 ;;Total ram usage:       10 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; Hardware stack levels required when called:    3
   538 ;; This function calls:
   539 ;;		_LCD_wr_char
   540 ;;		_out_inst_LCD
   541 ;; This function is called by:
   542 ;;		_main
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           
   547                           ;psect for function _LCD_wr
   548  03B1                     _LCD_wr:	
   549                           
   550                           ;incstack = 0
   551                           ; Regs used in _LCD_wr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   552                           ;LCD_wr@str_p stored from wreg
   553  03B1  1283               	bcf	3,5	;RP0=0, select bank0
   554  03B2  00A3               	movwf	LCD_wr@str_p
   555  03B3                     l815:	
   556                           
   557                           ;newfile.c: 59: void LCD_wr(char *str_p, unsigned char x, unsigned char y);newfile.c: 60
      +                          : {;newfile.c: 61:  unsigned char posi = 0x80;
   558  03B3  3080               	movlw	128
   559  03B4  009C               	movwf	??_LCD_wr
   560  03B5  081C               	movf	??_LCD_wr,w
   561  03B6  00A1               	movwf	LCD_wr@posi
   562  03B7                     l817:	
   563                           
   564                           ;newfile.c: 62:  unsigned char posiH, posiL;;newfile.c: 64:  posi |= (x ? 0x40+y : 0x00+
      +                          y);
   565  03B7  081A               	movf	LCD_wr@x,w
   566  03B8  1D03               	btfss	3,2
   567  03B9  2BBB               	goto	u101
   568  03BA  2BBC               	goto	u100
   569  03BB                     u101:	
   570  03BB  2BC4               	goto	l821
   571  03BC                     u100:	
   572  03BC                     l819:	
   573  03BC  081B               	movf	LCD_wr@y,w
   574  03BD  009C               	movwf	??_LCD_wr
   575  03BE  019D               	clrf	??_LCD_wr+1
   576  03BF  081C               	movf	??_LCD_wr,w
   577  03C0  009E               	movwf	_LCD_wr$82
   578  03C1  081D               	movf	??_LCD_wr+1,w
   579  03C2  009F               	movwf	_LCD_wr$82+1
   580  03C3  2BCB               	goto	l823
   581  03C4                     l821:	
   582  03C4  081B               	movf	LCD_wr@y,w
   583  03C5  3E40               	addlw	64
   584  03C6  009E               	movwf	_LCD_wr$82
   585  03C7  3000               	movlw	0
   586  03C8  1803               	skipnc
   587  03C9  3001               	movlw	1
   588  03CA  009F               	movwf	_LCD_wr$82+1
   589  03CB                     l823:	
   590  03CB  081E               	movf	_LCD_wr$82,w
   591  03CC  009C               	movwf	??_LCD_wr
   592  03CD  081C               	movf	??_LCD_wr,w
   593  03CE  04A1               	iorwf	LCD_wr@posi,f
   594  03CF                     l825:	
   595                           
   596                           ;newfile.c: 65:  posiH = posi & 0xf0;
   597  03CF  0821               	movf	LCD_wr@posi,w
   598  03D0  39F0               	andlw	240
   599  03D1  009C               	movwf	??_LCD_wr
   600  03D2  081C               	movf	??_LCD_wr,w
   601  03D3  00A2               	movwf	LCD_wr@posiH
   602  03D4                     l827:	
   603                           
   604                           ;newfile.c: 66:  posiH = posiH >> 4;
   605  03D4  0822               	movf	LCD_wr@posiH,w
   606  03D5  009C               	movwf	??_LCD_wr
   607  03D6  3004               	movlw	4
   608  03D7                     u115:	
   609  03D7  1003               	clrc
   610  03D8  0C9C               	rrf	??_LCD_wr,f
   611  03D9  3EFF               	addlw	-1
   612  03DA  1D03               	skipz
   613  03DB  2BD7               	goto	u115
   614  03DC  081C               	movf	??_LCD_wr,w
   615  03DD  009D               	movwf	??_LCD_wr+1
   616  03DE  081D               	movf	??_LCD_wr+1,w
   617  03DF  00A2               	movwf	LCD_wr@posiH
   618  03E0                     l829:	
   619                           
   620                           ;newfile.c: 67:  posiL = posi & 0x0f;
   621  03E0  0821               	movf	LCD_wr@posi,w
   622  03E1  390F               	andlw	15
   623  03E2  009C               	movwf	??_LCD_wr
   624  03E3  081C               	movf	??_LCD_wr,w
   625  03E4  00A0               	movwf	LCD_wr@posiL
   626  03E5                     l831:	
   627                           
   628                           ;newfile.c: 69:  out_inst_LCD(posiH);
   629  03E5  0822               	movf	LCD_wr@posiH,w
   630  03E6  22F6               	fcall	_out_inst_LCD
   631  03E7                     l833:	
   632                           
   633                           ;newfile.c: 70:  out_inst_LCD(posiL);
   634  03E7  1283               	bcf	3,5	;RP0=0, select bank0
   635  03E8  0820               	movf	LCD_wr@posiL,w
   636  03E9  22F6               	fcall	_out_inst_LCD
   637                           
   638                           ;newfile.c: 73:  while(*str_p)
   639  03EA  2BF4               	goto	l839
   640  03EB                     l835:	
   641                           
   642                           ;newfile.c: 74:  {;newfile.c: 75:   LCD_wr_char(*str_p);
   643  03EB  0823               	movf	LCD_wr@str_p,w
   644  03EC  0084               	movwf	4
   645  03ED  2001               	fcall	stringdir
   646  03EE  231C               	fcall	_LCD_wr_char
   647  03EF                     l837:	
   648                           
   649                           ;newfile.c: 76:   str_p++;
   650  03EF  3001               	movlw	1
   651  03F0  1283               	bcf	3,5	;RP0=0, select bank0
   652  03F1  009C               	movwf	??_LCD_wr
   653  03F2  081C               	movf	??_LCD_wr,w
   654  03F3  07A3               	addwf	LCD_wr@str_p,f
   655  03F4                     l839:	
   656                           
   657                           ;newfile.c: 73:  while(*str_p)
   658  03F4  1283               	bcf	3,5	;RP0=0, select bank0
   659  03F5  0823               	movf	LCD_wr@str_p,w
   660  03F6  0084               	movwf	4
   661  03F7  2001               	fcall	stringdir
   662  03F8  3A00               	xorlw	0
   663  03F9  1D03               	skipz
   664  03FA  2BFC               	goto	u121
   665  03FB  2BFD               	goto	u120
   666  03FC                     u121:	
   667  03FC  2BEB               	goto	l835
   668  03FD                     u120:	
   669  03FD                     l35:	
   670  03FD  0008               	return
   671  03FE                     __end_of_LCD_wr:	
   672                           
   673                           	psect	text3
   674  02F6                     __ptext3:	
   675 ;; *************** function _out_inst_LCD *****************
   676 ;; Defined at:
   677 ;;		line 94 in file "newfile.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  out_data        1    wreg     unsigned char 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  out_data        1    9[BANK0 ] unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0
   691 ;;      Params:         0       0
   692 ;;      Locals:         0       1
   693 ;;      Temps:          0       2
   694 ;;      Totals:         0       3
   695 ;;Total ram usage:        3 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    1
   698 ;; This function calls:
   699 ;;		_out_LCD
   700 ;; This function is called by:
   701 ;;		_init_LCD
   702 ;;		_LCD_wr
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           
   707                           ;psect for function _out_inst_LCD
   708  02F6                     _out_inst_LCD:	
   709                           
   710                           ;incstack = 0
   711                           ; Regs used in _out_inst_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   712                           ;out_inst_LCD@out_data stored from wreg
   713  02F6  1283               	bcf	3,5	;RP0=0, select bank0
   714  02F7  0095               	movwf	out_inst_LCD@out_data
   715  02F8                     l775:	
   716                           
   717                           ;newfile.c: 94: void out_inst_LCD(unsigned char out_data);newfile.c: 95: {;newfile.c: 96
      +                          :  out_LCD(out_data);
   718  02F8  0815               	movf	out_inst_LCD@out_data,w
   719  02F9  233A               	fcall	_out_LCD
   720  02FA                     l777:	
   721                           
   722                           ;newfile.c: 97:  PORTBbits.RB0 = 0; PORTBbits.RB1 = 1;
   723  02FA  1283               	bcf	3,5	;RP0=0, select bank0
   724  02FB  1006               	bcf	6,0	;volatile
   725  02FC                     l779:	
   726  02FC  1486               	bsf	6,1	;volatile
   727  02FD                     l781:	
   728                           
   729                           ;newfile.c: 98:  PORTBbits.RB1 = 0;
   730  02FD  1086               	bcf	6,1	;volatile
   731  02FE                     l783:	
   732                           
   733                           ;newfile.c: 99:  _delay((unsigned long)((5)*(10000000/4000.0)));
   734  02FE  3011               	movlw	17
   735  02FF  0094               	movwf	??_out_inst_LCD+1
   736  0300  303A               	movlw	58
   737  0301  0093               	movwf	??_out_inst_LCD
   738  0302                     u167:	
   739  0302  0B93               	decfsz	??_out_inst_LCD,f
   740  0303  2B02               	goto	u167
   741  0304  0B94               	decfsz	??_out_inst_LCD+1,f
   742  0305  2B02               	goto	u167
   743  0306  0000               	nop
   744  0307                     l41:	
   745  0307  0008               	return
   746  0308                     __end_of_out_inst_LCD:	
   747                           
   748                           	psect	text4
   749  031C                     __ptext4:	
   750 ;; *************** function _LCD_wr_char *****************
   751 ;; Defined at:
   752 ;;		line 81 in file "newfile.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;  c               1    wreg     unsigned char 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  c               1   12[BANK0 ] unsigned char 
   757 ;;  str_H           1   13[BANK0 ] unsigned char 
   758 ;;  str_L           1   11[BANK0 ] unsigned char 
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0
   768 ;;      Params:         0       0
   769 ;;      Locals:         0       3
   770 ;;      Temps:          0       2
   771 ;;      Totals:         0       5
   772 ;;Total ram usage:        5 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; Hardware stack levels required when called:    2
   775 ;; This function calls:
   776 ;;		_out_str_LCD
   777 ;; This function is called by:
   778 ;;		_LCD_wr
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _LCD_wr_char
   784  031C                     _LCD_wr_char:	
   785                           
   786                           ;incstack = 0
   787                           ; Regs used in _LCD_wr_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   788                           ;LCD_wr_char@c stored from wreg
   789  031C  1283               	bcf	3,5	;RP0=0, select bank0
   790  031D  0098               	movwf	LCD_wr_char@c
   791  031E                     l785:	
   792                           
   793                           ;newfile.c: 81: void LCD_wr_char(char c);newfile.c: 82: {;newfile.c: 83:  char str_H, st
      +                          r_L;;newfile.c: 85:  str_H = c & 0xf0;
   794  031E  0818               	movf	LCD_wr_char@c,w
   795  031F  39F0               	andlw	240
   796  0320  0095               	movwf	??_LCD_wr_char
   797  0321  0815               	movf	??_LCD_wr_char,w
   798  0322  0099               	movwf	LCD_wr_char@str_H
   799  0323                     l787:	
   800                           
   801                           ;newfile.c: 86:  str_H = str_H >> 4;
   802  0323  0819               	movf	LCD_wr_char@str_H,w
   803  0324  0095               	movwf	??_LCD_wr_char
   804  0325  3004               	movlw	4
   805  0326                     u85:	
   806  0326  1003               	clrc
   807  0327  0C95               	rrf	??_LCD_wr_char,f
   808  0328  3EFF               	addlw	-1
   809  0329  1D03               	skipz
   810  032A  2B26               	goto	u85
   811  032B  0815               	movf	??_LCD_wr_char,w
   812  032C  0096               	movwf	??_LCD_wr_char+1
   813  032D  0816               	movf	??_LCD_wr_char+1,w
   814  032E  0099               	movwf	LCD_wr_char@str_H
   815  032F                     l789:	
   816                           
   817                           ;newfile.c: 87:  str_L = c & 0x0f;
   818  032F  0818               	movf	LCD_wr_char@c,w
   819  0330  390F               	andlw	15
   820  0331  0095               	movwf	??_LCD_wr_char
   821  0332  0815               	movf	??_LCD_wr_char,w
   822  0333  0097               	movwf	LCD_wr_char@str_L
   823  0334                     l791:	
   824                           
   825                           ;newfile.c: 89:  out_str_LCD(str_H);
   826  0334  0819               	movf	LCD_wr_char@str_H,w
   827  0335  22E9               	fcall	_out_str_LCD
   828  0336                     l793:	
   829                           
   830                           ;newfile.c: 90:  out_str_LCD(str_L);
   831  0336  1283               	bcf	3,5	;RP0=0, select bank0
   832  0337  0817               	movf	LCD_wr_char@str_L,w
   833  0338  22E9               	fcall	_out_str_LCD
   834  0339                     l38:	
   835  0339  0008               	return
   836  033A                     __end_of_LCD_wr_char:	
   837                           
   838                           	psect	text5
   839  02E9                     __ptext5:	
   840 ;; *************** function _out_str_LCD *****************
   841 ;; Defined at:
   842 ;;		line 103 in file "newfile.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  out_data        1    wreg     unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  out_data        1    8[BANK0 ] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMMON   BANK0
   856 ;;      Params:         0       0
   857 ;;      Locals:         0       1
   858 ;;      Temps:          0       1
   859 ;;      Totals:         0       2
   860 ;;Total ram usage:        2 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    1
   863 ;; This function calls:
   864 ;;		_out_LCD
   865 ;; This function is called by:
   866 ;;		_LCD_wr_char
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           
   871                           ;psect for function _out_str_LCD
   872  02E9                     _out_str_LCD:	
   873                           
   874                           ;incstack = 0
   875                           ; Regs used in _out_str_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   876                           ;out_str_LCD@out_data stored from wreg
   877  02E9  1283               	bcf	3,5	;RP0=0, select bank0
   878  02EA  0094               	movwf	out_str_LCD@out_data
   879  02EB                     l765:	
   880                           
   881                           ;newfile.c: 103: void out_str_LCD(unsigned char out_data);newfile.c: 104: {;newfile.c: 1
      +                          05:  out_LCD(out_data);
   882  02EB  0814               	movf	out_str_LCD@out_data,w
   883  02EC  233A               	fcall	_out_LCD
   884  02ED                     l767:	
   885                           
   886                           ;newfile.c: 106:  PORTBbits.RB0 = 1; PORTBbits.RB1 = 1;
   887  02ED  1283               	bcf	3,5	;RP0=0, select bank0
   888  02EE  1406               	bsf	6,0	;volatile
   889  02EF                     l769:	
   890  02EF  1486               	bsf	6,1	;volatile
   891  02F0                     l771:	
   892                           
   893                           ;newfile.c: 107:  PORTBbits.RB1 = 0;
   894  02F0  1086               	bcf	6,1	;volatile
   895  02F1                     l773:	
   896                           
   897                           ;newfile.c: 108:  _delay((unsigned long)((100)*(10000000/4000000.0)));
   898  02F1  3053               	movlw	83
   899  02F2  0093               	movwf	??_out_str_LCD
   900  02F3                     u177:	
   901  02F3  0B93               	decfsz	??_out_str_LCD,f
   902  02F4  2AF3               	goto	u177
   903  02F5                     l44:	
   904  02F5  0008               	return
   905  02F6                     __end_of_out_str_LCD:	
   906                           
   907                           	psect	text6
   908  033A                     __ptext6:	
   909 ;; *************** function _out_LCD *****************
   910 ;; Defined at:
   911 ;;		line 112 in file "newfile.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  data            1    wreg     unsigned char 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  data            1    5[BANK0 ] unsigned char 
   916 ;;  d               4    1[BANK0 ] unsigned char [4]
   917 ;;  i               1    6[BANK0 ] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMMON   BANK0
   927 ;;      Params:         0       0
   928 ;;      Locals:         0       6
   929 ;;      Temps:          0       1
   930 ;;      Totals:         0       7
   931 ;;Total ram usage:        7 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_out_inst_LCD
   937 ;;		_out_str_LCD
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           
   942                           ;psect for function _out_LCD
   943  033A                     _out_LCD:	
   944                           
   945                           ;incstack = 0
   946                           ; Regs used in _out_LCD: [wreg-fsr0h+status,2+status,0]
   947                           ;out_LCD@data stored from wreg
   948  033A  1283               	bcf	3,5	;RP0=0, select bank0
   949  033B  0091               	movwf	out_LCD@data
   950  033C                     l749:	
   951                           
   952                           ;newfile.c: 112: void out_LCD(unsigned char data);newfile.c: 113: {;newfile.c: 114:  uns
      +                          igned char d[4];;newfile.c: 115:  unsigned char i;;newfile.c: 118:  for (i = 0; i < 4; i
      +                          ++){
   953  033C  0192               	clrf	out_LCD@i
   954  033D                     l755:	
   955                           
   956                           ;newfile.c: 119:   d[i] = data & 0x01;
   957  033D  0811               	movf	out_LCD@data,w
   958  033E  3901               	andlw	1
   959  033F  008C               	movwf	??_out_LCD
   960  0340  0812               	movf	out_LCD@i,w
   961  0341  3E0D               	addlw	(low (out_LCD@d| 0))& (0+255)
   962  0342  0084               	movwf	4
   963  0343  080C               	movf	??_out_LCD,w
   964  0344  1383               	bcf	3,7	;select IRP bank0
   965  0345  0080               	movwf	0
   966  0346                     l757:	
   967                           
   968                           ;newfile.c: 120:   data >>= 1;
   969  0346  1003               	clrc
   970  0347  0C91               	rrf	out_LCD@data,f
   971  0348                     l759:	
   972                           
   973                           ;newfile.c: 121:  }
   974  0348  3001               	movlw	1
   975  0349  008C               	movwf	??_out_LCD
   976  034A  080C               	movf	??_out_LCD,w
   977  034B  0792               	addwf	out_LCD@i,f
   978  034C                     l761:	
   979  034C  3004               	movlw	4
   980  034D  0212               	subwf	out_LCD@i,w
   981  034E  1C03               	skipc
   982  034F  2B51               	goto	u71
   983  0350  2B52               	goto	u70
   984  0351                     u71:	
   985  0351  2B3D               	goto	l755
   986  0352                     u70:	
   987  0352                     l763:	
   988                           
   989                           ;newfile.c: 124:  PORTBbits.RB4 = d[0];
   990  0352  0C0D               	rrf	out_LCD@d,w
   991  0353  1C03               	skipc
   992  0354  1206               	bcf	6,4	;volatile
   993  0355  1803               	skipnc
   994  0356  1606               	bsf	6,4	;volatile
   995                           
   996                           ;newfile.c: 125:  PORTBbits.RB5 = d[1];
   997  0357  0C0E               	rrf	out_LCD@d+1,w
   998  0358  1C03               	skipc
   999  0359  1286               	bcf	6,5	;volatile
  1000  035A  1803               	skipnc
  1001  035B  1686               	bsf	6,5	;volatile
  1002                           
  1003                           ;newfile.c: 126:  PORTBbits.RB6 = d[2];
  1004  035C  0C0F               	rrf	out_LCD@d+2,w
  1005  035D  1C03               	skipc
  1006  035E  1306               	bcf	6,6	;volatile
  1007  035F  1803               	skipnc
  1008  0360  1706               	bsf	6,6	;volatile
  1009                           
  1010                           ;newfile.c: 127:  PORTBbits.RB7 = d[3];
  1011  0361  0C10               	rrf	out_LCD@d+3,w
  1012  0362  1C03               	skipc
  1013  0363  1386               	bcf	6,7	;volatile
  1014  0364  1803               	skipnc
  1015  0365  1786               	bsf	6,7	;volatile
  1016  0366                     l49:	
  1017  0366  0008               	return
  1018  0367                     __end_of_out_LCD:	
  1019  004E                     btemp	set	78	;btemp
  1020  004E                     wtemp0	set	78


Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     24      24

Pointer List with Targets:

    LCD_wr@str_p	PTR unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[12]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_wr
    _init_LCD->_out_inst_LCD
    _LCD_wr->_LCD_wr_char
    _out_inst_LCD->_out_LCD
    _LCD_wr_char->_out_str_LCD
    _out_str_LCD->_out_LCD

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1463
                             _LCD_wr
                           _init_LCD
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             4     4      0     274
                                             10 BANK0      4     4      0
                       _out_inst_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_wr                                              10     8      2    1189
                                             14 BANK0     10     8      2
                        _LCD_wr_char
                       _out_inst_LCD
 ---------------------------------------------------------------------------------
 (2) _out_inst_LCD                                         3     3      0     228
                                              7 BANK0      3     3      0
                            _out_LCD
 ---------------------------------------------------------------------------------
 (2) _LCD_wr_char                                          5     5      0     341
                                              9 BANK0      5     5      0
                        _out_str_LCD
 ---------------------------------------------------------------------------------
 (3) _out_str_LCD                                          2     2      0     228
                                              7 BANK0      2     2      0
                            _out_LCD
 ---------------------------------------------------------------------------------
 (3) _out_LCD                                              7     7      0     206
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_wr
     _LCD_wr_char
       _out_str_LCD
         _out_LCD
     _out_inst_LCD
       _out_LCD
   _init_LCD
     _out_inst_LCD
       _out_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42     18      18       3       36.4%
ABS                  0      0       0       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 05 14:24:03 2025

                      pc 0002             _out_inst_LCD 02F6              __CFG_CP$OFF 0000  
                     l41 0307                       l25 03B0                       l35 03FD  
                     l44 02F5                       l38 0339                       l54 031A  
                     l55 031A                       l49 0366                       u70 0352  
                     u71 0351                       u90 0394                       u91 0393  
                     u85 0326                       u95 0390              _out_str_LCD 02E9  
                     fsr 0004                      l811 0394                      l803 0374  
                    l821 03C4                      l813 03A6                      l805 0376  
                    l831 03E5                      l823 03CB                      l815 03B3  
                    l807 0380                      l761 034C                      l833 03E7  
                    l825 03CF                      l817 03B7                      l809 0387  
                    l841 0308                      l763 0352                      l755 033D  
                    l771 02F0                      l835 03EB                      l827 03D4  
                    l819 03BC                      l843 030E                      l757 0346  
                    l749 033C                      l773 02F1                      l765 02EB  
                    l781 02FD                      l837 03EF                      l829 03E0  
                    l845 030F                      l759 0348                      l767 02ED  
                    l791 0334                      l783 02FE                      l775 02F8  
                    l839 03F4                      l847 0314                      l769 02EF  
                    l793 0336                      l785 031E                      l777 02FA  
                    l787 0323                      l779 02FC                      l795 0367  
                    l789 032F                      l797 0371                      u100 03BC  
                    u101 03BB                      u120 03FD                      u121 03FC  
                    u115 03D7                      u137 036C                      u147 037B  
                    u157 03AB                      u167 0302                      u177 02F3  
                    fsr0 0004                      indf 0000             __CFG_FOSC$HS 0000  
                   STR_1 0007                     STR_2 0014                     _main 0308  
                   btemp 004E                     start 0000             ?_LCD_wr_char 000C  
                  ?_main 000C            __CFG_WDTE$OFF 0000                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  pclath 000A          __end_of_out_LCD 0367                    status 0003  
                  wtemp0 004E         LCD_wr_char@str_H 0019         LCD_wr_char@str_L 0017  
        __initialization 03FE             __end_of_main 031C              LCD_wr@posiH 0022  
            LCD_wr@posiL 0020              LCD_wr@str_p 0023                   ??_main 0000  
                 _LCD_wr 03B1           __CFG_PWRTE$OFF 0000         __end_of_init_LCD 03B1  
              ??_out_LCD 000C  __end_of__initialization 03FE     out_inst_LCD@out_data 0015  
         __pcstackCOMMON 0000     __size_of_LCD_wr_char 001E             ?_out_str_LCD 000C  
                ?_LCD_wr 001A             LCD_wr_char@c 0018                  LCD_wr@x 001A  
                LCD_wr@y 001B               __pmaintext 0308               __stringtab 0001  
              ?_init_LCD 000C          __size_of_LCD_wr 004D                  __ptext1 0367  
                __ptext2 03B1                  __ptext3 02F6                  __ptext4 031C  
                __ptext5 02E9                  __ptext6 033A              out_LCD@data 0011  
                _out_LCD 033A                _LCD_wr$82 001E     end_of_initialization 03FE  
             ??_init_LCD 0016                _PORTBbits 0006     __size_of_out_str_LCD 000D  
         __end_of_LCD_wr 03FE            ?_out_inst_LCD 000C      start_initialization 03FE  
             LCD_wr@posi 0021                 ??_LCD_wr 001C            ??_LCD_wr_char 0015  
         ??_out_inst_LCD 0013                ___latbits 0000            __pcstackBANK0 000C  
      __size_of_init_LCD 004A      __end_of_LCD_wr_char 033A                __pstrings 0001  
               ?_out_LCD 000C              __stringbase 0006     __end_of_out_inst_LCD 0308  
              init_LCD@i 0018              _LCD_wr_char 031C            ??_out_str_LCD 0013  
     __end_of__stringtab 0007         __size_of_out_LCD 002D                 _init_LCD 0367  
          __size_of_main 0014      __end_of_out_str_LCD 02F6      out_str_LCD@out_data 0014  
              stringcode 0001                 out_LCD@d 000D                 out_LCD@i 0012  
  __size_of_out_inst_LCD 0012                 stringdir 0001                 stringtab 0001  
