

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 07 10:58:34 2025

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F84A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	dabs	1,0x4E,2
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F84A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  0088                     	;# 
    77  0089                     	;# 
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  0006                     _PORTB	set	6
    95  0005                     _PORTA	set	5
    96  0006                     _PORTBbits	set	6
    97  000B                     _INTCON	set	11
    98  0001                     _TMR0	set	1
    99  0086                     _TRISB	set	134
   100  0085                     _TRISA	set	133
   101  0081                     _OPTION_REG	set	129
   102                           
   103                           ; #config settings
   104  0000                     
   105                           	psect	cinit
   106  000C                     start_initialization:	
   107  000C                     __initialization:	
   108                           
   109                           ; Clear objects allocated to BANK0
   110  000C  1283               	bcf	3,5	;RP0=0, select bank0
   111  000D  01A9               	clrf	__pbssBANK0& (0+127)
   112  000E  01AA               	clrf	(__pbssBANK0+1)& (0+127)
   113  000F  01AB               	clrf	(__pbssBANK0+2)& (0+127)
   114  0010                     end_of_initialization:	
   115                           ;End of C runtime variable initialization code
   116                           
   117  0010                     __end_of__initialization:	
   118  0010  0183               	clrf	3
   119  0011  2A33               	ljmp	_main	;jump to C main() function
   120                           
   121                           	psect	bssBANK0
   122  0029                     __pbssBANK0:	
   123  0029                     _tenthSeconds:	
   124  0029                     	ds	2
   125  002B                     _timerRunning:	
   126  002B                     	ds	1
   127                           
   128                           	psect	cstackCOMMON
   129  0000                     __pcstackCOMMON:	
   130  0000                     ??_displayTime:	
   131  0000                     ??_main:	
   132                           ; 1 bytes @ 0x0
   133                           
   134                           
   135                           	psect	cstackBANK0
   136  000C                     __pcstackBANK0:	
   137                           ; 1 bytes @ 0x0
   138                           
   139  000C                     ?_out_inst_LCD:	
   140  000C                     ?_LCD_wr_char:	
   141                           ; 1 bytes @ 0x0
   142                           
   143  000C                     ?_out_str_LCD:	
   144                           ; 1 bytes @ 0x0
   145                           
   146  000C                     ?_out_LCD:	
   147                           ; 1 bytes @ 0x0
   148                           
   149  000C                     ?_startTimer:	
   150                           ; 1 bytes @ 0x0
   151                           
   152  000C                     ?_displayTime:	
   153                           ; 1 bytes @ 0x0
   154                           
   155  000C                     ?_ISR:	
   156                           ; 1 bytes @ 0x0
   157                           
   158  000C                     ?_init_LCD:	
   159                           ; 1 bytes @ 0x0
   160                           
   161  000C                     ?_main:	
   162                           ; 1 bytes @ 0x0
   163                           
   164  000C                     ?i1_LCD_wr_char:	
   165                           ; 1 bytes @ 0x0
   166                           
   167  000C                     ?i1_out_inst_LCD:	
   168                           ; 1 bytes @ 0x0
   169                           
   170  000C                     ?i1_out_str_LCD:	
   171                           ; 1 bytes @ 0x0
   172                           
   173  000C                     ?i1_out_LCD:	
   174                           ; 1 bytes @ 0x0
   175                           
   176  000C                     ??i1_out_LCD:	
   177                           ; 1 bytes @ 0x0
   178                           
   179  000C                     ?___lwdiv:	
   180                           ; 1 bytes @ 0x0
   181                           
   182  000C                     ___lwdiv@divisor:	
   183                           ; 2 bytes @ 0x0
   184                           
   185                           
   186                           ; 2 bytes @ 0x0
   187  000C                     	ds	2
   188  000E                     i1out_LCD@data:	
   189  000E                     ___lwdiv@dividend:	
   190                           ; 1 bytes @ 0x2
   191                           
   192                           
   193                           ; 2 bytes @ 0x2
   194  000E                     	ds	1
   195  000F                     ??i1_out_inst_LCD:	
   196  000F                     ??i1_out_str_LCD:	
   197                           ; 1 bytes @ 0x3
   198                           
   199                           
   200                           ; 1 bytes @ 0x3
   201  000F                     	ds	1
   202  0010                     ??___lwdiv:	
   203  0010                     i1out_str_LCD@out_data:	
   204                           ; 1 bytes @ 0x4
   205                           
   206                           
   207                           ; 1 bytes @ 0x4
   208  0010                     	ds	1
   209  0011                     ??i1_LCD_wr_char:	
   210  0011                     i1out_inst_LCD@out_data:	
   211                           ; 1 bytes @ 0x5
   212                           
   213  0011                     ___lwdiv@quotient:	
   214                           ; 1 bytes @ 0x5
   215                           
   216                           
   217                           ; 2 bytes @ 0x5
   218  0011                     	ds	1
   219  0012                     ?i1_LCD_goto:	
   220  0012                     i1LCD_goto@y:	
   221                           ; 1 bytes @ 0x6
   222                           
   223                           
   224                           ; 1 bytes @ 0x6
   225  0012                     	ds	1
   226  0013                     ??i1_LCD_goto:	
   227  0013                     ___lwdiv@counter:	
   228                           ; 1 bytes @ 0x7
   229                           
   230  0013                     i1LCD_wr_char@str_L:	
   231                           ; 1 bytes @ 0x7
   232                           
   233                           
   234                           ; 1 bytes @ 0x7
   235  0013                     	ds	1
   236  0014                     ?___lwmod:	
   237  0014                     i1LCD_goto@x:	
   238                           ; 2 bytes @ 0x8
   239                           
   240  0014                     i1LCD_wr_char@c:	
   241                           ; 1 bytes @ 0x8
   242                           
   243  0014                     ___lwmod@divisor:	
   244                           ; 1 bytes @ 0x8
   245                           
   246                           
   247                           ; 2 bytes @ 0x8
   248  0014                     	ds	1
   249  0015                     i1LCD_wr_char@str_H:	
   250  0015                     i1_LCD_goto$84:	
   251                           ; 1 bytes @ 0x9
   252                           
   253                           
   254                           ; 2 bytes @ 0x9
   255  0015                     	ds	1
   256  0016                     ___lwmod@dividend:	
   257                           
   258                           ; 2 bytes @ 0xA
   259  0016                     	ds	1
   260  0017                     i1LCD_goto@pos:	
   261                           
   262                           ; 1 bytes @ 0xB
   263  0017                     	ds	1
   264  0018                     ??___lwmod:	
   265                           
   266                           ; 1 bytes @ 0xC
   267  0018                     	ds	1
   268  0019                     ___lwmod@counter:	
   269                           
   270                           ; 1 bytes @ 0xD
   271  0019                     	ds	1
   272  001A                     ??_ISR:	
   273                           
   274                           ; 1 bytes @ 0xE
   275  001A                     	ds	3
   276  001D                     ??_out_LCD:	
   277  001D                     ??_startTimer:	
   278                           ; 1 bytes @ 0x11
   279                           
   280                           
   281                           ; 1 bytes @ 0x11
   282  001D                     	ds	2
   283  001F                     out_LCD@data:	
   284                           
   285                           ; 1 bytes @ 0x13
   286  001F                     	ds	1
   287  0020                     ??_out_inst_LCD:	
   288  0020                     ??_out_str_LCD:	
   289                           ; 1 bytes @ 0x14
   290                           
   291                           
   292                           ; 1 bytes @ 0x14
   293  0020                     	ds	1
   294  0021                     out_str_LCD@out_data:	
   295                           
   296                           ; 1 bytes @ 0x15
   297  0021                     	ds	1
   298  0022                     ??_LCD_wr_char:	
   299  0022                     out_inst_LCD@out_data:	
   300                           ; 1 bytes @ 0x16
   301                           
   302                           
   303                           ; 1 bytes @ 0x16
   304  0022                     	ds	1
   305  0023                     ?_LCD_goto:	
   306  0023                     ??_init_LCD:	
   307                           ; 1 bytes @ 0x17
   308                           
   309  0023                     LCD_goto@y:	
   310                           ; 1 bytes @ 0x17
   311                           
   312                           
   313                           ; 1 bytes @ 0x17
   314  0023                     	ds	1
   315  0024                     ??_LCD_goto:	
   316  0024                     LCD_wr_char@str_L:	
   317                           ; 1 bytes @ 0x18
   318                           
   319                           
   320                           ; 1 bytes @ 0x18
   321  0024                     	ds	1
   322  0025                     LCD_goto@x:	
   323  0025                     LCD_wr_char@c:	
   324                           ; 1 bytes @ 0x19
   325                           
   326  0025                     init_LCD@i:	
   327                           ; 1 bytes @ 0x19
   328                           
   329                           
   330                           ; 2 bytes @ 0x19
   331  0025                     	ds	1
   332  0026                     LCD_wr_char@str_H:	
   333  0026                     _LCD_goto$84:	
   334                           ; 1 bytes @ 0x1A
   335                           
   336                           
   337                           ; 2 bytes @ 0x1A
   338  0026                     	ds	2
   339  0028                     LCD_goto@pos:	
   340                           
   341                           ; 1 bytes @ 0x1C
   342  0028                     	ds	1
   343                           
   344                           	psect	maintext
   345  0233                     __pmaintext:	
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   348 ;;
   349 ;; *************** function _main *****************
   350 ;; Defined at:
   351 ;;		line 144 in file "newfile.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : B00/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0
   365 ;;      Params:         0       0
   366 ;;      Locals:         0       0
   367 ;;      Temps:          0       0
   368 ;;      Totals:         0       0
   369 ;;Total ram usage:        0 bytes
   370 ;; Hardware stack levels required when called:    8
   371 ;; This function calls:
   372 ;;		_LCD_goto
   373 ;;		_LCD_wr_char
   374 ;;		_init_LCD
   375 ;;		_startTimer
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           
   382                           ;psect for function _main
   383  0233                     _main:	
   384  0233                     l1040:	
   385                           ;incstack = 0
   386                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   387                           
   388                           
   389                           ;newfile.c: 145:     TRISA = 0b00000000;
   390  0233  1683               	bsf	3,5	;RP0=1, select bank1
   391  0234  0185               	clrf	5	;volatile
   392                           
   393                           ;newfile.c: 146:     TRISB = 0b00000000;
   394  0235  0186               	clrf	6	;volatile
   395                           
   396                           ;newfile.c: 147:     PORTA = 0x00;
   397  0236  1283               	bcf	3,5	;RP0=0, select bank0
   398  0237  0185               	clrf	5	;volatile
   399                           
   400                           ;newfile.c: 148:     PORTB = 0x00;
   401  0238  0186               	clrf	6	;volatile
   402  0239                     l1042:	
   403                           
   404                           ;newfile.c: 150:     init_LCD();
   405  0239  2012               	fcall	_init_LCD
   406  023A                     l1044:	
   407                           
   408                           ;newfile.c: 153:     LCD_goto(1, 0);
   409  023A  1283               	bcf	3,5	;RP0=0, select bank0
   410  023B  01A3               	clrf	LCD_goto@y
   411  023C  3001               	movlw	1
   412  023D  2195               	fcall	_LCD_goto
   413  023E                     l1046:	
   414                           
   415                           ;newfile.c: 154:     LCD_wr_char('0');
   416  023E  3030               	movlw	48
   417  023F  21DB               	fcall	_LCD_wr_char
   418  0240                     l1048:	
   419                           
   420                           ;newfile.c: 155:     LCD_wr_char('0');
   421  0240  3030               	movlw	48
   422  0241  21DB               	fcall	_LCD_wr_char
   423  0242                     l1050:	
   424                           
   425                           ;newfile.c: 156:     LCD_wr_char('.');
   426  0242  302E               	movlw	46
   427  0243  21DB               	fcall	_LCD_wr_char
   428  0244                     l1052:	
   429                           
   430                           ;newfile.c: 157:     LCD_wr_char('0');
   431  0244  3030               	movlw	48
   432  0245  21DB               	fcall	_LCD_wr_char
   433  0246                     l1054:	
   434                           
   435                           ;newfile.c: 158:     LCD_wr_char('s');
   436  0246  3073               	movlw	115
   437  0247  21DB               	fcall	_LCD_wr_char
   438  0248                     l1056:	
   439                           
   440                           ;newfile.c: 160:     startTimer();
   441  0248  226F               	fcall	_startTimer
   442  0249                     l75:	
   443                           ;newfile.c: 162:     while(1) {
   444                           
   445  0249                     l76:	
   446                           ;newfile.c: 164:     }
   447                           
   448  0249  2A49               	goto	l75
   449  024A  280B               	ljmp	start
   450  024B                     __end_of_main:	
   451                           
   452                           	psect	text1
   453  026F                     __ptext1:	
   454 ;; *************** function _startTimer *****************
   455 ;; Defined at:
   456 ;;		line 33 in file "newfile.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, status,2
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMMON   BANK0
   470 ;;      Params:         0       0
   471 ;;      Locals:         0       0
   472 ;;      Temps:          0       1
   473 ;;      Totals:         0       1
   474 ;;Total ram usage:        1 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; Hardware stack levels required when called:    5
   477 ;; This function calls:
   478 ;;		Nothing
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           
   485                           ;psect for function _startTimer
   486  026F                     _startTimer:	
   487  026F                     l980:	
   488                           ;incstack = 0
   489                           ; Regs used in _startTimer: [wreg+status,2]
   490                           
   491                           
   492                           ;newfile.c: 34:     TMR0 = 0;
   493  026F  1283               	bcf	3,5	;RP0=0, select bank0
   494  0270  0181               	clrf	1	;volatile
   495  0271                     l982:	
   496                           
   497                           ;newfile.c: 35:     OPTION_REG = 0b00000111;
   498  0271  3007               	movlw	7
   499  0272  1683               	bsf	3,5	;RP0=1, select bank1
   500  0273  0081               	movwf	1	;volatile
   501  0274                     l984:	
   502                           
   503                           ;newfile.c: 36:     INTCON = 0b10100000;
   504  0274  30A0               	movlw	160
   505  0275  008B               	movwf	11	;volatile
   506  0276                     l986:	
   507                           
   508                           ;newfile.c: 37:     timerRunning = 1;
   509  0276  3001               	movlw	1
   510  0277  1283               	bcf	3,5	;RP0=0, select bank0
   511  0278  009D               	movwf	??_startTimer
   512  0279  081D               	movf	??_startTimer,w
   513  027A  00AB               	movwf	_timerRunning	;volatile
   514  027B                     l33:	
   515  027B  0008               	return
   516  027C                     __end_of_startTimer:	
   517                           
   518                           	psect	text2
   519  0012                     __ptext2:	
   520 ;; *************** function _init_LCD *****************
   521 ;; Defined at:
   522 ;;		line 77 in file "newfile.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;  i               2   25[BANK0 ] int 
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0
   536 ;;      Params:         0       0
   537 ;;      Locals:         0       2
   538 ;;      Temps:          0       2
   539 ;;      Totals:         0       4
   540 ;;Total ram usage:        4 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    7
   543 ;; This function calls:
   544 ;;		_out_inst_LCD
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           
   551                           ;psect for function _init_LCD
   552  0012                     _init_LCD:	
   553  0012                     l1012:	
   554                           ;incstack = 0
   555                           ; Regs used in _init_LCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   556                           
   557                           
   558                           ;newfile.c: 79:  int i;;newfile.c: 81:     _delay((unsigned long)((20)*(10000000/4000.0)
      +                          ));
   559  0012  3041               	movlw	65
   560  0013  1283               	bcf	3,5	;RP0=0, select bank0
   561  0014  00A4               	movwf	??_init_LCD+1
   562  0015  30EE               	movlw	238
   563  0016  00A3               	movwf	??_init_LCD
   564  0017                     u537:	
   565  0017  0BA3               	decfsz	??_init_LCD,f
   566  0018  2817               	goto	u537
   567  0019  0BA4               	decfsz	??_init_LCD+1,f
   568  001A  2817               	goto	u537
   569  001B  0000               	nop
   570  001C                     l1014:	
   571                           
   572                           ;newfile.c: 83:  for (i = 0; i < 3; i++) {
   573  001C  1283               	bcf	3,5	;RP0=0, select bank0
   574  001D  01A5               	clrf	init_LCD@i
   575  001E  01A6               	clrf	init_LCD@i+1
   576  001F                     l1020:	
   577                           
   578                           ;newfile.c: 84:   out_inst_LCD(0x03);
   579  001F  3003               	movlw	3
   580  0020  224B               	fcall	_out_inst_LCD
   581  0021                     l1022:	
   582                           
   583                           ;newfile.c: 85:   _delay((unsigned long)((5)*(10000000/4000.0)));
   584  0021  3011               	movlw	17
   585  0022  1283               	bcf	3,5	;RP0=0, select bank0
   586  0023  00A4               	movwf	??_init_LCD+1
   587  0024  303A               	movlw	58
   588  0025  00A3               	movwf	??_init_LCD
   589  0026                     u547:	
   590  0026  0BA3               	decfsz	??_init_LCD,f
   591  0027  2826               	goto	u547
   592  0028  0BA4               	decfsz	??_init_LCD+1,f
   593  0029  2826               	goto	u547
   594  002A  0000               	nop
   595  002B                     l1024:	
   596                           
   597                           ;newfile.c: 86:  }
   598  002B  3001               	movlw	1
   599  002C  1283               	bcf	3,5	;RP0=0, select bank0
   600  002D  07A5               	addwf	init_LCD@i,f
   601  002E  1803               	skipnc
   602  002F  0AA6               	incf	init_LCD@i+1,f
   603  0030  3000               	movlw	0
   604  0031  07A6               	addwf	init_LCD@i+1,f
   605  0032                     l1026:	
   606  0032  0826               	movf	init_LCD@i+1,w
   607  0033  3A80               	xorlw	128
   608  0034  00CF               	movwf	btemp+1
   609  0035  3080               	movlw	128
   610  0036  024F               	subwf	btemp+1,w
   611  0037  1D03               	skipz
   612  0038  283B               	goto	u505
   613  0039  3003               	movlw	3
   614  003A  0225               	subwf	init_LCD@i,w
   615  003B                     u505:	
   616  003B  1C03               	skipc
   617  003C  283E               	goto	u501
   618  003D  283F               	goto	u500
   619  003E                     u501:	
   620  003E  281F               	goto	l1020
   621  003F                     u500:	
   622  003F                     l1028:	
   623                           
   624                           ;newfile.c: 88:  out_inst_LCD(0x02);
   625  003F  3002               	movlw	2
   626  0040  224B               	fcall	_out_inst_LCD
   627                           
   628                           ;newfile.c: 89:  out_inst_LCD(0x02);
   629  0041  3002               	movlw	2
   630  0042  224B               	fcall	_out_inst_LCD
   631                           
   632                           ;newfile.c: 90:  out_inst_LCD(0x08);
   633  0043  3008               	movlw	8
   634  0044  224B               	fcall	_out_inst_LCD
   635                           
   636                           ;newfile.c: 91:  out_inst_LCD(0x00);
   637  0045  3000               	movlw	0
   638  0046  224B               	fcall	_out_inst_LCD
   639                           
   640                           ;newfile.c: 92:  out_inst_LCD(0x0c);
   641  0047  300C               	movlw	12
   642  0048  224B               	fcall	_out_inst_LCD
   643                           
   644                           ;newfile.c: 94:  out_inst_LCD(0x00);
   645  0049  3000               	movlw	0
   646  004A  224B               	fcall	_out_inst_LCD
   647                           
   648                           ;newfile.c: 95:  out_inst_LCD(0x01);
   649  004B  3001               	movlw	1
   650  004C  224B               	fcall	_out_inst_LCD
   651                           
   652                           ;newfile.c: 96:  out_inst_LCD(0x00);
   653  004D  3000               	movlw	0
   654  004E  224B               	fcall	_out_inst_LCD
   655                           
   656                           ;newfile.c: 97:  out_inst_LCD(0x06);
   657  004F  3006               	movlw	6
   658  0050  224B               	fcall	_out_inst_LCD
   659  0051                     l1030:	
   660                           
   661                           ;newfile.c: 99:     _delay((unsigned long)((20)*(10000000/4000.0)));
   662  0051  3041               	movlw	65
   663  0052  1283               	bcf	3,5	;RP0=0, select bank0
   664  0053  00A4               	movwf	??_init_LCD+1
   665  0054  30EE               	movlw	238
   666  0055  00A3               	movwf	??_init_LCD
   667  0056                     u557:	
   668  0056  0BA3               	decfsz	??_init_LCD,f
   669  0057  2856               	goto	u557
   670  0058  0BA4               	decfsz	??_init_LCD+1,f
   671  0059  2856               	goto	u557
   672  005A  0000               	nop
   673  005B                     l58:	
   674  005B  0008               	return
   675  005C                     __end_of_init_LCD:	
   676                           
   677                           	psect	text3
   678  01DB                     __ptext3:	
   679 ;; *************** function _LCD_wr_char *****************
   680 ;; Defined at:
   681 ;;		line 103 in file "newfile.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  c               1    wreg     unsigned char 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  c               1   25[BANK0 ] unsigned char 
   686 ;;  str_H           1   26[BANK0 ] unsigned char 
   687 ;;  str_L           1   24[BANK0 ] unsigned char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0, pclath, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0
   697 ;;      Params:         0       0
   698 ;;      Locals:         0       3
   699 ;;      Temps:          0       2
   700 ;;      Totals:         0       5
   701 ;;Total ram usage:        5 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; Hardware stack levels required when called:    7
   704 ;; This function calls:
   705 ;;		_out_str_LCD
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           
   712                           ;psect for function _LCD_wr_char
   713  01DB                     _LCD_wr_char:	
   714                           
   715                           ;incstack = 0
   716                           ; Regs used in _LCD_wr_char: [wreg+status,2+status,0+pclath+cstack]
   717                           ;LCD_wr_char@c stored from wreg
   718  01DB  1283               	bcf	3,5	;RP0=0, select bank0
   719  01DC  00A5               	movwf	LCD_wr_char@c
   720  01DD                     l1002:	
   721                           
   722                           ;newfile.c: 103: void LCD_wr_char(char c);newfile.c: 104: {;newfile.c: 105:  char str_H,
      +                           str_L;;newfile.c: 107:  str_H = c & 0xf0;
   723  01DD  0825               	movf	LCD_wr_char@c,w
   724  01DE  39F0               	andlw	240
   725  01DF  00A2               	movwf	??_LCD_wr_char
   726  01E0  0822               	movf	??_LCD_wr_char,w
   727  01E1  00A6               	movwf	LCD_wr_char@str_H
   728  01E2                     l1004:	
   729                           
   730                           ;newfile.c: 108:  str_H = str_H >> 4;
   731  01E2  0826               	movf	LCD_wr_char@str_H,w
   732  01E3  00A2               	movwf	??_LCD_wr_char
   733  01E4  3004               	movlw	4
   734  01E5                     u495:	
   735  01E5  1003               	clrc
   736  01E6  0CA2               	rrf	??_LCD_wr_char,f
   737  01E7  3EFF               	addlw	-1
   738  01E8  1D03               	skipz
   739  01E9  29E5               	goto	u495
   740  01EA  0822               	movf	??_LCD_wr_char,w
   741  01EB  00A3               	movwf	??_LCD_wr_char+1
   742  01EC  0823               	movf	??_LCD_wr_char+1,w
   743  01ED  00A6               	movwf	LCD_wr_char@str_H
   744  01EE                     l1006:	
   745                           
   746                           ;newfile.c: 109:  str_L = c & 0x0f;
   747  01EE  0825               	movf	LCD_wr_char@c,w
   748  01EF  390F               	andlw	15
   749  01F0  00A2               	movwf	??_LCD_wr_char
   750  01F1  0822               	movf	??_LCD_wr_char,w
   751  01F2  00A4               	movwf	LCD_wr_char@str_L
   752  01F3                     l1008:	
   753                           
   754                           ;newfile.c: 111:  out_str_LCD(str_H);
   755  01F3  0826               	movf	LCD_wr_char@str_H,w
   756  01F4  227C               	fcall	_out_str_LCD
   757  01F5                     l1010:	
   758                           
   759                           ;newfile.c: 112:  out_str_LCD(str_L);
   760  01F5  1283               	bcf	3,5	;RP0=0, select bank0
   761  01F6  0824               	movf	LCD_wr_char@str_L,w
   762  01F7  227C               	fcall	_out_str_LCD
   763  01F8                     l61:	
   764  01F8  0008               	return
   765  01F9                     __end_of_LCD_wr_char:	
   766                           
   767                           	psect	text4
   768  027C                     __ptext4:	
   769 ;; *************** function _out_str_LCD *****************
   770 ;; Defined at:
   771 ;;		line 125 in file "newfile.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  out_data        1    wreg     unsigned char 
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  out_data        1   21[BANK0 ] unsigned char 
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0
   785 ;;      Params:         0       0
   786 ;;      Locals:         0       1
   787 ;;      Temps:          0       1
   788 ;;      Totals:         0       2
   789 ;;Total ram usage:        2 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    6
   792 ;; This function calls:
   793 ;;		_out_LCD
   794 ;; This function is called by:
   795 ;;		_LCD_wr_char
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           
   800                           ;psect for function _out_str_LCD
   801  027C                     _out_str_LCD:	
   802                           
   803                           ;incstack = 0
   804                           ; Regs used in _out_str_LCD: [wreg+status,2+status,0+pclath+cstack]
   805                           ;out_str_LCD@out_data stored from wreg
   806  027C  1283               	bcf	3,5	;RP0=0, select bank0
   807  027D  00A1               	movwf	out_str_LCD@out_data
   808  027E                     l900:	
   809                           
   810                           ;newfile.c: 125: void out_str_LCD(unsigned char out_data);newfile.c: 126: {;newfile.c: 1
      +                          27:  out_LCD(out_data);
   811  027E  0821               	movf	out_str_LCD@out_data,w
   812  027F  20A1               	fcall	_out_LCD
   813  0280                     l902:	
   814                           
   815                           ;newfile.c: 128:  PORTBbits.RB0 = 1; PORTBbits.RB1 = 1;
   816  0280  1283               	bcf	3,5	;RP0=0, select bank0
   817  0281  1406               	bsf	6,0	;volatile
   818  0282                     l904:	
   819  0282  1486               	bsf	6,1	;volatile
   820  0283                     l906:	
   821                           
   822                           ;newfile.c: 129:  PORTBbits.RB1 = 0;
   823  0283  1086               	bcf	6,1	;volatile
   824  0284                     l908:	
   825                           
   826                           ;newfile.c: 130:  _delay((unsigned long)((100)*(10000000/4000000.0)));
   827  0284  3053               	movlw	83
   828  0285  00A0               	movwf	??_out_str_LCD
   829  0286                     u567:	
   830  0286  0BA0               	decfsz	??_out_str_LCD,f
   831  0287  2A86               	goto	u567
   832  0288                     l67:	
   833  0288  0008               	return
   834  0289                     __end_of_out_str_LCD:	
   835                           
   836                           	psect	text5
   837  0195                     __ptext5:	
   838 ;; *************** function _LCD_goto *****************
   839 ;; Defined at:
   840 ;;		line 46 in file "newfile.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  x               1    wreg     unsigned char 
   843 ;;  y               1   23[BANK0 ] unsigned char 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  x               1   25[BANK0 ] unsigned char 
   846 ;;  pos             1   28[BANK0 ] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, status,2, status,0, pclath, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMMON   BANK0
   856 ;;      Params:         0       1
   857 ;;      Locals:         0       4
   858 ;;      Temps:          0       1
   859 ;;      Totals:         0       6
   860 ;;Total ram usage:        6 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    7
   863 ;; This function calls:
   864 ;;		_out_inst_LCD
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           
   871                           ;psect for function _LCD_goto
   872  0195                     _LCD_goto:	
   873                           
   874                           ;incstack = 0
   875                           ; Regs used in _LCD_goto: [wreg+status,2+status,0+pclath+cstack]
   876                           ;LCD_goto@x stored from wreg
   877  0195  1283               	bcf	3,5	;RP0=0, select bank0
   878  0196  00A5               	movwf	LCD_goto@x
   879  0197                     l988:	
   880                           
   881                           ;newfile.c: 47:     unsigned char pos = 0x80 | (x ? 0x40 : 0x00) | y;
   882  0197  0825               	movf	LCD_goto@x,w
   883  0198  1D03               	btfss	3,2
   884  0199  299B               	goto	u471
   885  019A  299C               	goto	u470
   886  019B                     u471:	
   887  019B  299F               	goto	l992
   888  019C                     u470:	
   889  019C                     l990:	
   890  019C  01A6               	clrf	_LCD_goto$84
   891  019D  01A7               	clrf	_LCD_goto$84+1
   892  019E  29A3               	goto	l994
   893  019F                     l992:	
   894  019F  3040               	movlw	64
   895  01A0  00A6               	movwf	_LCD_goto$84
   896  01A1  3000               	movlw	0
   897  01A2  00A7               	movwf	_LCD_goto$84+1
   898  01A3                     l994:	
   899  01A3  0826               	movf	_LCD_goto$84,w
   900  01A4  0423               	iorwf	LCD_goto@y,w
   901  01A5  3880               	iorlw	128
   902  01A6  00A4               	movwf	??_LCD_goto
   903  01A7  0824               	movf	??_LCD_goto,w
   904  01A8  00A8               	movwf	LCD_goto@pos
   905  01A9                     l996:	
   906                           
   907                           ;newfile.c: 48:     out_inst_LCD(pos >> 4);
   908  01A9  0828               	movf	LCD_goto@pos,w
   909  01AA  00A4               	movwf	??_LCD_goto
   910  01AB  3004               	movlw	4
   911  01AC                     u485:	
   912  01AC  1003               	clrc
   913  01AD  0CA4               	rrf	??_LCD_goto,f
   914  01AE  3EFF               	addlw	-1
   915  01AF  1D03               	skipz
   916  01B0  29AC               	goto	u485
   917  01B1  0824               	movf	??_LCD_goto,w
   918  01B2  224B               	fcall	_out_inst_LCD
   919  01B3                     l998:	
   920                           
   921                           ;newfile.c: 49:     out_inst_LCD(pos & 0x0F);
   922  01B3  1283               	bcf	3,5	;RP0=0, select bank0
   923  01B4  0828               	movf	LCD_goto@pos,w
   924  01B5  390F               	andlw	15
   925  01B6  224B               	fcall	_out_inst_LCD
   926  01B7                     l43:	
   927  01B7  0008               	return
   928  01B8                     __end_of_LCD_goto:	
   929                           
   930                           	psect	text6
   931  024B                     __ptext6:	
   932 ;; *************** function _out_inst_LCD *****************
   933 ;; Defined at:
   934 ;;		line 116 in file "newfile.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  out_data        1    wreg     unsigned char 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  out_data        1   22[BANK0 ] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, pclath, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0
   948 ;;      Params:         0       0
   949 ;;      Locals:         0       1
   950 ;;      Temps:          0       2
   951 ;;      Totals:         0       3
   952 ;;Total ram usage:        3 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    6
   955 ;; This function calls:
   956 ;;		_out_LCD
   957 ;; This function is called by:
   958 ;;		_LCD_goto
   959 ;;		_init_LCD
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _out_inst_LCD
   965  024B                     _out_inst_LCD:	
   966                           
   967                           ;incstack = 0
   968                           ; Regs used in _out_inst_LCD: [wreg+status,2+status,0+pclath+cstack]
   969                           ;out_inst_LCD@out_data stored from wreg
   970  024B  1283               	bcf	3,5	;RP0=0, select bank0
   971  024C  00A2               	movwf	out_inst_LCD@out_data
   972  024D                     l890:	
   973                           
   974                           ;newfile.c: 116: void out_inst_LCD(unsigned char out_data);newfile.c: 117: {;newfile.c: 
      +                          118:  out_LCD(out_data);
   975  024D  0822               	movf	out_inst_LCD@out_data,w
   976  024E  20A1               	fcall	_out_LCD
   977  024F                     l892:	
   978                           
   979                           ;newfile.c: 119:  PORTBbits.RB0 = 0; PORTBbits.RB1 = 1;
   980  024F  1283               	bcf	3,5	;RP0=0, select bank0
   981  0250  1006               	bcf	6,0	;volatile
   982  0251                     l894:	
   983  0251  1486               	bsf	6,1	;volatile
   984  0252                     l896:	
   985                           
   986                           ;newfile.c: 120:  PORTBbits.RB1 = 0;
   987  0252  1086               	bcf	6,1	;volatile
   988  0253                     l898:	
   989                           
   990                           ;newfile.c: 121:  _delay((unsigned long)((5)*(10000000/4000.0)));
   991  0253  3011               	movlw	17
   992  0254  00A1               	movwf	??_out_inst_LCD+1
   993  0255  303A               	movlw	58
   994  0256  00A0               	movwf	??_out_inst_LCD
   995  0257                     u577:	
   996  0257  0BA0               	decfsz	??_out_inst_LCD,f
   997  0258  2A57               	goto	u577
   998  0259  0BA1               	decfsz	??_out_inst_LCD+1,f
   999  025A  2A57               	goto	u577
  1000  025B  0000               	nop
  1001  025C                     l64:	
  1002  025C  0008               	return
  1003  025D                     __end_of_out_inst_LCD:	
  1004                           
  1005                           	psect	text7
  1006  00A1                     __ptext7:	
  1007 ;; *************** function _out_LCD *****************
  1008 ;; Defined at:
  1009 ;;		line 134 in file "newfile.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  data            1    wreg     unsigned char 
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;  data            1   19[BANK0 ] unsigned char 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMMON   BANK0
  1023 ;;      Params:         0       0
  1024 ;;      Locals:         0       1
  1025 ;;      Temps:          0       2
  1026 ;;      Totals:         0       3
  1027 ;;Total ram usage:        3 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; Hardware stack levels required when called:    5
  1030 ;; This function calls:
  1031 ;;		Nothing
  1032 ;; This function is called by:
  1033 ;;		_out_inst_LCD
  1034 ;;		_out_str_LCD
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function _out_LCD
  1040  00A1                     _out_LCD:	
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _out_LCD: [wreg+status,2+status,0]
  1044                           ;out_LCD@data stored from wreg
  1045  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1046  00A2  009F               	movwf	out_LCD@data
  1047  00A3                     l868:	
  1048                           
  1049                           ;newfile.c: 134: void out_LCD(unsigned char data);newfile.c: 135: {;newfile.c: 137:     
      +                          PORTBbits.RB4 = (data & 0x01);
  1050  00A3  081F               	movf	out_LCD@data,w
  1051  00A4  3901               	andlw	1
  1052  00A5  009D               	movwf	??_out_LCD
  1053  00A6  0E9D               	swapf	??_out_LCD,f
  1054  00A7  0806               	movf	6,w	;volatile
  1055  00A8  061D               	xorwf	??_out_LCD,w
  1056  00A9  39EF               	andlw	-17
  1057  00AA  061D               	xorwf	??_out_LCD,w
  1058  00AB  0086               	movwf	6	;volatile
  1059                           
  1060                           ;newfile.c: 138:     PORTBbits.RB5 = (data & 0x02) >> 1;
  1061  00AC  081F               	movf	out_LCD@data,w
  1062  00AD  009D               	movwf	??_out_LCD
  1063  00AE  1003               	clrc
  1064  00AF  0C1D               	rrf	??_out_LCD,w
  1065  00B0  3901               	andlw	1
  1066  00B1  009E               	movwf	??_out_LCD+1
  1067  00B2  0E9E               	swapf	??_out_LCD+1,f
  1068  00B3  0D9E               	rlf	??_out_LCD+1,f
  1069  00B4  0806               	movf	6,w	;volatile
  1070  00B5  061E               	xorwf	??_out_LCD+1,w
  1071  00B6  39DF               	andlw	-33
  1072  00B7  061E               	xorwf	??_out_LCD+1,w
  1073  00B8  0086               	movwf	6	;volatile
  1074                           
  1075                           ;newfile.c: 139:     PORTBbits.RB6 = (data & 0x04) >> 2;
  1076  00B9  081F               	movf	out_LCD@data,w
  1077  00BA  009D               	movwf	??_out_LCD
  1078  00BB  3002               	movlw	2
  1079  00BC                     u295:	
  1080  00BC  1003               	clrc
  1081  00BD  0C9D               	rrf	??_out_LCD,f
  1082  00BE  3EFF               	addlw	-1
  1083  00BF  1D03               	skipz
  1084  00C0  28BC               	goto	u295
  1085  00C1  081D               	movf	??_out_LCD,w
  1086  00C2  3901               	andlw	1
  1087  00C3  009E               	movwf	??_out_LCD+1
  1088  00C4  0E9E               	swapf	??_out_LCD+1,f
  1089  00C5  0D9E               	rlf	??_out_LCD+1,f
  1090  00C6  0D9E               	rlf	??_out_LCD+1,f
  1091  00C7  0806               	movf	6,w	;volatile
  1092  00C8  061E               	xorwf	??_out_LCD+1,w
  1093  00C9  39BF               	andlw	-65
  1094  00CA  061E               	xorwf	??_out_LCD+1,w
  1095  00CB  0086               	movwf	6	;volatile
  1096                           
  1097                           ;newfile.c: 140:     PORTBbits.RB7 = (data & 0x08) >> 3;
  1098  00CC  081F               	movf	out_LCD@data,w
  1099  00CD  009D               	movwf	??_out_LCD
  1100  00CE  3003               	movlw	3
  1101  00CF                     u305:	
  1102  00CF  1003               	clrc
  1103  00D0  0C9D               	rrf	??_out_LCD,f
  1104  00D1  3EFF               	addlw	-1
  1105  00D2  1D03               	skipz
  1106  00D3  28CF               	goto	u305
  1107  00D4  081D               	movf	??_out_LCD,w
  1108  00D5  3901               	andlw	1
  1109  00D6  009E               	movwf	??_out_LCD+1
  1110  00D7  0C9E               	rrf	??_out_LCD+1,f
  1111  00D8  0C9E               	rrf	??_out_LCD+1,f
  1112  00D9  0806               	movf	6,w	;volatile
  1113  00DA  061E               	xorwf	??_out_LCD+1,w
  1114  00DB  397F               	andlw	-129
  1115  00DC  061E               	xorwf	??_out_LCD+1,w
  1116  00DD  0086               	movwf	6	;volatile
  1117  00DE                     l70:	
  1118  00DE  0008               	return
  1119  00DF                     __end_of_out_LCD:	
  1120                           
  1121                           	psect	text8
  1122  0217                     __ptext8:	
  1123 ;; *************** function _ISR *****************
  1124 ;; Defined at:
  1125 ;;		line 67 in file "newfile.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, pclath, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0
  1139 ;;      Params:         0       0
  1140 ;;      Locals:         0       0
  1141 ;;      Temps:          0       3
  1142 ;;      Totals:         0       3
  1143 ;;Total ram usage:        3 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    4
  1146 ;; This function calls:
  1147 ;;		_displayTime
  1148 ;; This function is called by:
  1149 ;;		Interrupt level 1
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _ISR
  1155  0217                     _ISR:	
  1156  0217                     i1l1032:	
  1157                           
  1158                           ;newfile.c: 68:     if (INTCON & 0b00000100) {
  1159  0217  1D0B               	btfss	11,2	;volatile
  1160  0218  2A1A               	goto	u51_21
  1161  0219  2A1B               	goto	u51_20
  1162  021A                     u51_21:	
  1163  021A  2A2B               	goto	i1l53
  1164  021B                     u51_20:	
  1165  021B                     i1l1034:	
  1166                           
  1167                           ;newfile.c: 69:         INTCON &= ~0b00000100;
  1168  021B  30FB               	movlw	251
  1169  021C  009A               	movwf	??_ISR
  1170  021D  081A               	movf	??_ISR,w
  1171  021E  058B               	andwf	11,f	;volatile
  1172                           
  1173                           ;newfile.c: 70:         if (timerRunning) {
  1174  021F  082B               	movf	_timerRunning,w	;volatile
  1175  0220  1903               	btfsc	3,2
  1176  0221  2A23               	goto	u52_21
  1177  0222  2A24               	goto	u52_20
  1178  0223                     u52_21:	
  1179  0223  2A2B               	goto	i1l53
  1180  0224                     u52_20:	
  1181  0224                     i1l1036:	
  1182                           
  1183                           ;newfile.c: 71:             tenthSeconds++;
  1184  0224  3001               	movlw	1
  1185  0225  07A9               	addwf	_tenthSeconds,f	;volatile
  1186  0226  1803               	skipnc
  1187  0227  0AAA               	incf	_tenthSeconds+1,f	;volatile
  1188  0228  3000               	movlw	0
  1189  0229  07AA               	addwf	_tenthSeconds+1,f	;volatile
  1190  022A                     i1l1038:	
  1191                           
  1192                           ;newfile.c: 72:             displayTime();
  1193  022A  211D               	fcall	_displayTime
  1194  022B                     i1l53:	
  1195  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1196  022C  081C               	movf	??_ISR+2,w
  1197  022D  008A               	movwf	10
  1198  022E  0E1B               	swapf	(??_ISR+1)^0,w
  1199  022F  0083               	movwf	3
  1200  0230  0ECE               	swapf	btemp,f
  1201  0231  0E4E               	swapf	btemp,w
  1202  0232  0009               	retfie
  1203  0233                     __end_of_ISR:	
  1204                           
  1205                           	psect	intentry
  1206  0004                     __pintentry:	
  1207                           ;incstack = 0
  1208                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1209                           
  1210  0004                     interrupt_function:	
  1211  004E                     saved_w	set	btemp
  1212  0004  00CE               	movwf	btemp
  1213  0005  0E03               	swapf	3,w
  1214  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0007  009B               	movwf	??_ISR+1
  1216  0008  080A               	movf	10,w
  1217  0009  009C               	movwf	??_ISR+2
  1218  000A  2A17               	ljmp	_ISR
  1219                           
  1220                           	psect	text9
  1221  011D                     __ptext9:	
  1222 ;; *************** function _displayTime *****************
  1223 ;; Defined at:
  1224 ;;		line 52 in file "newfile.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0, pclath, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0
  1238 ;;      Params:         0       0
  1239 ;;      Locals:         0       0
  1240 ;;      Temps:          0       0
  1241 ;;      Totals:         0       0
  1242 ;;Total ram usage:        0 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    3
  1245 ;; This function calls:
  1246 ;;		___lwdiv
  1247 ;;		___lwmod
  1248 ;;		i1_LCD_goto
  1249 ;;		i1_LCD_wr_char
  1250 ;; This function is called by:
  1251 ;;		_ISR
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function _displayTime
  1257  011D                     _displayTime:	
  1258  011D                     i1l1000:	
  1259                           ;incstack = 0
  1260                           ; Regs used in _displayTime: [wreg+status,2+status,0+pclath+cstack]
  1261                           
  1262                           
  1263                           ;newfile.c: 53:     LCD_goto(1, 0);
  1264  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1265  011E  0192               	clrf	i1LCD_goto@y
  1266  011F  3001               	movlw	1
  1267  0120  21B8               	fcall	i1_LCD_goto
  1268                           
  1269                           ;newfile.c: 56:     LCD_wr_char('0' + (tenthSeconds / 100));
  1270  0121  3064               	movlw	100
  1271  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0123  008C               	movwf	___lwdiv@divisor
  1273  0124  3000               	movlw	0
  1274  0125  008D               	movwf	___lwdiv@divisor+1
  1275  0126  082A               	movf	_tenthSeconds+1,w	;volatile
  1276  0127  008F               	movwf	___lwdiv@dividend+1
  1277  0128  0829               	movf	_tenthSeconds,w	;volatile
  1278  0129  008E               	movwf	___lwdiv@dividend
  1279  012A  205C               	fcall	___lwdiv
  1280  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1281  012C  080C               	movf	?___lwdiv,w
  1282  012D  3E30               	addlw	48
  1283  012E  21F9               	fcall	i1_LCD_wr_char
  1284                           
  1285                           ;newfile.c: 58:     LCD_wr_char('0' + ((tenthSeconds / 10) % 10));
  1286  012F  300A               	movlw	10
  1287  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0131  0094               	movwf	___lwmod@divisor
  1289  0132  3000               	movlw	0
  1290  0133  0095               	movwf	___lwmod@divisor+1
  1291  0134  300A               	movlw	10
  1292  0135  008C               	movwf	___lwdiv@divisor
  1293  0136  3000               	movlw	0
  1294  0137  008D               	movwf	___lwdiv@divisor+1
  1295  0138  082A               	movf	_tenthSeconds+1,w	;volatile
  1296  0139  008F               	movwf	___lwdiv@dividend+1
  1297  013A  0829               	movf	_tenthSeconds,w	;volatile
  1298  013B  008E               	movwf	___lwdiv@dividend
  1299  013C  205C               	fcall	___lwdiv
  1300  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1301  013E  080D               	movf	?___lwdiv+1,w
  1302  013F  0097               	movwf	___lwmod@dividend+1
  1303  0140  080C               	movf	?___lwdiv,w
  1304  0141  0096               	movwf	___lwmod@dividend
  1305  0142  215A               	fcall	___lwmod
  1306  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0144  0814               	movf	?___lwmod,w
  1308  0145  3E30               	addlw	48
  1309  0146  21F9               	fcall	i1_LCD_wr_char
  1310                           
  1311                           ;newfile.c: 60:     LCD_wr_char('.');
  1312  0147  302E               	movlw	46
  1313  0148  21F9               	fcall	i1_LCD_wr_char
  1314                           
  1315                           ;newfile.c: 62:     LCD_wr_char('0' + (tenthSeconds % 10));
  1316  0149  300A               	movlw	10
  1317  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1318  014B  0094               	movwf	___lwmod@divisor
  1319  014C  3000               	movlw	0
  1320  014D  0095               	movwf	___lwmod@divisor+1
  1321  014E  082A               	movf	_tenthSeconds+1,w	;volatile
  1322  014F  0097               	movwf	___lwmod@dividend+1
  1323  0150  0829               	movf	_tenthSeconds,w	;volatile
  1324  0151  0096               	movwf	___lwmod@dividend
  1325  0152  215A               	fcall	___lwmod
  1326  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1327  0154  0814               	movf	?___lwmod,w
  1328  0155  3E30               	addlw	48
  1329  0156  21F9               	fcall	i1_LCD_wr_char
  1330                           
  1331                           ;newfile.c: 64:     LCD_wr_char('s');
  1332  0157  3073               	movlw	115
  1333  0158  21F9               	fcall	i1_LCD_wr_char
  1334  0159                     i1l46:	
  1335  0159  0008               	return
  1336  015A                     __end_of_displayTime:	
  1337                           
  1338                           	psect	text10
  1339  01F9                     __ptext10:	
  1340 ;; *************** function i1_LCD_wr_char *****************
  1341 ;; Defined at:
  1342 ;;		line 103 in file "newfile.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  c               1    wreg     unsigned char 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  c               1    8[BANK0 ] unsigned char 
  1347 ;;  LCD_wr_char     1    9[BANK0 ] unsigned char 
  1348 ;;  LCD_wr_char     1    7[BANK0 ] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0, pclath, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0
  1358 ;;      Params:         0       0
  1359 ;;      Locals:         0       3
  1360 ;;      Temps:          0       2
  1361 ;;      Totals:         0       5
  1362 ;;Total ram usage:        5 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    2
  1365 ;; This function calls:
  1366 ;;		i1_out_str_LCD
  1367 ;; This function is called by:
  1368 ;;		_displayTime
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           
  1373                           ;psect for function i1_LCD_wr_char
  1374  01F9                     i1_LCD_wr_char:	
  1375                           
  1376                           ;incstack = 0
  1377                           ; Regs used in i1_LCD_wr_char: [wreg+status,2+status,0+pclath+cstack]
  1378                           ;i1LCD_wr_char@c stored from wreg
  1379  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1380  01FA  0094               	movwf	i1LCD_wr_char@c
  1381  01FB                     i1l970:	
  1382                           
  1383                           ;newfile.c: 103: void LCD_wr_char(char c);newfile.c: 104: {;newfile.c: 105:  char str_H,
      +                           str_L;;newfile.c: 107:  str_H = c & 0xf0;
  1384  01FB  0814               	movf	i1LCD_wr_char@c,w
  1385  01FC  39F0               	andlw	240
  1386  01FD  0091               	movwf	??i1_LCD_wr_char
  1387  01FE  0811               	movf	??i1_LCD_wr_char,w
  1388  01FF  0095               	movwf	i1LCD_wr_char@str_H
  1389  0200                     i1l972:	
  1390                           
  1391                           ;newfile.c: 108:  str_H = str_H >> 4;
  1392  0200  0815               	movf	i1LCD_wr_char@str_H,w
  1393  0201  0091               	movwf	??i1_LCD_wr_char
  1394  0202  3004               	movlw	4
  1395  0203                     u46_25:	
  1396  0203  1003               	clrc
  1397  0204  0C91               	rrf	??i1_LCD_wr_char,f
  1398  0205  3EFF               	addlw	-1
  1399  0206  1D03               	skipz
  1400  0207  2A03               	goto	u46_25
  1401  0208  0811               	movf	??i1_LCD_wr_char,w
  1402  0209  0092               	movwf	??i1_LCD_wr_char+1
  1403  020A  0812               	movf	??i1_LCD_wr_char+1,w
  1404  020B  0095               	movwf	i1LCD_wr_char@str_H
  1405  020C                     i1l974:	
  1406                           
  1407                           ;newfile.c: 109:  str_L = c & 0x0f;
  1408  020C  0814               	movf	i1LCD_wr_char@c,w
  1409  020D  390F               	andlw	15
  1410  020E  0091               	movwf	??i1_LCD_wr_char
  1411  020F  0811               	movf	??i1_LCD_wr_char,w
  1412  0210  0093               	movwf	i1LCD_wr_char@str_L
  1413  0211                     i1l976:	
  1414                           
  1415                           ;newfile.c: 111:  out_str_LCD(str_H);
  1416  0211  0815               	movf	i1LCD_wr_char@str_H,w
  1417  0212  2289               	fcall	i1_out_str_LCD
  1418  0213                     i1l978:	
  1419                           
  1420                           ;newfile.c: 112:  out_str_LCD(str_L);
  1421  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0214  0813               	movf	i1LCD_wr_char@str_L,w
  1423  0215  2289               	fcall	i1_out_str_LCD
  1424  0216                     i1l61:	
  1425  0216  0008               	return
  1426  0217                     __end_ofi1_LCD_wr_char:	
  1427                           
  1428                           	psect	text11
  1429  0289                     __ptext11:	
  1430 ;; *************** function i1_out_str_LCD *****************
  1431 ;; Defined at:
  1432 ;;		line 125 in file "newfile.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  out_data        1    wreg     unsigned char 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  out_data        1    4[BANK0 ] unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0
  1446 ;;      Params:         0       0
  1447 ;;      Locals:         0       1
  1448 ;;      Temps:          0       1
  1449 ;;      Totals:         0       2
  1450 ;;Total ram usage:        2 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    1
  1453 ;; This function calls:
  1454 ;;		i1_out_LCD
  1455 ;; This function is called by:
  1456 ;;		i1_LCD_wr_char
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function i1_out_str_LCD
  1462  0289                     i1_out_str_LCD:	
  1463                           
  1464                           ;incstack = 0
  1465                           ; Regs used in i1_out_str_LCD: [wreg+status,2+status,0+pclath+cstack]
  1466                           ;i1out_str_LCD@out_data stored from wreg
  1467  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1468  028A  0090               	movwf	i1out_str_LCD@out_data
  1469  028B                     i1l880:	
  1470                           
  1471                           ;newfile.c: 125: void out_str_LCD(unsigned char out_data);newfile.c: 126: {;newfile.c: 1
      +                          27:  out_LCD(out_data);
  1472  028B  0810               	movf	i1out_str_LCD@out_data,w
  1473  028C  20DF               	fcall	i1_out_LCD
  1474  028D                     i1l882:	
  1475                           
  1476                           ;newfile.c: 128:  PORTBbits.RB0 = 1; PORTBbits.RB1 = 1;
  1477  028D  1283               	bcf	3,5	;RP0=0, select bank0
  1478  028E  1406               	bsf	6,0	;volatile
  1479  028F                     i1l884:	
  1480  028F  1486               	bsf	6,1	;volatile
  1481  0290                     i1l886:	
  1482                           
  1483                           ;newfile.c: 129:  PORTBbits.RB1 = 0;
  1484  0290  1086               	bcf	6,1	;volatile
  1485  0291                     i1l888:	
  1486                           
  1487                           ;newfile.c: 130:  _delay((unsigned long)((100)*(10000000/4000000.0)));
  1488  0291  3053               	movlw	83
  1489  0292  008F               	movwf	??i1_out_str_LCD
  1490  0293                     u58_27:	
  1491  0293  0B8F               	decfsz	??i1_out_str_LCD,f
  1492  0294  2A93               	goto	u58_27
  1493  0295                     i1l67:	
  1494  0295  0008               	return
  1495  0296                     __end_ofi1_out_str_LCD:	
  1496                           
  1497                           	psect	text12
  1498  01B8                     __ptext12:	
  1499 ;; *************** function i1_LCD_goto *****************
  1500 ;; Defined at:
  1501 ;;		line 46 in file "newfile.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  x               1    wreg     unsigned char 
  1504 ;;  y               1    6[BANK0 ] unsigned char 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  x               1    8[BANK0 ] unsigned char 
  1507 ;;  LCD_goto        1   11[BANK0 ] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, pclath, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0
  1517 ;;      Params:         0       1
  1518 ;;      Locals:         0       4
  1519 ;;      Temps:          0       1
  1520 ;;      Totals:         0       6
  1521 ;;Total ram usage:        6 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    2
  1524 ;; This function calls:
  1525 ;;		i1_out_inst_LCD
  1526 ;; This function is called by:
  1527 ;;		_displayTime
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           
  1532                           ;psect for function i1_LCD_goto
  1533  01B8                     i1_LCD_goto:	
  1534                           
  1535                           ;incstack = 0
  1536                           ; Regs used in i1_LCD_goto: [wreg+status,2+status,0+pclath+cstack]
  1537                           ;i1LCD_goto@x stored from wreg
  1538  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1539  01B9  0094               	movwf	i1LCD_goto@x
  1540  01BA                     i1l958:	
  1541                           
  1542                           ;newfile.c: 47:     unsigned char pos = 0x80 | (x ? 0x40 : 0x00) | y;
  1543  01BA  0814               	movf	i1LCD_goto@x,w
  1544  01BB  1D03               	btfss	3,2
  1545  01BC  29BE               	goto	u44_21
  1546  01BD  29BF               	goto	u44_20
  1547  01BE                     u44_21:	
  1548  01BE  29C2               	goto	i1l962
  1549  01BF                     u44_20:	
  1550  01BF                     i1l960:	
  1551  01BF  0195               	clrf	i1_LCD_goto$84
  1552  01C0  0196               	clrf	i1_LCD_goto$84+1
  1553  01C1  29C6               	goto	i1l964
  1554  01C2                     i1l962:	
  1555  01C2  3040               	movlw	64
  1556  01C3  0095               	movwf	i1_LCD_goto$84
  1557  01C4  3000               	movlw	0
  1558  01C5  0096               	movwf	i1_LCD_goto$84+1
  1559  01C6                     i1l964:	
  1560  01C6  0815               	movf	i1_LCD_goto$84,w
  1561  01C7  0412               	iorwf	i1LCD_goto@y,w
  1562  01C8  3880               	iorlw	128
  1563  01C9  0093               	movwf	??i1_LCD_goto
  1564  01CA  0813               	movf	??i1_LCD_goto,w
  1565  01CB  0097               	movwf	i1LCD_goto@pos
  1566  01CC                     i1l966:	
  1567                           
  1568                           ;newfile.c: 48:     out_inst_LCD(pos >> 4);
  1569  01CC  0817               	movf	i1LCD_goto@pos,w
  1570  01CD  0093               	movwf	??i1_LCD_goto
  1571  01CE  3004               	movlw	4
  1572  01CF                     u45_25:	
  1573  01CF  1003               	clrc
  1574  01D0  0C93               	rrf	??i1_LCD_goto,f
  1575  01D1  3EFF               	addlw	-1
  1576  01D2  1D03               	skipz
  1577  01D3  29CF               	goto	u45_25
  1578  01D4  0813               	movf	??i1_LCD_goto,w
  1579  01D5  225D               	fcall	i1_out_inst_LCD
  1580  01D6                     i1l968:	
  1581                           
  1582                           ;newfile.c: 49:     out_inst_LCD(pos & 0x0F);
  1583  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1584  01D7  0817               	movf	i1LCD_goto@pos,w
  1585  01D8  390F               	andlw	15
  1586  01D9  225D               	fcall	i1_out_inst_LCD
  1587  01DA                     i1l43:	
  1588  01DA  0008               	return
  1589  01DB                     __end_ofi1_LCD_goto:	
  1590                           
  1591                           	psect	text13
  1592  025D                     __ptext13:	
  1593 ;; *************** function i1_out_inst_LCD *****************
  1594 ;; Defined at:
  1595 ;;		line 116 in file "newfile.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;  out_data        1    wreg     unsigned char 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  out_data        1    5[BANK0 ] unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0, pclath, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0
  1609 ;;      Params:         0       0
  1610 ;;      Locals:         0       1
  1611 ;;      Temps:          0       2
  1612 ;;      Totals:         0       3
  1613 ;;Total ram usage:        3 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    1
  1616 ;; This function calls:
  1617 ;;		i1_out_LCD
  1618 ;; This function is called by:
  1619 ;;		i1_LCD_goto
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           
  1624                           ;psect for function i1_out_inst_LCD
  1625  025D                     i1_out_inst_LCD:	
  1626                           
  1627                           ;incstack = 0
  1628                           ; Regs used in i1_out_inst_LCD: [wreg+status,2+status,0+pclath+cstack]
  1629                           ;i1out_inst_LCD@out_data stored from wreg
  1630  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1631  025E  0091               	movwf	i1out_inst_LCD@out_data
  1632  025F                     i1l870:	
  1633                           
  1634                           ;newfile.c: 116: void out_inst_LCD(unsigned char out_data);newfile.c: 117: {;newfile.c: 
      +                          118:  out_LCD(out_data);
  1635  025F  0811               	movf	i1out_inst_LCD@out_data,w
  1636  0260  20DF               	fcall	i1_out_LCD
  1637  0261                     i1l872:	
  1638                           
  1639                           ;newfile.c: 119:  PORTBbits.RB0 = 0; PORTBbits.RB1 = 1;
  1640  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0262  1006               	bcf	6,0	;volatile
  1642  0263                     i1l874:	
  1643  0263  1486               	bsf	6,1	;volatile
  1644  0264                     i1l876:	
  1645                           
  1646                           ;newfile.c: 120:  PORTBbits.RB1 = 0;
  1647  0264  1086               	bcf	6,1	;volatile
  1648  0265                     i1l878:	
  1649                           
  1650                           ;newfile.c: 121:  _delay((unsigned long)((5)*(10000000/4000.0)));
  1651  0265  3011               	movlw	17
  1652  0266  0090               	movwf	??i1_out_inst_LCD+1
  1653  0267  303A               	movlw	58
  1654  0268  008F               	movwf	??i1_out_inst_LCD
  1655  0269                     u59_27:	
  1656  0269  0B8F               	decfsz	??i1_out_inst_LCD,f
  1657  026A  2A69               	goto	u59_27
  1658  026B  0B90               	decfsz	??i1_out_inst_LCD+1,f
  1659  026C  2A69               	goto	u59_27
  1660  026D  0000               	nop
  1661  026E                     i1l64:	
  1662  026E  0008               	return
  1663  026F                     __end_ofi1_out_inst_LCD:	
  1664                           
  1665                           	psect	text14
  1666  00DF                     __ptext14:	
  1667 ;; *************** function i1_out_LCD *****************
  1668 ;; Defined at:
  1669 ;;		line 134 in file "newfile.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  data            1    wreg     unsigned char 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  data            1    2[BANK0 ] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0
  1683 ;;      Params:         0       0
  1684 ;;      Locals:         0       1
  1685 ;;      Temps:          0       2
  1686 ;;      Totals:         0       3
  1687 ;;Total ram usage:        3 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		i1_out_inst_LCD
  1693 ;;		i1_out_str_LCD
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           
  1698                           ;psect for function i1_out_LCD
  1699  00DF                     i1_out_LCD:	
  1700                           
  1701                           ;incstack = 0
  1702                           ; Regs used in i1_out_LCD: [wreg+status,2+status,0]
  1703                           ;i1out_LCD@data stored from wreg
  1704  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1705  00E0  008E               	movwf	i1out_LCD@data
  1706  00E1                     i1l866:	
  1707                           
  1708                           ;newfile.c: 134: void out_LCD(unsigned char data);newfile.c: 135: {;newfile.c: 137:     
      +                          PORTBbits.RB4 = (data & 0x01);
  1709  00E1  080E               	movf	i1out_LCD@data,w
  1710  00E2  3901               	andlw	1
  1711  00E3  008C               	movwf	??i1_out_LCD
  1712  00E4  0E8C               	swapf	??i1_out_LCD,f
  1713  00E5  0806               	movf	6,w	;volatile
  1714  00E6  060C               	xorwf	??i1_out_LCD,w
  1715  00E7  39EF               	andlw	-17
  1716  00E8  060C               	xorwf	??i1_out_LCD,w
  1717  00E9  0086               	movwf	6	;volatile
  1718                           
  1719                           ;newfile.c: 138:     PORTBbits.RB5 = (data & 0x02) >> 1;
  1720  00EA  080E               	movf	i1out_LCD@data,w
  1721  00EB  008C               	movwf	??i1_out_LCD
  1722  00EC  1003               	clrc
  1723  00ED  0C0C               	rrf	??i1_out_LCD,w
  1724  00EE  3901               	andlw	1
  1725  00EF  008D               	movwf	??i1_out_LCD+1
  1726  00F0  0E8D               	swapf	??i1_out_LCD+1,f
  1727  00F1  0D8D               	rlf	??i1_out_LCD+1,f
  1728  00F2  0806               	movf	6,w	;volatile
  1729  00F3  060D               	xorwf	??i1_out_LCD+1,w
  1730  00F4  39DF               	andlw	-33
  1731  00F5  060D               	xorwf	??i1_out_LCD+1,w
  1732  00F6  0086               	movwf	6	;volatile
  1733                           
  1734                           ;newfile.c: 139:     PORTBbits.RB6 = (data & 0x04) >> 2;
  1735  00F7  080E               	movf	i1out_LCD@data,w
  1736  00F8  008C               	movwf	??i1_out_LCD
  1737  00F9  3002               	movlw	2
  1738  00FA                     u27_25:	
  1739  00FA  1003               	clrc
  1740  00FB  0C8C               	rrf	??i1_out_LCD,f
  1741  00FC  3EFF               	addlw	-1
  1742  00FD  1D03               	skipz
  1743  00FE  28FA               	goto	u27_25
  1744  00FF  080C               	movf	??i1_out_LCD,w
  1745  0100  3901               	andlw	1
  1746  0101  008D               	movwf	??i1_out_LCD+1
  1747  0102  0E8D               	swapf	??i1_out_LCD+1,f
  1748  0103  0D8D               	rlf	??i1_out_LCD+1,f
  1749  0104  0D8D               	rlf	??i1_out_LCD+1,f
  1750  0105  0806               	movf	6,w	;volatile
  1751  0106  060D               	xorwf	??i1_out_LCD+1,w
  1752  0107  39BF               	andlw	-65
  1753  0108  060D               	xorwf	??i1_out_LCD+1,w
  1754  0109  0086               	movwf	6	;volatile
  1755                           
  1756                           ;newfile.c: 140:     PORTBbits.RB7 = (data & 0x08) >> 3;
  1757  010A  080E               	movf	i1out_LCD@data,w
  1758  010B  008C               	movwf	??i1_out_LCD
  1759  010C  3003               	movlw	3
  1760  010D                     u28_25:	
  1761  010D  1003               	clrc
  1762  010E  0C8C               	rrf	??i1_out_LCD,f
  1763  010F  3EFF               	addlw	-1
  1764  0110  1D03               	skipz
  1765  0111  290D               	goto	u28_25
  1766  0112  080C               	movf	??i1_out_LCD,w
  1767  0113  3901               	andlw	1
  1768  0114  008D               	movwf	??i1_out_LCD+1
  1769  0115  0C8D               	rrf	??i1_out_LCD+1,f
  1770  0116  0C8D               	rrf	??i1_out_LCD+1,f
  1771  0117  0806               	movf	6,w	;volatile
  1772  0118  060D               	xorwf	??i1_out_LCD+1,w
  1773  0119  397F               	andlw	-129
  1774  011A  060D               	xorwf	??i1_out_LCD+1,w
  1775  011B  0086               	movwf	6	;volatile
  1776  011C                     i1l70:	
  1777  011C  0008               	return
  1778  011D                     __end_ofi1_out_LCD:	
  1779                           
  1780                           	psect	text15
  1781  015A                     __ptext15:	
  1782 ;; *************** function ___lwmod *****************
  1783 ;; Defined at:
  1784 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  divisor         2    8[BANK0 ] unsigned int 
  1787 ;;  dividend        2   10[BANK0 ] unsigned int 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  counter         1   13[BANK0 ] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  2    8[BANK0 ] unsigned int 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0
  1799 ;;      Params:         0       4
  1800 ;;      Locals:         0       1
  1801 ;;      Temps:          0       1
  1802 ;;      Totals:         0       6
  1803 ;;Total ram usage:        6 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_displayTime
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function ___lwmod
  1814  015A                     ___lwmod:	
  1815  015A                     i1l936:	
  1816                           ;incstack = 0
  1817                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1818                           
  1819  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1820  015B  0814               	movf	___lwmod@divisor,w
  1821  015C  0415               	iorwf	___lwmod@divisor+1,w
  1822  015D  1903               	btfsc	3,2
  1823  015E  2960               	goto	u38_21
  1824  015F  2961               	goto	u38_20
  1825  0160                     u38_21:	
  1826  0160  2990               	goto	i1l954
  1827  0161                     u38_20:	
  1828  0161                     i1l938:	
  1829  0161  0199               	clrf	___lwmod@counter
  1830  0162  0A99               	incf	___lwmod@counter,f
  1831  0163  296F               	goto	i1l944
  1832  0164                     i1l940:	
  1833  0164  3001               	movlw	1
  1834  0165                     u39_25:	
  1835  0165  1003               	clrc
  1836  0166  0D94               	rlf	___lwmod@divisor,f
  1837  0167  0D95               	rlf	___lwmod@divisor+1,f
  1838  0168  3EFF               	addlw	-1
  1839  0169  1D03               	skipz
  1840  016A  2965               	goto	u39_25
  1841  016B                     i1l942:	
  1842  016B  3001               	movlw	1
  1843  016C  0098               	movwf	??___lwmod
  1844  016D  0818               	movf	??___lwmod,w
  1845  016E  0799               	addwf	___lwmod@counter,f
  1846  016F                     i1l944:	
  1847  016F  1F95               	btfss	___lwmod@divisor+1,7
  1848  0170  2972               	goto	u40_21
  1849  0171  2973               	goto	u40_20
  1850  0172                     u40_21:	
  1851  0172  2964               	goto	i1l940
  1852  0173                     u40_20:	
  1853  0173                     i1l946:	
  1854  0173  0815               	movf	___lwmod@divisor+1,w
  1855  0174  0217               	subwf	___lwmod@dividend+1,w
  1856  0175  1D03               	skipz
  1857  0176  2979               	goto	u41_25
  1858  0177  0814               	movf	___lwmod@divisor,w
  1859  0178  0216               	subwf	___lwmod@dividend,w
  1860  0179                     u41_25:	
  1861  0179  1C03               	skipc
  1862  017A  297C               	goto	u41_21
  1863  017B  297D               	goto	u41_20
  1864  017C                     u41_21:	
  1865  017C  2983               	goto	i1l950
  1866  017D                     u41_20:	
  1867  017D                     i1l948:	
  1868  017D  0814               	movf	___lwmod@divisor,w
  1869  017E  0296               	subwf	___lwmod@dividend,f
  1870  017F  0815               	movf	___lwmod@divisor+1,w
  1871  0180  1C03               	skipc
  1872  0181  0397               	decf	___lwmod@dividend+1,f
  1873  0182  0297               	subwf	___lwmod@dividend+1,f
  1874  0183                     i1l950:	
  1875  0183  3001               	movlw	1
  1876  0184                     u42_25:	
  1877  0184  1003               	clrc
  1878  0185  0C95               	rrf	___lwmod@divisor+1,f
  1879  0186  0C94               	rrf	___lwmod@divisor,f
  1880  0187  3EFF               	addlw	-1
  1881  0188  1D03               	skipz
  1882  0189  2984               	goto	u42_25
  1883  018A                     i1l952:	
  1884  018A  3001               	movlw	1
  1885  018B  0299               	subwf	___lwmod@counter,f
  1886  018C  1D03               	btfss	3,2
  1887  018D  298F               	goto	u43_21
  1888  018E  2990               	goto	u43_20
  1889  018F                     u43_21:	
  1890  018F  2973               	goto	i1l946
  1891  0190                     u43_20:	
  1892  0190                     i1l954:	
  1893  0190  0817               	movf	___lwmod@dividend+1,w
  1894  0191  0095               	movwf	?___lwmod+1
  1895  0192  0816               	movf	___lwmod@dividend,w
  1896  0193  0094               	movwf	?___lwmod
  1897  0194                     i1l446:	
  1898  0194  0008               	return
  1899  0195                     __end_of___lwmod:	
  1900                           
  1901                           	psect	text16
  1902  005C                     __ptext16:	
  1903 ;; *************** function ___lwdiv *****************
  1904 ;; Defined at:
  1905 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  divisor         2    0[BANK0 ] unsigned int 
  1908 ;;  dividend        2    2[BANK0 ] unsigned int 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  quotient        2    5[BANK0 ] unsigned int 
  1911 ;;  counter         1    7[BANK0 ] unsigned char 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  2    0[BANK0 ] unsigned int 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0
  1921 ;;      Params:         0       4
  1922 ;;      Locals:         0       3
  1923 ;;      Temps:          0       1
  1924 ;;      Totals:         0       8
  1925 ;;Total ram usage:        8 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_displayTime
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           
  1935                           ;psect for function ___lwdiv
  1936  005C                     ___lwdiv:	
  1937  005C                     i1l910:	
  1938                           ;incstack = 0
  1939                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1940                           
  1941  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1942  005D  0191               	clrf	___lwdiv@quotient
  1943  005E  0192               	clrf	___lwdiv@quotient+1
  1944  005F                     i1l912:	
  1945  005F  080C               	movf	___lwdiv@divisor,w
  1946  0060  040D               	iorwf	___lwdiv@divisor+1,w
  1947  0061  1903               	btfsc	3,2
  1948  0062  2864               	goto	u31_21
  1949  0063  2865               	goto	u31_20
  1950  0064                     u31_21:	
  1951  0064  289C               	goto	i1l932
  1952  0065                     u31_20:	
  1953  0065                     i1l914:	
  1954  0065  0193               	clrf	___lwdiv@counter
  1955  0066  0A93               	incf	___lwdiv@counter,f
  1956  0067  2873               	goto	i1l920
  1957  0068                     i1l916:	
  1958  0068  3001               	movlw	1
  1959  0069                     u32_25:	
  1960  0069  1003               	clrc
  1961  006A  0D8C               	rlf	___lwdiv@divisor,f
  1962  006B  0D8D               	rlf	___lwdiv@divisor+1,f
  1963  006C  3EFF               	addlw	-1
  1964  006D  1D03               	skipz
  1965  006E  2869               	goto	u32_25
  1966  006F                     i1l918:	
  1967  006F  3001               	movlw	1
  1968  0070  0090               	movwf	??___lwdiv
  1969  0071  0810               	movf	??___lwdiv,w
  1970  0072  0793               	addwf	___lwdiv@counter,f
  1971  0073                     i1l920:	
  1972  0073  1F8D               	btfss	___lwdiv@divisor+1,7
  1973  0074  2876               	goto	u33_21
  1974  0075  2877               	goto	u33_20
  1975  0076                     u33_21:	
  1976  0076  2868               	goto	i1l916
  1977  0077                     u33_20:	
  1978  0077                     i1l922:	
  1979  0077  3001               	movlw	1
  1980  0078                     u34_25:	
  1981  0078  1003               	clrc
  1982  0079  0D91               	rlf	___lwdiv@quotient,f
  1983  007A  0D92               	rlf	___lwdiv@quotient+1,f
  1984  007B  3EFF               	addlw	-1
  1985  007C  1D03               	skipz
  1986  007D  2878               	goto	u34_25
  1987  007E  080D               	movf	___lwdiv@divisor+1,w
  1988  007F  020F               	subwf	___lwdiv@dividend+1,w
  1989  0080  1D03               	skipz
  1990  0081  2884               	goto	u35_25
  1991  0082  080C               	movf	___lwdiv@divisor,w
  1992  0083  020E               	subwf	___lwdiv@dividend,w
  1993  0084                     u35_25:	
  1994  0084  1C03               	skipc
  1995  0085  2887               	goto	u35_21
  1996  0086  2888               	goto	u35_20
  1997  0087                     u35_21:	
  1998  0087  288F               	goto	i1l928
  1999  0088                     u35_20:	
  2000  0088                     i1l924:	
  2001  0088  080C               	movf	___lwdiv@divisor,w
  2002  0089  028E               	subwf	___lwdiv@dividend,f
  2003  008A  080D               	movf	___lwdiv@divisor+1,w
  2004  008B  1C03               	skipc
  2005  008C  038F               	decf	___lwdiv@dividend+1,f
  2006  008D  028F               	subwf	___lwdiv@dividend+1,f
  2007  008E                     i1l926:	
  2008  008E  1411               	bsf	___lwdiv@quotient,0
  2009  008F                     i1l928:	
  2010  008F  3001               	movlw	1
  2011  0090                     u36_25:	
  2012  0090  1003               	clrc
  2013  0091  0C8D               	rrf	___lwdiv@divisor+1,f
  2014  0092  0C8C               	rrf	___lwdiv@divisor,f
  2015  0093  3EFF               	addlw	-1
  2016  0094  1D03               	skipz
  2017  0095  2890               	goto	u36_25
  2018  0096                     i1l930:	
  2019  0096  3001               	movlw	1
  2020  0097  0293               	subwf	___lwdiv@counter,f
  2021  0098  1D03               	btfss	3,2
  2022  0099  289B               	goto	u37_21
  2023  009A  289C               	goto	u37_20
  2024  009B                     u37_21:	
  2025  009B  2877               	goto	i1l922
  2026  009C                     u37_20:	
  2027  009C                     i1l932:	
  2028  009C  0812               	movf	___lwdiv@quotient+1,w
  2029  009D  008D               	movwf	?___lwdiv+1
  2030  009E  0811               	movf	___lwdiv@quotient,w
  2031  009F  008C               	movwf	?___lwdiv
  2032  00A0                     i1l436:	
  2033  00A0  0008               	return
  2034  00A1                     __end_of___lwdiv:	
  2035  004E                     btemp	set	78	;btemp
  2036  004E                     wtemp0	set	78


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     29      32

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_goto
    _init_LCD->_out_inst_LCD
    _LCD_wr_char->_out_str_LCD
    _out_str_LCD->_out_LCD
    _LCD_goto->_out_inst_LCD
    _out_inst_LCD->_out_LCD

Critical Paths under _ISR in BANK0

    _displayTime->___lwmod
    i1_LCD_wr_char->i1_out_str_LCD
    i1_out_str_LCD->i1_out_LCD
    i1_LCD_goto->i1_out_inst_LCD
    i1_out_inst_LCD->i1_out_LCD
    ___lwmod->___lwdiv

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     728
                           _LCD_goto
                        _LCD_wr_char
                           _init_LCD
                         _startTimer
 ---------------------------------------------------------------------------------
 (1) _startTimer                                           1     1      0       0
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             4     4      0     156
                                             23 BANK0      4     4      0
                       _out_inst_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_wr_char                                          5     5      0     223
                                             22 BANK0      5     5      0
                        _out_str_LCD
 ---------------------------------------------------------------------------------
 (2) _out_str_LCD                                          2     2      0     110
                                             20 BANK0      2     2      0
                            _out_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_goto                                             6     5      1     349
                                             23 BANK0      6     5      1
                       _out_inst_LCD
 ---------------------------------------------------------------------------------
 (2) _out_inst_LCD                                         3     3      0     110
                                             20 BANK0      3     3      0
                            _out_LCD
 ---------------------------------------------------------------------------------
 (3) _out_LCD                                              3     3      0      88
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0    1401
                                             14 BANK0      3     3      0
                        _displayTime
 ---------------------------------------------------------------------------------
 (5) _displayTime                                          0     0      0    1401
                            ___lwdiv
                            ___lwmod
                         i1_LCD_goto
                      i1_LCD_wr_char
 ---------------------------------------------------------------------------------
 (6) i1_LCD_wr_char                                        5     5      0     223
                                              5 BANK0      5     5      0
                      i1_out_str_LCD
 ---------------------------------------------------------------------------------
 (7) i1_out_str_LCD                                        2     2      0     110
                                              3 BANK0      2     2      0
                          i1_out_LCD
 ---------------------------------------------------------------------------------
 (6) i1_LCD_goto                                           6     5      1     249
                                              6 BANK0      6     5      1
                     i1_out_inst_LCD
 ---------------------------------------------------------------------------------
 (7) i1_out_inst_LCD                                       3     3      0     110
                                              3 BANK0      3     3      0
                          i1_out_LCD
 ---------------------------------------------------------------------------------
 (8) i1_out_LCD                                            3     3      0      88
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     463
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_goto
     _out_inst_LCD
       _out_LCD
   _LCD_wr_char
     _out_str_LCD
       _out_LCD
   _init_LCD
     _out_inst_LCD
       _out_LCD
   _startTimer

 _ISR (ROOT)
   _displayTime
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     i1_LCD_goto
       i1_out_inst_LCD
         i1_out_LCD
     i1_LCD_wr_char
       i1_out_str_LCD
         i1_out_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42     1D      20       3       48.5%
ABS                  0      0      20       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0      20       6        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 07 10:58:34 2025

           _out_inst_LCD 024B             ?_displayTime 000C              __CFG_CP$OFF 0000  
                     l33 027B                       l43 01B7                       l61 01F8  
                     l70 00DE                       l64 025C                       l58 005B  
                     l67 0288                       l75 0249                       l76 0249  
            _out_str_LCD 027C                      l900 027E                      l902 0280  
                    l904 0282                      l906 0283                      l908 0284  
                    l890 024D                      l868 00A3                      l892 024F  
                    l980 026F                      l894 0251                      l990 019C  
                    l982 0271                      l896 0252                      l992 019F  
                    l984 0274                      l898 0253                      l994 01A3  
                    l986 0276                      l996 01A9                      l988 0197  
                    l998 01B3                      u305 00CF                      u500 003F  
                    u501 003E                      u505 003B                      _ISR 0217  
                    u470 019C                      u295 00BC                      u471 019B  
                    u537 0017                      u547 0026                      u485 01AC  
                    u557 0056                      u567 0286                      u495 01E5  
                    u577 0257             __CFG_FOSC$HS 0000                     ?_ISR 000C  
                   l1010 01F5                     l1002 01DD                     l1004 01E2  
                   l1020 001F                     l1012 0012                     l1006 01EE  
                   l1030 0051                     l1022 0021                     l1014 001C  
                   l1008 01F3                     l1024 002B                     l1040 0233  
                   l1026 0032                     l1050 0242                     l1042 0239  
                   l1028 003F                     l1052 0244                     l1044 023A  
                   l1054 0246                     l1046 023E                     l1056 0248  
                   l1048 0240                     i1l43 01DA                     i1l61 0216  
                   i1l53 022B                     i1l70 011C                     i1l46 0159  
                   i1l64 026E                     i1l67 0295                     _TMR0 0001  
            ?i1_LCD_goto 0012                     _main 0233                     btemp 004E  
                   start 000B             ?_LCD_wr_char 000C                    ??_ISR 001A  
  __end_ofi1_out_str_LCD 0296           i1_out_inst_LCD 025D         __end_of_LCD_goto 01B8  
                  ?_main 000C            __CFG_WDTE$OFF 0000          __end_of___lwdiv 00A1  
        __end_of___lwmod 0195                    i1l436 00A0                    i1l446 0194  
                  i1l910 005C                    i1l920 0073                    i1l912 005F  
                  i1l930 0096                    i1l922 0077                    i1l914 0065  
                  i1l924 0088                    i1l916 0068                    i1l932 009C  
                  i1l940 0164                    i1l926 008E                    i1l918 006F  
                  i1l950 0183                    i1l942 016B                    i1l870 025F  
                  i1l928 008F                    i1l952 018A                    i1l944 016F  
                  i1l936 015A                    i1l872 0261                    i1l960 01BF  
                  i1l880 028B                    i1l946 0173                    i1l938 0161  
                  i1l954 0190                    i1l866 00E1                    i1l874 0263  
                  i1l962 01C2                    i1l882 028D                    i1l970 01FB  
                  i1l948 017D                    i1l876 0264                    i1l964 01C6  
                  i1l884 028F                    i1l972 0200                    i1l878 0265  
                  i1l966 01CC                    i1l958 01BA                    i1l886 0290  
                  i1l974 020C                    i1l968 01D6                    i1l888 0291  
                  i1l976 0211                    i1l978 0213                    u31_20 0065  
                  u31_21 0064                    u40_20 0173                    u40_21 0172  
                  u32_25 0069                    u33_20 0077                    u41_20 017D  
                  u33_21 0076                    u41_21 017C                    u41_25 0179  
                  u34_25 0078                    u42_25 0184                    u35_20 0088  
                  u43_20 0190                    u51_20 021B                    u35_21 0087  
                  u43_21 018F                    u51_21 021A                    _PORTA 0005  
                  _PORTB 0006                    u35_25 0084                    u27_25 00FA  
                  u44_20 01BF                    u52_20 0224                    u44_21 01BE  
                  u52_21 0223                    u36_25 0090                    u28_25 010D  
                  u37_20 009C                    u37_21 009B                    u45_25 01CF  
                  u38_20 0161                    u38_21 0160                    u46_25 0203  
                  u39_25 0165                    _TRISA 0085                    _TRISB 0086  
                  u58_27 0293                    u59_27 0269                    pclath 000A  
        __end_of_out_LCD 00DF                    status 0003                    wtemp0 004E  
       LCD_wr_char@str_H 0026         LCD_wr_char@str_L 0024          __initialization 000C  
            LCD_goto@pos 0028             __end_of_main 024B   __end_ofi1_out_inst_LCD 026F  
     __size_ofi1_out_LCD 003E                   ??_main 0000      __size_ofi1_LCD_goto 0023  
                 i1l1000 011D                   i1l1032 0217                   i1l1034 021B  
                 i1l1036 0224                   i1l1038 022A                   _INTCON 000B  
 i1out_inst_LCD@out_data 0011           __CFG_PWRTE$OFF 0000          ?i1_out_inst_LCD 000C  
              ??___lwdiv 0010         __end_of_init_LCD 005C                ??___lwmod 0018  
   __size_of_displayTime 003D                   saved_w 004E                ??_out_LCD 001D  
 __size_ofi1_LCD_wr_char 001E        __end_ofi1_out_LCD 011D  __end_of__initialization 0010  
              ?_LCD_goto 0023     out_inst_LCD@out_data 0022           __pcstackCOMMON 0000  
   __size_of_LCD_wr_char 001E             ?_out_str_LCD 000C                LCD_goto@x 0025  
              LCD_goto@y 0023               __pbssBANK0 0029             ??i1_LCD_goto 0013  
          i1_LCD_goto$84 0015       i1LCD_wr_char@str_H 0015       i1LCD_wr_char@str_L 0013  
           LCD_wr_char@c 0025               ??_LCD_goto 0024               __pmaintext 0233  
          i1_LCD_wr_char 01F9               __pintentry 0004       __end_ofi1_LCD_goto 01DB  
  i1out_str_LCD@out_data 0010                ?_init_LCD 000C           i1LCD_wr_char@c 0014  
         ?i1_LCD_wr_char 000C                  ___lwdiv 005C                  ___lwmod 015A  
                __ptext1 026F                  __ptext2 0012                  __ptext3 01DB  
                __ptext4 027C                  __ptext5 0195                  __ptext6 024B  
                __ptext7 00A1                  __ptext8 0217                  __ptext9 011D  
           __size_of_ISR 001C              out_LCD@data 001F                  _out_LCD 00A1  
   end_of_initialization 0010               ??_init_LCD 0023   __size_ofi1_out_str_LCD 000D  
       ??i1_out_inst_LCD 000F                _PORTBbits 0006     __size_of_out_str_LCD 000D  
             _startTimer 026F          ??i1_LCD_wr_char 0011                i1_out_LCD 00DF  
      __size_of_LCD_goto 0023            ?_out_inst_LCD 000C            ??_displayTime 0000  
          i1_out_str_LCD 0289      start_initialization 000C              __end_of_ISR 0233  
          ??_LCD_wr_char 0022               ?i1_out_LCD 000C           ??_out_inst_LCD 0020  
         ?i1_out_str_LCD 000C      __end_of_displayTime 015A                ___latbits 0000  
          __pcstackBANK0 000C              ?_startTimer 000C        __size_of_init_LCD 004A  
       ___lwdiv@dividend 000E              i1LCD_goto@x 0014              i1LCD_goto@y 0012  
          i1LCD_goto@pos 0017                 ?___lwdiv 000C                 ?___lwmod 0014  
    __end_of_LCD_wr_char 01F9                 ?_out_LCD 000C         ___lwdiv@quotient 0011  
      interrupt_function 0004                 _LCD_goto 0195              ??i1_out_LCD 000C  
        ??i1_out_str_LCD 000F              _displayTime 011D      __size_of_startTimer 000D  
   __end_of_out_inst_LCD 025D              _LCD_goto$84 0026                init_LCD@i 0025  
            _LCD_wr_char 01DB            ??_out_str_LCD 0020         __size_of___lwdiv 0045  
       __size_of___lwmod 003B          ___lwdiv@divisor 000C          ___lwdiv@counter 0013  
               __ptext10 01F9                 __ptext11 0289                 __ptext12 01B8  
               __ptext13 025D                 __ptext14 00DF                 __ptext15 015A  
               __ptext16 005C         __size_of_out_LCD 003E                 _init_LCD 0012  
          __size_of_main 0018    __end_ofi1_LCD_wr_char 0217  __size_ofi1_out_inst_LCD 0012  
    __end_of_out_str_LCD 0289             _tenthSeconds 0029             ??_startTimer 001D  
    out_str_LCD@out_data 0021                 intlevel1 0000               i1_LCD_goto 01B8  
       ___lwmod@dividend 0016             _timerRunning 002B       __end_of_startTimer 027C  
             _OPTION_REG 0081    __size_of_out_inst_LCD 0012          ___lwmod@divisor 0014  
        ___lwmod@counter 0019            i1out_LCD@data 000E  
